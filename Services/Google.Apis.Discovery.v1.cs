//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Discovery.v1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class DirectoryList : Google.Apis.Requests.IDirectResponseSchema {
        
        private string discoveryVersion;
        
        private System.Collections.Generic.IList<DirectoryList.ItemsData> items;
        
        private string kind;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>Indicate the version of the Discovery API used to generate this doc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("discoveryVersion")]
        public virtual string DiscoveryVersion {
            get {
                return this.discoveryVersion;
            }
            set {
                this.discoveryVersion = value;
            }
        }
        
        /// <summary>The individual directory entries. One entry per api/version pair.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<DirectoryList.ItemsData> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>The kind for this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
        
        public class ItemsData {
            
            private string description;
            
            private string discoveryLink;
            
            private string discoveryRestUrl;
            
            private string documentationLink;
            
            private ItemsData.IconsData icons;
            
            private string id;
            
            private string kind;
            
            private System.Collections.Generic.IList<string> labels;
            
            private string name;
            
            private System.Nullable<bool> preferred;
            
            private string title;
            
            private string version;
            
            /// <summary>The description of this API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("description")]
            public virtual string Description {
                get {
                    return this.description;
                }
                set {
                    this.description = value;
                }
            }
            
            /// <summary>A link to the discovery document.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("discoveryLink")]
            public virtual string DiscoveryLink {
                get {
                    return this.discoveryLink;
                }
                set {
                    this.discoveryLink = value;
                }
            }
            
            /// <summary>The url for the discovery REST document.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("discoveryRestUrl")]
            public virtual string DiscoveryRestUrl {
                get {
                    return this.discoveryRestUrl;
                }
                set {
                    this.discoveryRestUrl = value;
                }
            }
            
            /// <summary>A link to human readable documentation for the API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("documentationLink")]
            public virtual string DocumentationLink {
                get {
                    return this.documentationLink;
                }
                set {
                    this.documentationLink = value;
                }
            }
            
            /// <summary>Links to 16x16 and 32x32 icons representing the API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("icons")]
            public virtual ItemsData.IconsData Icons {
                get {
                    return this.icons;
                }
                set {
                    this.icons = value;
                }
            }
            
            /// <summary>The id of this API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this.id;
                }
                set {
                    this.id = value;
                }
            }
            
            /// <summary>The kind for this response.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("kind")]
            public virtual string Kind {
                get {
                    return this.kind;
                }
                set {
                    this.kind = value;
                }
            }
            
            /// <summary>Labels for the status of this API, such as labs or deprecated.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("labels")]
            public virtual System.Collections.Generic.IList<string> Labels {
                get {
                    return this.labels;
                }
                set {
                    this.labels = value;
                }
            }
            
            /// <summary>The name of the API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("name")]
            public virtual string Name {
                get {
                    return this.name;
                }
                set {
                    this.name = value;
                }
            }
            
            /// <summary>True if this version is the preferred version to use.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("preferred")]
            public virtual System.Nullable<bool> Preferred {
                get {
                    return this.preferred;
                }
                set {
                    this.preferred = value;
                }
            }
            
            /// <summary>The title of this API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("title")]
            public virtual string Title {
                get {
                    return this.title;
                }
                set {
                    this.title = value;
                }
            }
            
            /// <summary>The version of the API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("version")]
            public virtual string Version {
                get {
                    return this.version;
                }
                set {
                    this.version = value;
                }
            }
            
            /// <summary>Links to 16x16 and 32x32 icons representing the API.</summary>
            public class IconsData {
                
                private string x16;
                
                private string x32;
                
                /// <summary>The url of the 16x16 icon.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("x16")]
                public virtual string X16 {
                    get {
                        return this.x16;
                    }
                    set {
                        this.x16 = value;
                    }
                }
                
                /// <summary>The url of the 32x32 icon.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("x32")]
                public virtual string X32 {
                    get {
                        return this.x32;
                    }
                    set {
                        this.x32 = value;
                    }
                }
            }
        }
    }
    
    public class JsonSchema {
        
        private string refValue;
        
        private JsonSchema additionalProperties;
        
        private string defaultValue;
        
        private string description;
        
        private System.Collections.Generic.IList<string> enumValue;
        
        private System.Collections.Generic.IList<string> enumDescriptions;
        
        private string format;
        
        private string id;
        
        private JsonSchema items;
        
        private string location;
        
        private string maximum;
        
        private string minimum;
        
        private string pattern;
        
        private JsonSchema.PropertiesData properties;
        
        private System.Nullable<bool> repeated;
        
        private System.Nullable<bool> required;
        
        private string type;
        
        /// <summary>A reference to another schema. The value of this property is the &quot;id&quot; of another schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("$ref")]
        public virtual string Ref {
            get {
                return this.refValue;
            }
            set {
                this.refValue = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("additionalProperties")]
        public virtual JsonSchema AdditionalProperties {
            get {
                return this.additionalProperties;
            }
            set {
                this.additionalProperties = value;
            }
        }
        
        /// <summary>The default value of this property (if one exists).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("default")]
        public virtual string Default {
            get {
                return this.defaultValue;
            }
            set {
                this.defaultValue = value;
            }
        }
        
        /// <summary>A description of this object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this.description;
            }
            set {
                this.description = value;
            }
        }
        
        /// <summary>Values this parameter may take (if it is an enum).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enum")]
        public virtual System.Collections.Generic.IList<string> Enum {
            get {
                return this.enumValue;
            }
            set {
                this.enumValue = value;
            }
        }
        
        /// <summary>The descriptions for the enums. Each position maps to the corresponding value in the &quot;enum&quot; array.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enumDescriptions")]
        public virtual System.Collections.Generic.IList<string> EnumDescriptions {
            get {
                return this.enumDescriptions;
            }
            set {
                this.enumDescriptions = value;
            }
        }
        
        /// <summary>An additional regular expression or key that helps constrain the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("format")]
        public virtual string Format {
            get {
                return this.format;
            }
            set {
                this.format = value;
            }
        }
        
        /// <summary>Unique identifier for this schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual JsonSchema Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Whether this parameter goes in the query or the path for REST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location {
            get {
                return this.location;
            }
            set {
                this.location = value;
            }
        }
        
        /// <summary>The maximum value of this parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maximum")]
        public virtual string Maximum {
            get {
                return this.maximum;
            }
            set {
                this.maximum = value;
            }
        }
        
        /// <summary>The minimum value of this parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minimum")]
        public virtual string Minimum {
            get {
                return this.minimum;
            }
            set {
                this.minimum = value;
            }
        }
        
        /// <summary>The regular expression this parameter must conform to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pattern")]
        public virtual string Pattern {
            get {
                return this.pattern;
            }
            set {
                this.pattern = value;
            }
        }
        
        /// <summary>If this is a schema for an object, list the schema for each property of this object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("properties")]
        public virtual JsonSchema.PropertiesData Properties {
            get {
                return this.properties;
            }
            set {
                this.properties = value;
            }
        }
        
        /// <summary>Whether this parameter may appear multiple times.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("repeated")]
        public virtual System.Nullable<bool> Repeated {
            get {
                return this.repeated;
            }
            set {
                this.repeated = value;
            }
        }
        
        /// <summary>Whether the parameter is required.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("required")]
        public virtual System.Nullable<bool> Required {
            get {
                return this.required;
            }
            set {
                this.required = value;
            }
        }
        
        /// <summary>The value type for this schema. A list of values can be found here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this.type;
            }
            set {
                this.type = value;
            }
        }
        
        /// <summary>If this is a schema for an object, list the schema for each property of this object.</summary>
        public class PropertiesData : System.Collections.Generic.Dictionary<string, JsonSchema> {
        }
    }
    
    public class RestDescription : Google.Apis.Requests.IDirectResponseSchema {
        
        private RestDescription.AuthData auth;
        
        private string basePath;
        
        private string baseUrl;
        
        private string description;
        
        private string discoveryVersion;
        
        private string documentationLink;
        
        private System.Collections.Generic.IList<string> features;
        
        private RestDescription.IconsData icons;
        
        private string id;
        
        private string kind;
        
        private System.Collections.Generic.IList<string> labels;
        
        private RestDescription.MethodsData methods;
        
        private string name;
        
        private RestDescription.ParametersData parameters;
        
        private string protocol;
        
        private RestDescription.ResourcesData resources;
        
        private string revision;
        
        private RestDescription.SchemasData schemas;
        
        private string title;
        
        private string version;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>Authentication information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("auth")]
        public virtual RestDescription.AuthData Auth {
            get {
                return this.auth;
            }
            set {
                this.auth = value;
            }
        }
        
        /// <summary>The base path for REST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("basePath")]
        public virtual string BasePath {
            get {
                return this.basePath;
            }
            set {
                this.basePath = value;
            }
        }
        
        /// <summary>The base URL for REST requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("baseUrl")]
        public virtual string BaseUrl {
            get {
                return this.baseUrl;
            }
            set {
                this.baseUrl = value;
            }
        }
        
        /// <summary>The description of this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this.description;
            }
            set {
                this.description = value;
            }
        }
        
        /// <summary>Indicate the version of the Discovery API used to generate this doc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("discoveryVersion")]
        public virtual string DiscoveryVersion {
            get {
                return this.discoveryVersion;
            }
            set {
                this.discoveryVersion = value;
            }
        }
        
        /// <summary>A link to human readable documentation for the API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentationLink")]
        public virtual string DocumentationLink {
            get {
                return this.documentationLink;
            }
            set {
                this.documentationLink = value;
            }
        }
        
        /// <summary>A list of supported features for this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("features")]
        public virtual System.Collections.Generic.IList<string> Features {
            get {
                return this.features;
            }
            set {
                this.features = value;
            }
        }
        
        /// <summary>Links to 16x16 and 32x32 icons representing the API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("icons")]
        public virtual RestDescription.IconsData Icons {
            get {
                return this.icons;
            }
            set {
                this.icons = value;
            }
        }
        
        /// <summary>The id of this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The kind for this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Labels for the status of this API, such as labs or deprecated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IList<string> Labels {
            get {
                return this.labels;
            }
            set {
                this.labels = value;
            }
        }
        
        /// <summary>API-level methods for this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("methods")]
        public virtual RestDescription.MethodsData Methods {
            get {
                return this.methods;
            }
            set {
                this.methods = value;
            }
        }
        
        /// <summary>The name of this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this.name;
            }
            set {
                this.name = value;
            }
        }
        
        /// <summary>Common parameters that apply across all apis.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual RestDescription.ParametersData Parameters {
            get {
                return this.parameters;
            }
            set {
                this.parameters = value;
            }
        }
        
        /// <summary>The protocol described by this document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("protocol")]
        public virtual string Protocol {
            get {
                return this.protocol;
            }
            set {
                this.protocol = value;
            }
        }
        
        /// <summary>The resources in this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual RestDescription.ResourcesData Resources {
            get {
                return this.resources;
            }
            set {
                this.resources = value;
            }
        }
        
        /// <summary>The version of this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("revision")]
        public virtual string Revision {
            get {
                return this.revision;
            }
            set {
                this.revision = value;
            }
        }
        
        /// <summary>The schemas for this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schemas")]
        public virtual RestDescription.SchemasData Schemas {
            get {
                return this.schemas;
            }
            set {
                this.schemas = value;
            }
        }
        
        /// <summary>The title of this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this.title;
            }
            set {
                this.title = value;
            }
        }
        
        /// <summary>The version of this API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version {
            get {
                return this.version;
            }
            set {
                this.version = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
        
        /// <summary>Authentication information.</summary>
        public class AuthData {
            
            private AuthData.Oauth2Data oauth2;
            
            /// <summary>OAuth 2.0 authentication information.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("oauth2")]
            public virtual AuthData.Oauth2Data Oauth2 {
                get {
                    return this.oauth2;
                }
                set {
                    this.oauth2 = value;
                }
            }
            
            /// <summary>OAuth 2.0 authentication information.</summary>
            public class Oauth2Data {
                
                private Oauth2Data.ScopesData scopes;
                
                /// <summary>Available OAuth 2.0 scopes.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("scopes")]
                public virtual Oauth2Data.ScopesData Scopes {
                    get {
                        return this.scopes;
                    }
                    set {
                        this.scopes = value;
                    }
                }
                
                /// <summary>Available OAuth 2.0 scopes.</summary>
                public class ScopesData : System.Collections.Generic.Dictionary<string, ScopesData.ScopesDataSchema> {
                    
                    /// <summary>The scope value.</summary>
                    public class ScopesDataSchema {
                        
                        private string description;
                        
                        /// <summary>Description of scope.</summary>
                        [Newtonsoft.Json.JsonPropertyAttribute("description")]
                        public virtual string Description {
                            get {
                                return this.description;
                            }
                            set {
                                this.description = value;
                            }
                        }
                    }
                }
            }
        }
        
        /// <summary>Links to 16x16 and 32x32 icons representing the API.</summary>
        public class IconsData {
            
            private string x16;
            
            private string x32;
            
            /// <summary>The url of the 16x16 icon.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("x16")]
            public virtual string X16 {
                get {
                    return this.x16;
                }
                set {
                    this.x16 = value;
                }
            }
            
            /// <summary>The url of the 32x32 icon.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("x32")]
            public virtual string X32 {
                get {
                    return this.x32;
                }
                set {
                    this.x32 = value;
                }
            }
        }
        
        /// <summary>API-level methods for this API.</summary>
        public class MethodsData : System.Collections.Generic.Dictionary<string, RestMethod> {
        }
        
        /// <summary>Common parameters that apply across all apis.</summary>
        public class ParametersData : System.Collections.Generic.Dictionary<string, JsonSchema> {
        }
        
        /// <summary>The resources in this API.</summary>
        public class ResourcesData : System.Collections.Generic.Dictionary<string, RestResource> {
        }
        
        /// <summary>The schemas for this API.</summary>
        public class SchemasData : System.Collections.Generic.Dictionary<string, JsonSchema> {
        }
    }
    
    public class RestMethod {
        
        private string description;
        
        private string httpMethod;
        
        private string id;
        
        private RestMethod.MediaUploadData mediaUpload;
        
        private System.Collections.Generic.IList<string> parameterOrder;
        
        private RestMethod.ParametersData parameters;
        
        private string path;
        
        private RestMethod.RequestData request;
        
        private RestMethod.ResponseData response;
        
        private System.Collections.Generic.IList<string> scopes;
        
        /// <summary>Description of this method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this.description;
            }
            set {
                this.description = value;
            }
        }
        
        /// <summary>HTTP method used by this method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpMethod")]
        public virtual string HttpMethod {
            get {
                return this.httpMethod;
            }
            set {
                this.httpMethod = value;
            }
        }
        
        /// <summary>A unique ID for this method. This property can be used to match methods between different versions of Discovery.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>Media upload parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaUpload")]
        public virtual RestMethod.MediaUploadData MediaUpload {
            get {
                return this.mediaUpload;
            }
            set {
                this.mediaUpload = value;
            }
        }
        
        /// <summary>Ordered list of required parameters, serves as a hint to clients on how to structure their method signatures. The array is ordered such that the &quot;most-significant&quot; parameter appears first.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameterOrder")]
        public virtual System.Collections.Generic.IList<string> ParameterOrder {
            get {
                return this.parameterOrder;
            }
            set {
                this.parameterOrder = value;
            }
        }
        
        /// <summary>Details for all parameters in this method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual RestMethod.ParametersData Parameters {
            get {
                return this.parameters;
            }
            set {
                this.parameters = value;
            }
        }
        
        /// <summary>The URI path of this REST method. Should be used in conjunction with the basePath property at the api-level.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual string Path {
            get {
                return this.path;
            }
            set {
                this.path = value;
            }
        }
        
        /// <summary>The schema for the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("request")]
        public virtual RestMethod.RequestData Request {
            get {
                return this.request;
            }
            set {
                this.request = value;
            }
        }
        
        /// <summary>The schema for the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual RestMethod.ResponseData Response {
            get {
                return this.response;
            }
            set {
                this.response = value;
            }
        }
        
        /// <summary>OAuth 2.0 scopes applicable to this method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scopes")]
        public virtual System.Collections.Generic.IList<string> Scopes {
            get {
                return this.scopes;
            }
            set {
                this.scopes = value;
            }
        }
        
        /// <summary>Media upload parameters.</summary>
        public class MediaUploadData {
            
            private System.Collections.Generic.IList<string> accept;
            
            private string maxSize;
            
            private MediaUploadData.ProtocolsData protocols;
            
            /// <summary>MIME Media Ranges for acceptable media uploads to this method.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("accept")]
            public virtual System.Collections.Generic.IList<string> Accept {
                get {
                    return this.accept;
                }
                set {
                    this.accept = value;
                }
            }
            
            /// <summary>Maximum size of a media upload, such as &quot;1MB&quot;, &quot;2GB&quot; or &quot;3TB&quot;.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("maxSize")]
            public virtual string MaxSize {
                get {
                    return this.maxSize;
                }
                set {
                    this.maxSize = value;
                }
            }
            
            /// <summary>Supported upload protocols.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("protocols")]
            public virtual MediaUploadData.ProtocolsData Protocols {
                get {
                    return this.protocols;
                }
                set {
                    this.protocols = value;
                }
            }
            
            /// <summary>Supported upload protocols.</summary>
            public class ProtocolsData {
                
                private ProtocolsData.ResumableData resumable;
                
                private ProtocolsData.SimpleData simple;
                
                /// <summary>Supports the Resumable Media Upload protocol.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("resumable")]
                public virtual ProtocolsData.ResumableData Resumable {
                    get {
                        return this.resumable;
                    }
                    set {
                        this.resumable = value;
                    }
                }
                
                /// <summary>Supports uploading as a single HTTP request.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("simple")]
                public virtual ProtocolsData.SimpleData Simple {
                    get {
                        return this.simple;
                    }
                    set {
                        this.simple = value;
                    }
                }
                
                /// <summary>Supports the Resumable Media Upload protocol.</summary>
                public class ResumableData {
                    
                    private System.Nullable<bool> multipart;
                    
                    private string path;
                    
                    /// <summary>True if this endpoint supports uploading multipart media.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("multipart")]
                    public virtual System.Nullable<bool> Multipart {
                        get {
                            return this.multipart;
                        }
                        set {
                            this.multipart = value;
                        }
                    }
                    
                    /// <summary>The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("path")]
                    public virtual string Path {
                        get {
                            return this.path;
                        }
                        set {
                            this.path = value;
                        }
                    }
                }
                
                /// <summary>Supports uploading as a single HTTP request.</summary>
                public class SimpleData {
                    
                    private System.Nullable<bool> multipart;
                    
                    private string path;
                    
                    /// <summary>True if this endpoint supports upload multipart media.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("multipart")]
                    public virtual System.Nullable<bool> Multipart {
                        get {
                            return this.multipart;
                        }
                        set {
                            this.multipart = value;
                        }
                    }
                    
                    /// <summary>The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("path")]
                    public virtual string Path {
                        get {
                            return this.path;
                        }
                        set {
                            this.path = value;
                        }
                    }
                }
            }
        }
        
        /// <summary>Details for all parameters in this method.</summary>
        public class ParametersData : System.Collections.Generic.Dictionary<string, JsonSchema> {
        }
        
        /// <summary>The schema for the request.</summary>
        public class RequestData {
            
            private string refValue;
            
            /// <summary>Schema ID for the request schema.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("$ref")]
            public virtual string Ref {
                get {
                    return this.refValue;
                }
                set {
                    this.refValue = value;
                }
            }
        }
        
        /// <summary>The schema for the response.</summary>
        public class ResponseData {
            
            private string refValue;
            
            /// <summary>Schema ID for the response schema.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("$ref")]
            public virtual string Ref {
                get {
                    return this.refValue;
                }
                set {
                    this.refValue = value;
                }
            }
        }
    }
    
    public class RestResource {
        
        private RestResource.MethodsData methods;
        
        private RestResource.ResourcesData resources;
        
        /// <summary>Methods on this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("methods")]
        public virtual RestResource.MethodsData Methods {
            get {
                return this.methods;
            }
            set {
                this.methods = value;
            }
        }
        
        /// <summary>Sub-resources on this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual RestResource.ResourcesData Resources {
            get {
                return this.resources;
            }
            set {
                this.resources = value;
            }
        }
        
        /// <summary>Methods on this resource.</summary>
        public class MethodsData : System.Collections.Generic.Dictionary<string, RestMethod> {
        }
        
        /// <summary>Sub-resources on this resource.</summary>
        public class ResourcesData : System.Collections.Generic.Dictionary<string, RestResource> {
        }
    }
}
namespace Google.Apis.Discovery.v1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class DiscoveryService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService genericService;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"discoveryVersion\":\"v1\",\"id\":\"discovery:v1\",\"" +
            "name\":\"discovery\",\"version\":\"v1\",\"title\":\"APIs Discovery Service\",\"description\":" +
            "\"Lets you discover information about other Google APIs, such as what APIs are av" +
            "ailable, the resource and method details for each API\",\"icons\":{\"x16\":\"http://ww" +
            "w.google.com/images/icons/feature/filing_cabinet_search-g16.png\",\"x32\":\"http://w" +
            "ww.google.com/images/icons/feature/filing_cabinet_search-g32.png\"},\"documentatio" +
            "nLink\":\"http://code.google.com/apis/discovery\",\"protocol\":\"rest\",\"baseUrl\":\"http" +
            "s://www.googleapis.com/discovery/v1/\",\"basePath\":\"/discovery/v1/\",\"parameters\":{" +
            "\"alt\":{\"type\":\"string\",\"description\":\"Data format for the response.\",\"default\":\"" +
            "json\",\"enum\":[\"json\"],\"enumDescriptions\":[\"Responses with Content-Type of applic" +
            "ation/json\"],\"location\":\"query\"},\"fields\":{\"type\":\"string\",\"description\":\"Select" +
            "or specifying which fields to include in a partial response.\",\"location\":\"query\"" +
            "},\"key\":{\"type\":\"string\",\"description\":\"API key. Your API key identifies your pr" +
            "oject and provides you with API access, quota, and reports. Required unless you " +
            "provide an OAuth 2.0 token.\",\"location\":\"query\"},\"oauth_token\":{\"type\":\"string\"," +
            "\"description\":\"OAuth 2.0 token for the current user.\",\"location\":\"query\"},\"prett" +
            "yPrint\":{\"type\":\"boolean\",\"description\":\"Returns response with indentations and " +
            "line breaks.\",\"default\":\"true\",\"location\":\"query\"},\"quotaUser\":{\"type\":\"string\"," +
            "\"description\":\"Available to use for quota purposes for server-side applications." +
            " Can be any arbitrary string assigned to a user, but should not exceed 40 charac" +
            "ters. Overrides userIp if both are provided.\",\"location\":\"query\"},\"userIp\":{\"typ" +
            "e\":\"string\",\"description\":\"IP address of the site where the request originates. " +
            "Use this if you want to enforce per-user limits.\",\"location\":\"query\"}},\"schemas\"" +
            ":{\"DirectoryList\":{\"id\":\"DirectoryList\",\"type\":\"object\",\"properties\":{\"discovery" +
            "Version\":{\"type\":\"string\",\"description\":\"Indicate the version of the Discovery A" +
            "PI used to generate this doc.\",\"default\":\"v1\"},\"items\":{\"type\":\"array\",\"descript" +
            "ion\":\"The individual directory entries. One entry per api/version pair.\",\"items\"" +
            ":{\"type\":\"object\",\"properties\":{\"description\":{\"type\":\"string\",\"description\":\"Th" +
            "e description of this API.\"},\"discoveryLink\":{\"type\":\"string\",\"description\":\"A l" +
            "ink to the discovery document.\"},\"discoveryRestUrl\":{\"type\":\"string\",\"descriptio" +
            "n\":\"The url for the discovery REST document.\"},\"documentationLink\":{\"type\":\"stri" +
            "ng\",\"description\":\"A link to human readable documentation for the API.\"},\"icons\"" +
            ":{\"type\":\"object\",\"description\":\"Links to 16x16 and 32x32 icons representing the" +
            " API.\",\"properties\":{\"x16\":{\"type\":\"string\",\"description\":\"The url of the 16x16 " +
            "icon.\"},\"x32\":{\"type\":\"string\",\"description\":\"The url of the 32x32 icon.\"}}},\"id" +
            "\":{\"type\":\"string\",\"description\":\"The id of this API.\"},\"kind\":{\"type\":\"string\"," +
            "\"description\":\"The kind for this response.\",\"default\":\"discovery#directoryItem\"}" +
            ",\"labels\":{\"type\":\"array\",\"description\":\"Labels for the status of this API, such" +
            " as labs or deprecated.\",\"items\":{\"type\":\"string\"}},\"name\":{\"type\":\"string\",\"des" +
            "cription\":\"The name of the API.\"},\"preferred\":{\"type\":\"boolean\",\"description\":\"T" +
            "rue if this version is the preferred version to use.\"},\"title\":{\"type\":\"string\"," +
            "\"description\":\"The title of this API.\"},\"version\":{\"type\":\"string\",\"description\"" +
            ":\"The version of the API.\"}}}},\"kind\":{\"type\":\"string\",\"description\":\"The kind f" +
            "or this response.\",\"default\":\"discovery#directoryList\"}}},\"JsonSchema\":{\"id\":\"Js" +
            "onSchema\",\"type\":\"object\",\"properties\":{\"$ref\":{\"type\":\"string\",\"description\":\"A" +
            " reference to another schema. The value of this property is the \\\"id\\\" of anothe" +
            "r schema.\"},\"additionalProperties\":{\"$ref\":\"JsonSchema\",\"description\":\"If this i" +
            "s a schema for an object, this property is the schema for any additional propert" +
            "ies with dynamic keys on this object.\"},\"default\":{\"type\":\"string\",\"description\"" +
            ":\"The default value of this property (if one exists).\"},\"description\":{\"type\":\"s" +
            "tring\",\"description\":\"A description of this object.\"},\"enum\":{\"type\":\"array\",\"de" +
            "scription\":\"Values this parameter may take (if it is an enum).\",\"items\":{\"type\":" +
            "\"string\"}},\"enumDescriptions\":{\"type\":\"array\",\"description\":\"The descriptions fo" +
            "r the enums. Each position maps to the corresponding value in the \\\"enum\\\" array" +
            ".\",\"items\":{\"type\":\"string\"}},\"format\":{\"type\":\"string\",\"description\":\"An additi" +
            "onal regular expression or key that helps constrain the value. For more details " +
            "see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23\"},\"id\":{\"t" +
            "ype\":\"string\",\"description\":\"Unique identifier for this schema.\"},\"items\":{\"$ref" +
            "\":\"JsonSchema\",\"description\":\"If this is a schema for an array, this property is" +
            " the schema for each element in the array.\"},\"location\":{\"type\":\"string\",\"descri" +
            "ption\":\"Whether this parameter goes in the query or the path for REST requests.\"" +
            "},\"maximum\":{\"type\":\"string\",\"description\":\"The maximum value of this parameter." +
            "\"},\"minimum\":{\"type\":\"string\",\"description\":\"The minimum value of this parameter" +
            ".\"},\"pattern\":{\"type\":\"string\",\"description\":\"The regular expression this parame" +
            "ter must conform to.\"},\"properties\":{\"type\":\"object\",\"description\":\"If this is a" +
            " schema for an object, list the schema for each property of this object.\",\"addit" +
            "ionalProperties\":{\"$ref\":\"JsonSchema\",\"description\":\"A single property of this o" +
            "bject. The value is itself a JSON Schema object describing this property.\"}},\"re" +
            "peated\":{\"type\":\"boolean\",\"description\":\"Whether this parameter may appear multi" +
            "ple times.\"},\"required\":{\"type\":\"boolean\",\"description\":\"Whether the parameter i" +
            "s required.\"},\"type\":{\"type\":\"string\",\"description\":\"The value type for this sch" +
            "ema. A list of values can be found here: http://tools.ietf.org/html/draft-zyp-js" +
            "on-schema-03#section-5.1\"}}},\"RestDescription\":{\"id\":\"RestDescription\",\"type\":\"o" +
            "bject\",\"properties\":{\"auth\":{\"type\":\"object\",\"description\":\"Authentication infor" +
            "mation.\",\"properties\":{\"oauth2\":{\"type\":\"object\",\"description\":\"OAuth 2.0 authen" +
            "tication information.\",\"properties\":{\"scopes\":{\"type\":\"object\",\"description\":\"Av" +
            "ailable OAuth 2.0 scopes.\",\"additionalProperties\":{\"type\":\"object\",\"description\"" +
            ":\"The scope value.\",\"properties\":{\"description\":{\"type\":\"string\",\"description\":\"" +
            "Description of scope.\"}}}}}}}},\"basePath\":{\"type\":\"string\",\"description\":\"The ba" +
            "se path for REST requests.\"},\"baseUrl\":{\"type\":\"string\",\"description\":\"The base " +
            "URL for REST requests.\"},\"description\":{\"type\":\"string\",\"description\":\"The descr" +
            "iption of this API.\"},\"discoveryVersion\":{\"type\":\"string\",\"description\":\"Indicat" +
            "e the version of the Discovery API used to generate this doc.\",\"default\":\"v1\"},\"" +
            "documentationLink\":{\"type\":\"string\",\"description\":\"A link to human readable docu" +
            "mentation for the API.\"},\"features\":{\"type\":\"array\",\"description\":\"A list of sup" +
            "ported features for this API.\",\"items\":{\"type\":\"string\"}},\"icons\":{\"type\":\"objec" +
            "t\",\"description\":\"Links to 16x16 and 32x32 icons representing the API.\",\"propert" +
            "ies\":{\"x16\":{\"type\":\"string\",\"description\":\"The url of the 16x16 icon.\"},\"x32\":{" +
            "\"type\":\"string\",\"description\":\"The url of the 32x32 icon.\"}}},\"id\":{\"type\":\"stri" +
            "ng\",\"description\":\"The id of this API.\"},\"kind\":{\"type\":\"string\",\"description\":\"" +
            "The kind for this response.\",\"default\":\"discovery#restDescription\"},\"labels\":{\"t" +
            "ype\":\"array\",\"description\":\"Labels for the status of this API, such as labs or d" +
            "eprecated.\",\"items\":{\"type\":\"string\"}},\"methods\":{\"type\":\"object\",\"description\":" +
            "\"API-level methods for this API.\",\"additionalProperties\":{\"$ref\":\"RestMethod\",\"d" +
            "escription\":\"An individual method description.\"}},\"name\":{\"type\":\"string\",\"descr" +
            "iption\":\"The name of this API.\"},\"parameters\":{\"type\":\"object\",\"description\":\"Co" +
            "mmon parameters that apply across all apis.\",\"additionalProperties\":{\"$ref\":\"Jso" +
            "nSchema\",\"description\":\"Description of a single parameter.\"}},\"protocol\":{\"type\"" +
            ":\"string\",\"description\":\"The protocol described by this document.\",\"default\":\"re" +
            "st\"},\"resources\":{\"type\":\"object\",\"description\":\"The resources in this API.\",\"ad" +
            "ditionalProperties\":{\"$ref\":\"RestResource\",\"description\":\"An individual resource" +
            " description. Contains methods and sub-resources related to this resource.\"}},\"r" +
            "evision\":{\"type\":\"string\",\"description\":\"The version of this API.\"},\"schemas\":{\"" +
            "type\":\"object\",\"description\":\"The schemas for this API.\",\"additionalProperties\":" +
            "{\"$ref\":\"JsonSchema\",\"description\":\"An individual schema description.\"}},\"title\"" +
            ":{\"type\":\"string\",\"description\":\"The title of this API.\"},\"version\":{\"type\":\"str" +
            "ing\",\"description\":\"The version of this API.\"}}},\"RestMethod\":{\"id\":\"RestMethod\"" +
            ",\"type\":\"object\",\"properties\":{\"description\":{\"type\":\"string\",\"description\":\"Des" +
            "cription of this method.\"},\"httpMethod\":{\"type\":\"string\",\"description\":\"HTTP met" +
            "hod used by this method.\"},\"id\":{\"type\":\"string\",\"description\":\"A unique ID for " +
            "this method. This property can be used to match methods between different versio" +
            "ns of Discovery.\"},\"mediaUpload\":{\"type\":\"object\",\"description\":\"Media upload pa" +
            "rameters.\",\"properties\":{\"accept\":{\"type\":\"array\",\"description\":\"MIME Media Rang" +
            "es for acceptable media uploads to this method.\",\"items\":{\"type\":\"string\"}},\"max" +
            "Size\":{\"type\":\"string\",\"description\":\"Maximum size of a media upload, such as \\\"" +
            "1MB\\\", \\\"2GB\\\" or \\\"3TB\\\".\"},\"protocols\":{\"type\":\"object\",\"description\":\"Support" +
            "ed upload protocols.\",\"properties\":{\"resumable\":{\"type\":\"object\",\"description\":\"" +
            "Supports the Resumable Media Upload protocol.\",\"properties\":{\"multipart\":{\"type\"" +
            ":\"boolean\",\"description\":\"True if this endpoint supports uploading multipart med" +
            "ia.\",\"default\":\"true\"},\"path\":{\"type\":\"string\",\"description\":\"The URI path to be" +
            " used for upload. Should be used in conjunction with the basePath property at th" +
            "e api-level.\"}}},\"simple\":{\"type\":\"object\",\"description\":\"Supports uploading as " +
            "a single HTTP request.\",\"properties\":{\"multipart\":{\"type\":\"boolean\",\"description" +
            "\":\"True if this endpoint supports upload multipart media.\",\"default\":\"true\"},\"pa" +
            "th\":{\"type\":\"string\",\"description\":\"The URI path to be used for upload. Should b" +
            "e used in conjunction with the basePath property at the api-level.\"}}}}}}},\"para" +
            "meterOrder\":{\"type\":\"array\",\"description\":\"Ordered list of required parameters, " +
            "serves as a hint to clients on how to structure their method signatures. The arr" +
            "ay is ordered such that the \\\"most-significant\\\" parameter appears first.\",\"item" +
            "s\":{\"type\":\"string\"}},\"parameters\":{\"type\":\"object\",\"description\":\"Details for a" +
            "ll parameters in this method.\",\"additionalProperties\":{\"$ref\":\"JsonSchema\",\"desc" +
            "ription\":\"Details for a single parameter in this method.\"}},\"path\":{\"type\":\"stri" +
            "ng\",\"description\":\"The URI path of this REST method. Should be used in conjuncti" +
            "on with the basePath property at the api-level.\"},\"request\":{\"type\":\"object\",\"de" +
            "scription\":\"The schema for the request.\",\"properties\":{\"$ref\":{\"type\":\"string\",\"" +
            "description\":\"Schema ID for the request schema.\"}}},\"response\":{\"type\":\"object\"," +
            "\"description\":\"The schema for the response.\",\"properties\":{\"$ref\":{\"type\":\"strin" +
            "g\",\"description\":\"Schema ID for the response schema.\"}}},\"scopes\":{\"type\":\"array" +
            "\",\"description\":\"OAuth 2.0 scopes applicable to this method.\",\"items\":{\"type\":\"a" +
            "ny\"}}}},\"RestResource\":{\"id\":\"RestResource\",\"type\":\"object\",\"properties\":{\"metho" +
            "ds\":{\"type\":\"object\",\"description\":\"Methods on this resource.\",\"additionalProper" +
            "ties\":{\"$ref\":\"RestMethod\",\"description\":\"Description for any methods on this re" +
            "source.\"}},\"resources\":{\"type\":\"object\",\"description\":\"Sub-resources on this res" +
            "ource.\",\"additionalProperties\":{\"$ref\":\"RestResource\",\"description\":\"Description" +
            " for any sub-resources on this resource.\"}}}}},\"resources\":{\"apis\":{\"methods\":{\"" +
            "getRest\":{\"id\":\"discovery.apis.getRest\",\"path\":\"apis/{api}/{version}/rest\",\"http" +
            "Method\":\"GET\",\"description\":\"Retrieve the description of a particular version of" +
            " an api.\",\"parameters\":{\"api\":{\"type\":\"string\",\"description\":\"The name of the AP" +
            "I.\",\"required\":true,\"location\":\"path\"},\"version\":{\"type\":\"string\",\"description\":" +
            "\"The version of the API.\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[" +
            "\"api\",\"version\"],\"response\":{\"$ref\":\"RestDescription\"}},\"list\":{\"id\":\"discovery." +
            "apis.list\",\"path\":\"apis\",\"httpMethod\":\"GET\",\"description\":\"Retrieve the list of " +
            "APIs supported at this endpoint.\",\"parameters\":{\"label\":{\"type\":\"string\",\"descri" +
            "ption\":\"Only include APIs with a matching label, such as \'graduated\' or \'labs\'.\"" +
            ",\"enum\":[\"deprecated\",\"graduated\",\"labs\"],\"enumDescriptions\":[\"APIs that have be" +
            "en deprecated.\",\"Supported APIs that have graduated from labs.\",\"APIs that are e" +
            "xperimental\"],\"location\":\"query\"},\"name\":{\"type\":\"string\",\"description\":\"Only in" +
            "clude APIs with the given name.\",\"location\":\"query\"},\"preferred\":{\"type\":\"boolea" +
            "n\",\"description\":\"Return only the preferred version of an API.\",\"default\":\"false" +
            "\",\"location\":\"query\"}},\"response\":{\"$ref\":\"DirectoryList\"}}}}}}";
        
        private const string Version = "v1";
        
        private const string Name = "discovery";
        
        private const string BaseUri = "https://www.googleapis.com/discovery/v1/";
        
        private const Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string key;
        
        protected DiscoveryService(Google.Apis.Discovery.IService genericService, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.genericService = genericService;
            this.authenticator = authenticator;
            this.apis = new ApisResource(this);
        }
        
        public DiscoveryService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public DiscoveryService(Google.Apis.Authentication.IAuthenticator authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(DiscoveryService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameterV1_0(new System.Uri(DiscoveryService.BaseUri))), authenticator) {
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this.key;
            }
            set {
                this.key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this.genericService.CreateRequest(resource, method);
            if (!string.IsNullOrEmpty(Key)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            genericService.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return genericService.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return genericService.DeserializeResponse<T>(response);
        }
    }
    
    public class ApisResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "apis";
        
        public ApisResource(DiscoveryService service) {
            this.service = service;
        }
        
        /// <summary>Retrieve the description of a particular version of an api.</summary>
        /// <param name="api">Required - The name of the API.</param>
        /// <param name="version">Required - The version of the API.</param>
        public virtual GetRestRequest GetRest(string api, string version) {
            return new GetRestRequest(service, api, version);
        }
        
        /// <summary>Retrieve the list of APIs supported at this endpoint.</summary>
        public virtual ListRequest List() {
            return new ListRequest(service);
        }
        
        /// <summary>Only include APIs with a matching label, such as &apos;graduated&apos; or &apos;labs&apos;.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Label {
            
            /// <summary>APIs that have been deprecated.</summary>
            [Google.Apis.Util.StringValueAttribute("deprecated")]
            Deprecated,
            
            /// <summary>Supported APIs that have graduated from labs.</summary>
            [Google.Apis.Util.StringValueAttribute("graduated")]
            Graduated,
            
            /// <summary>APIs that are experimental</summary>
            [Google.Apis.Util.StringValueAttribute("labs")]
            Labs,
        }
        
        public class GetRestRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Discovery.v1.Data.RestDescription> {
            
            private string oauth_token;
            
            private System.Boolean? prettyPrint;
            
            private string quotaUser;
            
            private string api;
            
            private string version;
            
            public GetRestRequest(Google.Apis.Discovery.IRequestProvider service, string api, string version) : 
                    base(service) {
                this.api = api;
                this.version = version;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token")]
            public virtual string Oauth_token {
                get {
                    return this.oauth_token;
                }
                set {
                    this.oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint")]
            public virtual System.Boolean? PrettyPrint {
                get {
                    return this.prettyPrint;
                }
                set {
                    this.prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser")]
            public virtual string QuotaUser {
                get {
                    return this.quotaUser;
                }
                set {
                    this.quotaUser = value;
                }
            }
            
            /// <summary>The name of the API.</summary>
            [Google.Apis.Util.RequestParameterAttribute("api")]
            public virtual string Api {
                get {
                    return this.api;
                }
            }
            
            /// <summary>The version of the API.</summary>
            [Google.Apis.Util.RequestParameterAttribute("version")]
            public virtual string Version {
                get {
                    return this.version;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "apis";
                }
            }
            
            protected override string MethodName {
                get {
                    return "getRest";
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Discovery.v1.Data.DirectoryList> {
            
            private string oauth_token;
            
            private System.Boolean? prettyPrint;
            
            private string quotaUser;
            
            private Label? label;
            
            private string name;
            
            private System.Boolean? preferred;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service) : 
                    base(service) {
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token")]
            public virtual string Oauth_token {
                get {
                    return this.oauth_token;
                }
                set {
                    this.oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint")]
            public virtual System.Boolean? PrettyPrint {
                get {
                    return this.prettyPrint;
                }
                set {
                    this.prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser")]
            public virtual string QuotaUser {
                get {
                    return this.quotaUser;
                }
                set {
                    this.quotaUser = value;
                }
            }
            
            /// <summary>Only include APIs with a matching label, such as 'graduated' or 'labs'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("label")]
            public virtual Label? Label {
                get {
                    return this.label;
                }
                set {
                    this.label = value;
                }
            }
            
            /// <summary>Only include APIs with the given name.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name")]
            public virtual string Name {
                get {
                    return this.name;
                }
                set {
                    this.name = value;
                }
            }
            
            /// <summary>Return only the preferred version of an API.</summary>
            [Google.Apis.Util.RequestParameterAttribute("preferred")]
            public virtual System.Boolean? Preferred {
                get {
                    return this.preferred;
                }
                set {
                    this.preferred = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "apis";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public partial class DiscoveryService {
        
        private const string Resource = "";
        
        private ApisResource apis;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual ApisResource Apis {
            get {
                return this.apis;
            }
        }
    }
}
