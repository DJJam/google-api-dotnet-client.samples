//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4984
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Youtube.v3.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    /// <summary>An activity resource contains information about an action that a particular channel, or user, has taken on YouTube. The actions reported in activity feeds include rating a video, sharing a video, marking a video as a favorite, commenting on a video, uploading a video, and so forth. Each activity resource identifies the type of action, the channel associated with the action, and the resource(s) associated with the action, such as the video that was rated or uploaded.</summary>
    public class Activity : Google.Apis.Requests.IDirectResponseSchema {
        
        private ActivityContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private ActivitySnippet _snippet;
        
        /// <summary>Details about the content of an activity: the video that was shared, the channel that was subscribed to, etc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual ActivityContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The ETag of the activity resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For activity resources, the value will be youtube#activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about an activity, including title, description, thumbnails, activity type and group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual ActivitySnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>Details about the content of an activity: the video that was shared, the channel that was subscribed to, etc.</summary>
    public class ActivityContentDetails {
        
        private ActivityContentDetails.BulletinData _bulletin;
        
        private ActivityContentDetails.CommentData _comment;
        
        private ActivityContentDetails.FavoriteData _favorite;
        
        private ActivityContentDetails.LikeData _like;
        
        private ActivityContentDetails.PlaylistItemData _playlistItem;
        
        private ActivityContentDetails.RecommendationData _recommendation;
        
        private ActivityContentDetails.SocialData _social;
        
        private ActivityContentDetails.SubscriptionData _subscription;
        
        private ActivityContentDetails.UploadData _upload;
        
        /// <summary>The bulletin object contains details about a channel bulletin post. This object is only present if the snippet.type is bulletin.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bulletin")]
        public virtual ActivityContentDetails.BulletinData Bulletin {
            get {
                return this._bulletin;
            }
            set {
                this._bulletin = value;
            }
        }
        
        /// <summary>The comment object contains information about a resource that received a comment. This property is only present if the snippet.type is comment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual ActivityContentDetails.CommentData Comment {
            get {
                return this._comment;
            }
            set {
                this._comment = value;
            }
        }
        
        /// <summary>The favorite object contains information about a video that was marked as a favorite video. This property is only present if the snippet.type is favorite.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("favorite")]
        public virtual ActivityContentDetails.FavoriteData Favorite {
            get {
                return this._favorite;
            }
            set {
                this._favorite = value;
            }
        }
        
        /// <summary>The like object contains information about a resource that received a positive (like) rating. This property is only present if the snippet.type is like.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("like")]
        public virtual ActivityContentDetails.LikeData Like {
            get {
                return this._like;
            }
            set {
                this._like = value;
            }
        }
        
        /// <summary>The playlistItem object contains information about a new playlist item. This property is only present if the snippet.type is playlistItem.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playlistItem")]
        public virtual ActivityContentDetails.PlaylistItemData PlaylistItem {
            get {
                return this._playlistItem;
            }
            set {
                this._playlistItem = value;
            }
        }
        
        /// <summary>The recommendation object contains information about a recommended resource. This property is only present if the snippet.type is recommendation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recommendation")]
        public virtual ActivityContentDetails.RecommendationData Recommendation {
            get {
                return this._recommendation;
            }
            set {
                this._recommendation = value;
            }
        }
        
        /// <summary>The social object contains details about a social network post. This property is only present if the snippet.type is social.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("social")]
        public virtual ActivityContentDetails.SocialData Social {
            get {
                return this._social;
            }
            set {
                this._social = value;
            }
        }
        
        /// <summary>The subscription object contains information about a channel that a user subscribed to. This property is only present if the snippet.type is subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subscription")]
        public virtual ActivityContentDetails.SubscriptionData Subscription {
            get {
                return this._subscription;
            }
            set {
                this._subscription = value;
            }
        }
        
        /// <summary>The upload object contains information about the uploaded video. This property is only present if the snippet.type is upload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("upload")]
        public virtual ActivityContentDetails.UploadData Upload {
            get {
                return this._upload;
            }
            set {
                this._upload = value;
            }
        }
        
        /// <summary>The bulletin object contains details about a channel bulletin post. This object is only present if the snippet.type is bulletin.</summary>
        public class BulletinData {
            
            private ResourceId _resourceId;
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>The comment object contains information about a resource that received a comment. This property is only present if the snippet.type is comment.</summary>
        public class CommentData {
            
            private ResourceId _resourceId;
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>The favorite object contains information about a video that was marked as a favorite video. This property is only present if the snippet.type is favorite.</summary>
        public class FavoriteData {
            
            private ResourceId _resourceId;
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>The like object contains information about a resource that received a positive (like) rating. This property is only present if the snippet.type is like.</summary>
        public class LikeData {
            
            private ResourceId _resourceId;
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>The playlistItem object contains information about a new playlist item. This property is only present if the snippet.type is playlistItem.</summary>
        public class PlaylistItemData {
            
            private string _playlistId;
            
            private string _playlistItemId;
            
            private ResourceId _resourceId;
            
            /// <summary>The value that YouTube uses to uniquely identify the playlist.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("playlistId")]
            public virtual string PlaylistId {
                get {
                    return this._playlistId;
                }
                set {
                    this._playlistId = value;
                }
            }
            
            /// <summary>ID of the item within the playlist.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("playlistItemId")]
            public virtual string PlaylistItemId {
                get {
                    return this._playlistItemId;
                }
                set {
                    this._playlistItemId = value;
                }
            }
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>The recommendation object contains information about a recommended resource. This property is only present if the snippet.type is recommendation.</summary>
        public class RecommendationData {
            
            private string _reason;
            
            private ResourceId _resourceId;
            
            private ResourceId _seedResourceId;
            
            /// <summary>The reason that the resource is recommended to the user.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("reason")]
            public virtual string Reason {
                get {
                    return this._reason;
                }
                set {
                    this._reason = value;
                }
            }
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("seedResourceId")]
            public virtual ResourceId SeedResourceId {
                get {
                    return this._seedResourceId;
                }
                set {
                    this._seedResourceId = value;
                }
            }
        }
        
        /// <summary>The social object contains details about a social network post. This property is only present if the snippet.type is social.</summary>
        public class SocialData {
            
            private string _author;
            
            private string _imageUrl;
            
            private string _referenceUrl;
            
            private ResourceId _resourceId;
            
            private string _type;
            
            /// <summary>The author of the social network post.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("author")]
            public virtual string Author {
                get {
                    return this._author;
                }
                set {
                    this._author = value;
                }
            }
            
            /// <summary>An image of the post&apos;s author.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("imageUrl")]
            public virtual string ImageUrl {
                get {
                    return this._imageUrl;
                }
                set {
                    this._imageUrl = value;
                }
            }
            
            /// <summary>The URL of the social network post.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("referenceUrl")]
            public virtual string ReferenceUrl {
                get {
                    return this._referenceUrl;
                }
                set {
                    this._referenceUrl = value;
                }
            }
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
            
            /// <summary>The name of the social network.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this._type;
                }
                set {
                    this._type = value;
                }
            }
        }
        
        /// <summary>The subscription object contains information about a channel that a user subscribed to. This property is only present if the snippet.type is subscription.</summary>
        public class SubscriptionData {
            
            private ResourceId _resourceId;
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>The upload object contains information about the uploaded video. This property is only present if the snippet.type is upload.</summary>
        public class UploadData {
            
            private string _videoId;
            
            /// <summary>The ID that YouTube uses to uniquely identify the uploaded video.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
            public virtual string VideoId {
                get {
                    return this._videoId;
                }
                set {
                    this._videoId = value;
                }
            }
        }
    }
    
    /// <summary>A paginated list of activities returned as a response to youtube.activities.list calls.</summary>
    public class ActivityListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<Activity> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>The ETag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>A list of activities, or events, that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Activity> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value will be youtube#activityListResponse.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>Basic details about an activity, including title, description, thumbnails, activity type and group.</summary>
    public class ActivitySnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _groupId;
        
        private string _publishedAt;
        
        private ActivitySnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        private string _type;
        
        /// <summary>The ID that YouTube uses to uniquely identify the channel associated with the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>The description of the resource primarily associated with the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>The group ID associated with the activity. A group ID identifies user events that are associated with the same user and resource. For example, if a user rates a video and marks the same video as a favorite, the entries for those events would have the same group ID in the user&apos;s activity feed. In your user interface, you can avoid repetition by grouping events with the same groupId value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupId")]
        public virtual string GroupId {
            get {
                return this._groupId;
            }
            set {
                this._groupId = value;
            }
        }
        
        /// <summary>The date and time that the activity occurred. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the resource that is primarily associated with the activity. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual ActivitySnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>The title of the resource primarily associated with the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>The type of activity that the resource describes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the resource that is primarily associated with the activity. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>A channel resource contains information about a YouTube channel.</summary>
    public class Channel {
        
        private ChannelContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private ChannelSnippet _snippet;
        
        private ChannelStatistics _statistics;
        
        private ChannelStatus _status;
        
        private ChannelTopicDetails _topicDetails;
        
        /// <summary>Details about the content of a channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual ChannelContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The ETag for the channel resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For channel resources, the value will be youtube#channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about a channel, including title, description and thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual ChannelSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
        
        /// <summary>Statistics about a channel: number of subscribers, number of videos in the channel, etc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statistics")]
        public virtual ChannelStatistics Statistics {
            get {
                return this._statistics;
            }
            set {
                this._statistics = value;
            }
        }
        
        /// <summary>JSON template for the status part of a channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual ChannelStatus Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
        
        /// <summary>Freebase topic information related to the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topicDetails")]
        public virtual ChannelTopicDetails TopicDetails {
            get {
                return this._topicDetails;
            }
            set {
                this._topicDetails = value;
            }
        }
    }
    
    /// <summary>Details about the content of a channel.</summary>
    public class ChannelContentDetails {
        
        private ChannelContentDetails.RelatedPlaylistsData _relatedPlaylists;
        
        /// <summary>The relatedPlaylists object is a map that identifies playlists associated with the channel, such as the channel&apos;s uploaded videos or favorite videos. You can retrieve any of these playlists using the playlists.list method.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relatedPlaylists")]
        public virtual ChannelContentDetails.RelatedPlaylistsData RelatedPlaylists {
            get {
                return this._relatedPlaylists;
            }
            set {
                this._relatedPlaylists = value;
            }
        }
        
        /// <summary>The relatedPlaylists object is a map that identifies playlists associated with the channel, such as the channel&apos;s uploaded videos or favorite videos. You can retrieve any of these playlists using the playlists.list method.</summary>
        public class RelatedPlaylistsData {
            
            private string _favorites;
            
            private string _likes;
            
            private string _uploads;
            
            private string _watchHistory;
            
            private string _watchLater;
            
            /// <summary>The ID of the playlist that contains the channel&apos;s favorite videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("favorites")]
            public virtual string Favorites {
                get {
                    return this._favorites;
                }
                set {
                    this._favorites = value;
                }
            }
            
            /// <summary>The ID of the playlist that contains the channel&apos;s liked videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("likes")]
            public virtual string Likes {
                get {
                    return this._likes;
                }
                set {
                    this._likes = value;
                }
            }
            
            /// <summary>The ID of the playlist that contains the channel&apos;s uploaded videos. Use the videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("uploads")]
            public virtual string Uploads {
                get {
                    return this._uploads;
                }
                set {
                    this._uploads = value;
                }
            }
            
            /// <summary>The ID of the playlist that contains the channel&apos;s watch history. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("watchHistory")]
            public virtual string WatchHistory {
                get {
                    return this._watchHistory;
                }
                set {
                    this._watchHistory = value;
                }
            }
            
            /// <summary>The ID of the channel&apos;s watch later playlist. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("watchLater")]
            public virtual string WatchLater {
                get {
                    return this._watchLater;
                }
                set {
                    this._watchLater = value;
                }
            }
        }
    }
    
    /// <summary>A paginated list of channels returned as the response to a youtube.channels.list call.</summary>
    public class ChannelListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<Channel> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>The ETag for the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>A list of channels that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Channel> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value will be youtube#channelListResponse.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>Basic details about a channel, including title, description and thumbnails.</summary>
    public class ChannelSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private ChannelSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>The ID that YouTube uses to uniquely identify the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>The channel&apos;s description.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>The date and time that the channel was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the channel. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual ChannelSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>The channel&apos;s title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the channel. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>Statistics about a channel: number of subscribers, number of videos in the channel, etc.</summary>
    public class ChannelStatistics {
        
        private string _commentCount;
        
        private string _subscriberCount;
        
        private string _videoCount;
        
        private string _viewCount;
        
        /// <summary>The number of comments for the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commentCount")]
        public virtual string CommentCount {
            get {
                return this._commentCount;
            }
            set {
                this._commentCount = value;
            }
        }
        
        /// <summary>The number of subscribers that the channel has.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subscriberCount")]
        public virtual string SubscriberCount {
            get {
                return this._subscriberCount;
            }
            set {
                this._subscriberCount = value;
            }
        }
        
        /// <summary>The number of videos uploaded to the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoCount")]
        public virtual string VideoCount {
            get {
                return this._videoCount;
            }
            set {
                this._videoCount = value;
            }
        }
        
        /// <summary>The number of times the channel has been viewed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("viewCount")]
        public virtual string ViewCount {
            get {
                return this._viewCount;
            }
            set {
                this._viewCount = value;
            }
        }
    }
    
    /// <summary>JSON template for the status part of a channel.</summary>
    public class ChannelStatus {
        
        private string _privacyStatus;
        
        /// <summary>Privacy status of the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privacyStatus")]
        public virtual string PrivacyStatus {
            get {
                return this._privacyStatus;
            }
            set {
                this._privacyStatus = value;
            }
        }
    }
    
    /// <summary>Freebase topic information related to the channel.</summary>
    public class ChannelTopicDetails {
        
        private System.Collections.Generic.IList<string> _topicIds;
        
        /// <summary>A list of Freebase topic IDs associated with the channel. You can retrieve information about each topic using the Freebase Topic API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topicIds")]
        public virtual System.Collections.Generic.IList<string> TopicIds {
            get {
                return this._topicIds;
            }
            set {
                this._topicIds = value;
            }
        }
    }
    
    /// <summary>A geoPoint holds geo location information associated with a YouTube resource.</summary>
    public class GeoPoint {
        
        private System.Nullable<double> _elevation;
        
        private System.Nullable<double> _latitude;
        
        private System.Nullable<double> _longitude;
        
        /// <summary>Altitude above the Earth, in meters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("elevation")]
        public virtual System.Nullable<double> Elevation {
            get {
                return this._elevation;
            }
            set {
                this._elevation = value;
            }
        }
        
        /// <summary>Latitude in degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latitude")]
        public virtual System.Nullable<double> Latitude {
            get {
                return this._latitude;
            }
            set {
                this._latitude = value;
            }
        }
        
        /// <summary>Longitude in degrees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("longitude")]
        public virtual System.Nullable<double> Longitude {
            get {
                return this._longitude;
            }
            set {
                this._longitude = value;
            }
        }
    }
    
    /// <summary>A guideCategory resource identifies a category that YouTube algorithmically assigns based on a channel&apos;s content or other indicators, such as the channel&apos;s popularity. The list is similar to video categories, with the difference being that a video&apos;s uploader can assign a video category but only YouTube can assign a channel category.</summary>
    public class GuideCategory {
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private GuideCategorySnippet _snippet;
        
        /// <summary>The ETag of the guideCategory resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For guideCategory resources, the value will be youtube#guideCategory/code&gt;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about a guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual GuideCategorySnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>A paginated list of guide categories returned as the response to a youtube.guideCategories.list call.</summary>
    public class GuideCategoryListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<GuideCategory> _items;
        
        private string _kind;
        
        /// <summary>The ETag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>A list of categories that can be associated with YouTube channels. In this map, the category ID is the map key, and its value is the corresponding guideCategory resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GuideCategory> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value will be youtube#guideCategoryListResponse.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
    }
    
    /// <summary>Basic details about a guide category.</summary>
    public class GuideCategorySnippet {
        
        private string _channelId;
        
        private string _title;
        
        /// <summary>The ID that YouTube uses to uniquely identify the channel publishing the guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>The category&apos;s title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
    }
    
    /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
    public class PageInfo {
        
        private System.Nullable<long> _resultsPerPage;
        
        private System.Nullable<long> _totalResults;
        
        /// <summary>The number of results included in the API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resultsPerPage")]
        public virtual System.Nullable<long> ResultsPerPage {
            get {
                return this._resultsPerPage;
            }
            set {
                this._resultsPerPage = value;
            }
        }
        
        /// <summary>The total number of results in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalResults")]
        public virtual System.Nullable<long> TotalResults {
            get {
                return this._totalResults;
            }
            set {
                this._totalResults = value;
            }
        }
    }
    
    /// <summary>A playlist resource represents a YouTube playlist. A playlist is a collection of videos that can be viewed sequentially and shared with other users. A playlist can contain up to 200 videos, and YouTube does not limit the number of playlists that each user creates. By default, playlists are publicly visible to other users, but playlists can be public or private.
    ///
    ///YouTube also uses playlists to identify special collections of videos for a channel, such as:  
    ///- uploaded videos 
    ///- favorite videos 
    ///- positively rated (liked) videos 
    ///- watch history 
    ///- watch later  To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company&apos;s videos, playlists, and other YouTube information. You can retrieve the playlist IDs for each of these lists from the channel resource for a given channel.
    ///
    ///You can then use the playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the playlistItems.insert and playlistItems.delete methods.</summary>
    public class Playlist : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private PlaylistSnippet _snippet;
        
        private PlaylistStatus _status;
        
        /// <summary>The ETag for the playlist resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For video resources, the value will be youtube#playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about a playlist, including title, description and thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual PlaylistSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
        
        /// <summary>The status details of a playlist describes whether the playlist is private.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual PlaylistStatus Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
    }
    
    /// <summary>A playlistItem resource identifies another resource, such as a video, that is included in a playlist. In addition, the playlistItem resource contains details about the included resource that pertain specifically to how that resource is used in that playlist.
    ///
    ///YouTube uses playlists to identify special collections of videos for a channel, such as:  
    ///- uploaded videos 
    ///- favorite videos 
    ///- positively rated (liked) videos 
    ///- watch history 
    ///- watch later  To be more specific, these lists are associated with a channel, which is a collection of a person, group, or company&apos;s videos, playlists, and other YouTube information.
    ///
    ///You can retrieve the playlist IDs for each of these lists from the channel resource for a given channel. You can then use the playlistItems.list method to retrieve any of those lists. You can also add or remove items from those lists by calling the playlistItems.insert and playlistItems.delete methods. For example, if a user gives a positive rating to a video, you would insert that video into the liked videos playlist for that user&apos;s channel.</summary>
    public class PlaylistItem : Google.Apis.Requests.IDirectResponseSchema {
        
        private PlaylistItemContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private PlaylistItemSnippet _snippet;
        
        /// <summary>Details about the content of a playlist item, such as the video or the video fragment start and end time included in the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual PlaylistItemContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The ETag for the playlist item resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For playlist item resources, the value will be youtube#playlistItem.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about an item included in a playlist, including title, description, thumbnails, playlist the item is part of and position of the item inside the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual PlaylistItemSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>Details about the content of a playlist item, such as the video or the video fragment start and end time included in the playlist.</summary>
    public class PlaylistItemContentDetails {
        
        private string _endAt;
        
        private string _note;
        
        private string _startAt;
        
        private string _videoId;
        
        /// <summary>The time, measured in seconds from the start of the video, when the video should stop playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) By default, assume that the video.endTime is the end of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endAt")]
        public virtual string EndAt {
            get {
                return this._endAt;
            }
            set {
                this._endAt = value;
            }
        }
        
        /// <summary>A user-generated note for this item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("note")]
        public virtual string Note {
            get {
                return this._note;
            }
            set {
                this._note = value;
            }
        }
        
        /// <summary>The time, measured in seconds from the start of the video, when the video should start playing. (The playlist owner can specify the times when the video should start and stop playing when the video is played in the context of the playlist.) The default value is 0.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startAt")]
        public virtual string StartAt {
            get {
                return this._startAt;
            }
            set {
                this._startAt = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify a video. To retrieve the video resource, set the id query parameter to this value in your API request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
        public virtual string VideoId {
            get {
                return this._videoId;
            }
            set {
                this._videoId = value;
            }
        }
    }
    
    /// <summary>A paginated list of playlist items returned as the response to a youtube.playlistItems.list call.</summary>
    public class PlaylistItemListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<PlaylistItem> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>The ETag for the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>A list of playlist items that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<PlaylistItem> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value will be youtube#playlistItemListResponse.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>A token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>A token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>Basic details about an item included in a playlist, including title, description, thumbnails, playlist the item is part of and position of the item inside the playlist.</summary>
    public class PlaylistItemSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _playlistId;
        
        private System.Nullable<long> _position;
        
        private string _publishedAt;
        
        private ResourceId _resourceId;
        
        private PlaylistItemSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>The ID that YouTube uses to uniquely identify the user that added the item to the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>The item&apos;s description.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the playlist that the playlist item is in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playlistId")]
        public virtual string PlaylistId {
            get {
                return this._playlistId;
            }
            set {
                this._playlistId = value;
            }
        }
        
        /// <summary>The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("position")]
        public virtual System.Nullable<long> Position {
            get {
                return this._position;
            }
            set {
                this._position = value;
            }
        }
        
        /// <summary>The date and time that the item was added to the playlist. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
        public virtual ResourceId ResourceId {
            get {
                return this._resourceId;
            }
            set {
                this._resourceId = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the playlist item. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual PlaylistItemSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>The item&apos;s title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the playlist item. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>A paginated list of playlists returned as the response to a youtube.playlists.list call.</summary>
    public class PlaylistListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<Playlist> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>The ETag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>A list of playlists that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Playlist> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value will be youtube#playlistListResponse.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>Basic details about a playlist, including title, description and thumbnails.</summary>
    public class PlaylistSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private PlaylistSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>The ID that YouTube uses to uniquely identify the channel that published the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>The playlist&apos;s description.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>The date and time that the playlist was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the playlist. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual PlaylistSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>The playlist&apos;s title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the playlist. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>The status details of a playlist describes whether the playlist is private.</summary>
    public class PlaylistStatus {
        
        private string _privacyStatus;
        
        /// <summary>The playlist&apos;s privacy status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privacyStatus")]
        public virtual string PrivacyStatus {
            get {
                return this._privacyStatus;
            }
            set {
                this._privacyStatus = value;
            }
        }
    }
    
    /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
    public class ResourceId {
        
        private string _channelId;
        
        private string _kind;
        
        private string _playlistId;
        
        private string _videoId;
        
        /// <summary>The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>The kind, or type, of the referred resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playlistId")]
        public virtual string PlaylistId {
            get {
                return this._playlistId;
            }
            set {
                this._playlistId = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
        public virtual string VideoId {
            get {
                return this._videoId;
            }
            set {
                this._videoId = value;
            }
        }
    }
    
    /// <summary>A paginated list of search results returned as the response to a youtube.search.list call.</summary>
    public class SearchListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<SearchResult> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>The ETag for the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>A list of results that match the search criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<SearchResult> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value will be youtube#searchListResponse.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>A search result contains information about a YouTube video, channel, or playlist that matches the search parameters specified in an API request. While a search result points to a uniquely identifiable resource, like a video, it does not have its own persistent data.</summary>
    public class SearchResult {
        
        private string _etag;
        
        private ResourceId _id;
        
        private string _kind;
        
        private SearchResultSnippet _snippet;
        
        /// <summary>The ETag of the search result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual ResourceId Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API response. For this resource, the value will be youtube#searchResult.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about a search result, including title, description and thumbnails of the item referenced by the search result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual SearchResultSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>Basic details about a search result, including title, description and thumbnails of the item referenced by the search result.</summary>
    public class SearchResultSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private SearchResultSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>The value that YouTube uses to uniquely identify the channel that published the resource that the search result identifies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>A description of the search result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>The creation date and time of the resource that the search result identifies. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the search result. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual SearchResultSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>The title to display for the search result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the search result. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>A subscription resource contains information about a YouTube user subscription. A subscription notifies a user when new videos are added to a channel or when another user takes one of several actions on YouTube, such as uploading a video, rating a video, or commenting on a video.</summary>
    public class Subscription : Google.Apis.Requests.IDirectResponseSchema {
        
        private SubscriptionContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private SubscriptionSnippet _snippet;
        
        /// <summary>Details about the content to witch a subscription refers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual SubscriptionContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The ETag of the subscription resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For subscription resources, the value will be youtube#subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about a subscription, including title, description and thumbnails of the subscribed item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual SubscriptionSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>Details about the content to witch a subscription refers.</summary>
    public class SubscriptionContentDetails {
        
        private System.Nullable<long> _newItemCount;
        
        private System.Nullable<long> _totalItemCount;
        
        /// <summary>The number of new items in the subscription since its content was last read.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newItemCount")]
        public virtual System.Nullable<long> NewItemCount {
            get {
                return this._newItemCount;
            }
            set {
                this._newItemCount = value;
            }
        }
        
        /// <summary>The approximate number of items that the subscription points to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalItemCount")]
        public virtual System.Nullable<long> TotalItemCount {
            get {
                return this._totalItemCount;
            }
            set {
                this._totalItemCount = value;
            }
        }
    }
    
    /// <summary>A paginated list of subscriptions returned as the response to a youtube.subscriptions.list call.</summary>
    public class SubscriptionListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<Subscription> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>The ETag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>A list of subscriptions that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Subscription> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value will be youtube#subscriptionListResponse.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>Basic details about a subscription, including title, description and thumbnails of the subscribed item.</summary>
    public class SubscriptionSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private ResourceId _resourceId;
        
        private SubscriptionSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>The ID that YouTube uses to uniquely identify the subscriber&apos;s channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>The subscription&apos;s details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>The date and time that the subscription was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
        public virtual ResourceId ResourceId {
            get {
                return this._resourceId;
            }
            set {
                this._resourceId = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the subscription. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual SubscriptionSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>The subscription&apos;s title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the subscription. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>A thumbnail is an image representing a YouTube resource.</summary>
    public class Thumbnail {
        
        private string _url;
        
        /// <summary>The thumbnail image&apos;s URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this._url;
            }
            set {
                this._url = value;
            }
        }
    }
    
    /// <summary>A video resource represents a YouTube video.</summary>
    public class Video : Google.Apis.Requests.IDirectResponseSchema {
        
        private VideoContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private VideoPlayer _player;
        
        private VideoRecordingDetails _recordingDetails;
        
        private VideoSnippet _snippet;
        
        private VideoStatistics _statistics;
        
        private VideoStatus _status;
        
        private VideoTopicDetails _topicDetails;
        
        /// <summary>Details about the media content of a YouTube video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual VideoContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The ETag of the video resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For video resources, the value will be youtube#video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Player to be used for a video playback.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("player")]
        public virtual VideoPlayer Player {
            get {
                return this._player;
            }
            set {
                this._player = value;
            }
        }
        
        /// <summary>Recording information associated with the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recordingDetails")]
        public virtual VideoRecordingDetails RecordingDetails {
            get {
                return this._recordingDetails;
            }
            set {
                this._recordingDetails = value;
            }
        }
        
        /// <summary>Basic details about a video, including title, description, uploader, thumbnails and category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual VideoSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
        
        /// <summary>Statistics about the video, such as the number of times the video was viewed or liked.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statistics")]
        public virtual VideoStatistics Statistics {
            get {
                return this._statistics;
            }
            set {
                this._statistics = value;
            }
        }
        
        /// <summary>The status of a video details the video&apos;s upload status and privacy status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual VideoStatus Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
        
        /// <summary>Freebase topic information related to the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topicDetails")]
        public virtual VideoTopicDetails TopicDetails {
            get {
                return this._topicDetails;
            }
            set {
                this._topicDetails = value;
            }
        }
    }
    
    /// <summary>A videoCategory resource identifies a category that has been or could be associated with uploaded videos.</summary>
    public class VideoCategory {
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private VideoCategorySnippet _snippet;
        
        /// <summary>The ETag of the videoCategory resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the video category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For video category resources, the value will be youtube#videoCategory.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about a video category, such as its localized title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual VideoCategorySnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>A paginated list of video categories returned as the response to a youtube.videoCategory.list call.</summary>
    public class VideoCategoryListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<VideoCategory> _items;
        
        private string _kind;
        
        /// <summary>The ETag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>A list of video categories that can be associated with YouTube videos. In this map, the video category ID is the map key, and its value is the corresponding videoCategory resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<VideoCategory> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value will be youtube#videoCategoryListResponse.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
    }
    
    /// <summary>Basic details about a video category, such as its localized title.</summary>
    public class VideoCategorySnippet {
        
        private string _channelId;
        
        private string _title;
        
        /// <summary>The YouTube channel that created the video category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>The video category&apos;s title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
    }
    
    /// <summary>Details about the media content of a YouTube video.</summary>
    public class VideoContentDetails {
        
        private string _duration;
        
        private VideoContentDetails.RegionRestrictionData _regionRestriction;
        
        /// <summary>The length of the video. The tag value is an ISO 8601 duration in the format PT#M#S, in which the letters PT indicate that the value specifies a period of time, and the letters M and S refer to length in minutes and seconds, respectively. The # characters preceding the M and S letters are both integers that specify the number of minutes (or seconds) of the video. For example, a value of PT15M51S indicates that the video is 15 minutes and 51 seconds long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duration")]
        public virtual string Duration {
            get {
                return this._duration;
            }
            set {
                this._duration = value;
            }
        }
        
        /// <summary>The regionRestriction object contains information about the countries where a video is (or is not) viewable. The object will contain either the contentDetails.regionRestriction.allowed property or the contentDetails.regionRestriction.blocked property.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionRestriction")]
        public virtual VideoContentDetails.RegionRestrictionData RegionRestriction {
            get {
                return this._regionRestriction;
            }
            set {
                this._regionRestriction = value;
            }
        }
        
        /// <summary>The regionRestriction object contains information about the countries where a video is (or is not) viewable. The object will contain either the contentDetails.regionRestriction.allowed property or the contentDetails.regionRestriction.blocked property.</summary>
        public class RegionRestrictionData {
            
            private System.Collections.Generic.IList<string> _allowed;
            
            private System.Collections.Generic.IList<string> _blocked;
            
            /// <summary>A list of region codes that identify countries where the video is viewable. If this property is present and a country is not listed in its value, then the video is blocked from appearing in that country. If this property is present and contains an empty list, the video is blocked in all countries.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("allowed")]
            public virtual System.Collections.Generic.IList<string> Allowed {
                get {
                    return this._allowed;
                }
                set {
                    this._allowed = value;
                }
            }
            
            /// <summary>A list of region codes that identify countries where the video is blocked. If this property is present and a country is not listed in its value, then the video is viewable in that country. If this property is present and contains an empty list, the video is viewable in all countries.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("blocked")]
            public virtual System.Collections.Generic.IList<string> Blocked {
                get {
                    return this._blocked;
                }
                set {
                    this._blocked = value;
                }
            }
        }
    }
    
    /// <summary>A paginated list of videos returned as the response to a youtube.videos.list call.</summary>
    public class VideoListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<Video> _items;
        
        private string _kind;
        
        /// <summary>The ETag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>A list of videos that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Video> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value will be youtube#videoListResponse.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
    }
    
    /// <summary>Player to be used for a video playback.</summary>
    public class VideoPlayer {
        
        private string _embedHtml;
        
        /// <summary>An &lt;iframe&gt; tag that embeds a player that will play the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("embedHtml")]
        public virtual string EmbedHtml {
            get {
                return this._embedHtml;
            }
            set {
                this._embedHtml = value;
            }
        }
    }
    
    /// <summary>Recording information associated with the video.</summary>
    public class VideoRecordingDetails {
        
        private GeoPoint _location;
        
        private string _locationDescription;
        
        private string _recordingDate;
        
        /// <summary>A geoPoint holds geo location information associated with a YouTube resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual GeoPoint Location {
            get {
                return this._location;
            }
            set {
                this._location = value;
            }
        }
        
        /// <summary>The text description of the location where the video was recorded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationDescription")]
        public virtual string LocationDescription {
            get {
                return this._locationDescription;
            }
            set {
                this._locationDescription = value;
            }
        }
        
        /// <summary>The date and time when the video was recorded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recordingDate")]
        public virtual string RecordingDate {
            get {
                return this._recordingDate;
            }
            set {
                this._recordingDate = value;
            }
        }
    }
    
    /// <summary>Basic details about a video, including title, description, uploader, thumbnails and category.</summary>
    public class VideoSnippet {
        
        private string _categoryId;
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private System.Collections.Generic.IList<string> _tags;
        
        private VideoSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>The YouTube video category associated with the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("categoryId")]
        public virtual string CategoryId {
            get {
                return this._categoryId;
            }
            set {
                this._categoryId = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the channel that the video was uploaded to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>The video&apos;s description.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>The date and time that the video was uploaded. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>A list of keyword tags associated with the video. Tags may contain spaces. This field is only visible to the video&apos;s uploader.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags {
            get {
                return this._tags;
            }
            set {
                this._tags = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the video. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual VideoSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>The video&apos;s title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>A map of thumbnail images associated with the video. For each object in the map, the key is the name of the thumbnail image, and the value is an object that contains other information about the thumbnail.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>Statistics about the video, such as the number of times the video was viewed or liked.</summary>
    public class VideoStatistics {
        
        private string _commentCount;
        
        private string _dislikeCount;
        
        private string _favoriteCount;
        
        private string _likeCount;
        
        private string _viewCount;
        
        /// <summary>The number of comments for the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commentCount")]
        public virtual string CommentCount {
            get {
                return this._commentCount;
            }
            set {
                this._commentCount = value;
            }
        }
        
        /// <summary>The number of users who have indicated that they disliked the video by giving it a negative rating.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dislikeCount")]
        public virtual string DislikeCount {
            get {
                return this._dislikeCount;
            }
            set {
                this._dislikeCount = value;
            }
        }
        
        /// <summary>The number of users who currently have the video marked as a favorite video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("favoriteCount")]
        public virtual string FavoriteCount {
            get {
                return this._favoriteCount;
            }
            set {
                this._favoriteCount = value;
            }
        }
        
        /// <summary>The number of users who have indicated that they liked the video by giving it a positive rating.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("likeCount")]
        public virtual string LikeCount {
            get {
                return this._likeCount;
            }
            set {
                this._likeCount = value;
            }
        }
        
        /// <summary>The number of times the video has been viewed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("viewCount")]
        public virtual string ViewCount {
            get {
                return this._viewCount;
            }
            set {
                this._viewCount = value;
            }
        }
    }
    
    /// <summary>The status of a video details the video&apos;s upload status and privacy status.</summary>
    public class VideoStatus {
        
        private string _failureReason;
        
        private string _privacyStatus;
        
        private string _rejectionReason;
        
        private string _uploadStatus;
        
        /// <summary>This value explains why a video failed to upload. This property is only present if the uploadStatus property indicates that the upload failed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureReason")]
        public virtual string FailureReason {
            get {
                return this._failureReason;
            }
            set {
                this._failureReason = value;
            }
        }
        
        /// <summary>The video&apos;s privacy status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privacyStatus")]
        public virtual string PrivacyStatus {
            get {
                return this._privacyStatus;
            }
            set {
                this._privacyStatus = value;
            }
        }
        
        /// <summary>This value explains why YouTube rejected an uploaded video. This property is only present if the uploadStatus property indicates that the upload was rejected.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rejectionReason")]
        public virtual string RejectionReason {
            get {
                return this._rejectionReason;
            }
            set {
                this._rejectionReason = value;
            }
        }
        
        /// <summary>The status of the uploaded video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uploadStatus")]
        public virtual string UploadStatus {
            get {
                return this._uploadStatus;
            }
            set {
                this._uploadStatus = value;
            }
        }
    }
    
    /// <summary>Freebase topic information related to the video.</summary>
    public class VideoTopicDetails {
        
        private System.Collections.Generic.IList<string> _topicIds;
        
        /// <summary>A list of Freebase topic IDs associated with the video. You can retrieve information about each topic using the Freebase Topic API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topicIds")]
        public virtual System.Collections.Generic.IList<string> TopicIds {
            get {
                return this._topicIds;
            }
            set {
                this._topicIds = value;
            }
        }
    }
}
namespace Google.Apis.Youtube.v3 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class YoutubeService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService _service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"etag\":\"\\\"a3GBuXuTtUYW9BV1SIieU5LiL7w/YHC7oSI" +
            "aW3d8wkNiv2Gc09Lm6Fk\\\"\",\"discoveryVersion\":\"v1\",\"id\":\"youtube:v3\",\"name\":\"youtub" +
            "e\",\"canonicalName\":\"YouTube\",\"version\":\"v3\",\"revision\":\"20121127\",\"title\":\"YouTu" +
            "be API\",\"description\":\"Programmatic access to YouTube features.\",\"icons\":{\"x16\":" +
            "\"http://www.google.com/images/icons/product/youtube-16.png\",\"x32\":\"http://www.go" +
            "ogle.com/images/icons/product/youtube-32.png\"},\"documentationLink\":\"https://deve" +
            "lopers.google.com/youtube\",\"protocol\":\"rest\",\"baseUrl\":\"https://www.googleapis.c" +
            "om/youtube/v3/\",\"basePath\":\"/youtube/v3/\",\"rootUrl\":\"https://www.googleapis.com/" +
            "\",\"servicePath\":\"youtube/v3/\",\"batchPath\":\"batch\",\"parameters\":{\"alt\":{\"type\":\"s" +
            "tring\",\"description\":\"Data format for the response.\",\"default\":\"json\",\"enum\":[\"j" +
            "son\"],\"enumDescriptions\":[\"Responses with Content-Type of application/json\"],\"lo" +
            "cation\":\"query\"},\"fields\":{\"type\":\"string\",\"description\":\"Selector specifying wh" +
            "ich fields to include in a partial response.\",\"location\":\"query\"},\"key\":{\"type\":" +
            "\"string\",\"description\":\"API key. Your API key identifies your project and provid" +
            "es you with API access, quota, and reports. Required unless you provide an OAuth" +
            " 2.0 token.\",\"location\":\"query\"},\"oauth_token\":{\"type\":\"string\",\"description\":\"O" +
            "Auth 2.0 token for the current user.\",\"location\":\"query\"},\"prettyPrint\":{\"type\":" +
            "\"boolean\",\"description\":\"Returns response with indentations and line breaks.\",\"d" +
            "efault\":\"true\",\"location\":\"query\"},\"quotaUser\":{\"type\":\"string\",\"description\":\"A" +
            "vailable to use for quota purposes for server-side applications. Can be any arbi" +
            "trary string assigned to a user, but should not exceed 40 characters. Overrides " +
            "userIp if both are provided.\",\"location\":\"query\"},\"userIp\":{\"type\":\"string\",\"des" +
            "cription\":\"IP address of the site where the request originates. Use this if you " +
            "want to enforce per-user limits.\",\"location\":\"query\"}},\"auth\":{\"oauth2\":{\"scopes" +
            "\":{\"https://www.googleapis.com/auth/youtube\":{\"description\":\"Manage your YouTube" +
            " account\"},\"https://www.googleapis.com/auth/youtube.readonly\":{\"description\":\"Vi" +
            "ew your YouTube account\"},\"https://www.googleapis.com/auth/youtube.upload\":{\"des" +
            "cription\":\"Manage your YouTube videos\"},\"https://www.googleapis.com/auth/youtube" +
            "partner\":{\"description\":\"View and manage your assets and associated content on Y" +
            "ouTube\"}}}},\"schemas\":{\"Activity\":{\"id\":\"Activity\",\"type\":\"object\",\"description\"" +
            ":\"An activity resource contains information about an action that a particular ch" +
            "annel, or user, has taken on YouTube. The actions reported in activity feeds inc" +
            "lude rating a video, sharing a video, marking a video as a favorite, commenting " +
            "on a video, uploading a video, and so forth. Each activity resource identifies t" +
            "he type of action, the channel associated with the action, and the resource(s) a" +
            "ssociated with the action, such as the video that was rated or uploaded.\",\"prope" +
            "rties\":{\"contentDetails\":{\"$ref\":\"ActivityContentDetails\",\"description\":\"The con" +
            "tentDetails object contains information about the content associated with the ac" +
            "tivity. For example, if the snippet.type value is videoRated, then the contentDe" +
            "tails object\'s content identifies the rated video.\"},\"etag\":{\"type\":\"string\",\"de" +
            "scription\":\"The ETag of the activity resource.\"},\"id\":{\"type\":\"string\",\"descript" +
            "ion\":\"The ID that YouTube uses to uniquely identify the activity.\"},\"kind\":{\"typ" +
            "e\":\"string\",\"description\":\"The type of the API resource. For activity resources," +
            " the value will be youtube#activity.\",\"default\":\"youtube#activity\"},\"snippet\":{\"" +
            "$ref\":\"ActivitySnippet\",\"description\":\"The snippet object contains basic details" +
            " about the activity, including the activity\'s type and group ID.\"}}},\"ActivityCo" +
            "ntentDetails\":{\"id\":\"ActivityContentDetails\",\"type\":\"object\",\"description\":\"Deta" +
            "ils about the content of an activity: the video that was shared, the channel tha" +
            "t was subscribed to, etc.\",\"properties\":{\"bulletin\":{\"type\":\"object\",\"descriptio" +
            "n\":\"The bulletin object contains details about a channel bulletin post. This obj" +
            "ect is only present if the snippet.type is bulletin.\",\"properties\":{\"resourceId\"" +
            ":{\"$ref\":\"ResourceId\",\"description\":\"The resourceId object contains information " +
            "that identifies the resource associated with a bulletin post.\"}}},\"comment\":{\"ty" +
            "pe\":\"object\",\"description\":\"The comment object contains information about a reso" +
            "urce that received a comment. This property is only present if the snippet.type " +
            "is comment.\",\"properties\":{\"resourceId\":{\"$ref\":\"ResourceId\",\"description\":\"The " +
            "resourceId object contains information that identifies the resource associated w" +
            "ith the comment.\"}}},\"favorite\":{\"type\":\"object\",\"description\":\"The favorite obj" +
            "ect contains information about a video that was marked as a favorite video. This" +
            " property is only present if the snippet.type is favorite.\",\"properties\":{\"resou" +
            "rceId\":{\"$ref\":\"ResourceId\",\"description\":\"The resourceId object contains inform" +
            "ation that identifies the resource that was marked as a favorite.\"}}},\"like\":{\"t" +
            "ype\":\"object\",\"description\":\"The like object contains information about a resour" +
            "ce that received a positive (like) rating. This property is only present if the " +
            "snippet.type is like.\",\"properties\":{\"resourceId\":{\"$ref\":\"ResourceId\",\"descript" +
            "ion\":\"The resourceId object contains information that identifies the rated resou" +
            "rce.\"}}},\"playlistItem\":{\"type\":\"object\",\"description\":\"The playlistItem object " +
            "contains information about a new playlist item. This property is only present if" +
            " the snippet.type is playlistItem.\",\"properties\":{\"playlistId\":{\"type\":\"string\"," +
            "\"description\":\"The value that YouTube uses to uniquely identify the playlist.\"}," +
            "\"playlistItemId\":{\"type\":\"string\",\"description\":\"ID of the item within the playl" +
            "ist.\"},\"resourceId\":{\"$ref\":\"ResourceId\",\"description\":\"The resourceId object co" +
            "ntains information about the resource that was added to the playlist.\"}}},\"recom" +
            "mendation\":{\"type\":\"object\",\"description\":\"The recommendation object contains in" +
            "formation about a recommended resource. This property is only present if the sni" +
            "ppet.type is recommendation.\",\"properties\":{\"reason\":{\"type\":\"string\",\"descripti" +
            "on\":\"The reason that the resource is recommended to the user.\"},\"resourceId\":{\"$" +
            "ref\":\"ResourceId\",\"description\":\"The resourceId object contains information that" +
            " identifies the recommended resource.\"},\"seedResourceId\":{\"$ref\":\"ResourceId\",\"d" +
            "escription\":\"The seedResourceId object contains information about the resource t" +
            "hat caused the recommendation.\"}}},\"social\":{\"type\":\"object\",\"description\":\"The " +
            "social object contains details about a social network post. This property is onl" +
            "y present if the snippet.type is social.\",\"properties\":{\"author\":{\"type\":\"string" +
            "\",\"description\":\"The author of the social network post.\"},\"imageUrl\":{\"type\":\"st" +
            "ring\",\"description\":\"An image of the post\'s author.\"},\"referenceUrl\":{\"type\":\"st" +
            "ring\",\"description\":\"The URL of the social network post.\"},\"resourceId\":{\"$ref\":" +
            "\"ResourceId\",\"description\":\"The resourceId object encapsulates information that " +
            "identifies the resource associated with a social network post.\"},\"type\":{\"type\":" +
            "\"string\",\"description\":\"The name of the social network.\"}}},\"subscription\":{\"typ" +
            "e\":\"object\",\"description\":\"The subscription object contains information about a " +
            "channel that a user subscribed to. This property is only present if the snippet." +
            "type is subscription.\",\"properties\":{\"resourceId\":{\"$ref\":\"ResourceId\",\"descript" +
            "ion\":\"The resourceId object contains information that identifies the resource th" +
            "at the user subscribed to.\"}}},\"upload\":{\"type\":\"object\",\"description\":\"The uplo" +
            "ad object contains information about the uploaded video. This property is only p" +
            "resent if the snippet.type is upload.\",\"properties\":{\"videoId\":{\"type\":\"string\"," +
            "\"description\":\"The ID that YouTube uses to uniquely identify the uploaded video." +
            "\"}}}}},\"ActivityListResponse\":{\"id\":\"ActivityListResponse\",\"type\":\"object\",\"desc" +
            "ription\":\"A paginated list of activities returned as a response to youtube.activ" +
            "ities.list calls.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The ETag" +
            " of the response.\"},\"items\":{\"type\":\"array\",\"description\":\"A list of activities," +
            " or events, that match the request criteria.\",\"items\":{\"$ref\":\"Activity\"}},\"kind" +
            "\":{\"type\":\"string\",\"description\":\"The type of the API response. For this operati" +
            "on, the value will be youtube#activityListResponse.\",\"default\":\"youtube#activity" +
            "ListResponse\"},\"nextPageToken\":{\"type\":\"string\",\"description\":\"The token that ca" +
            "n be used as the value of the pageToken parameter to retrieve the next page in t" +
            "he result set.\"},\"pageInfo\":{\"$ref\":\"PageInfo\",\"description\":\"The pageInfo objec" +
            "t encapsulates paging information for the result set.\"},\"prevPageToken\":{\"type\":" +
            "\"string\",\"description\":\"The token that can be used as the value of the pageToken" +
            " parameter to retrieve the previous page in the result set.\"}}},\"ActivitySnippet" +
            "\":{\"id\":\"ActivitySnippet\",\"type\":\"object\",\"description\":\"Basic details about an " +
            "activity, including title, description, thumbnails, activity type and group.\",\"p" +
            "roperties\":{\"channelId\":{\"type\":\"string\",\"description\":\"The ID that YouTube uses" +
            " to uniquely identify the channel associated with the activity.\"},\"description\":" +
            "{\"type\":\"string\",\"description\":\"The description of the resource primarily associ" +
            "ated with the activity.\",\"annotations\":{\"required\":[\"youtube.activities.insert\"]" +
            "}},\"groupId\":{\"type\":\"string\",\"description\":\"The group ID associated with the ac" +
            "tivity. A group ID identifies user events that are associated with the same user" +
            " and resource. For example, if a user rates a video and marks the same video as " +
            "a favorite, the entries for those events would have the same group ID in the use" +
            "r\'s activity feed. In your user interface, you can avoid repetition by grouping " +
            "events with the same groupId value.\"},\"publishedAt\":{\"type\":\"string\",\"descriptio" +
            "n\":\"The date and time that the activity occurred. The value is specified in ISO " +
            "8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\",\"format\":\"date-time\"},\"thumbnails\":{\"type" +
            "\":\"object\",\"description\":\"A map of thumbnail images associated with the resource" +
            " that is primarily associated with the activity. For each object in the map, the" +
            " key is the name of the thumbnail image, and the value is an object that contain" +
            "s other information about the thumbnail.\",\"additionalProperties\":{\"$ref\":\"Thumbn" +
            "ail\",\"description\":\"The thumbnail image\'s name.\"}},\"title\":{\"type\":\"string\",\"des" +
            "cription\":\"The title of the resource primarily associated with the activity.\"},\"" +
            "type\":{\"type\":\"string\",\"description\":\"The type of activity that the resource des" +
            "cribes.\"}}},\"Channel\":{\"id\":\"Channel\",\"type\":\"object\",\"description\":\"A channel r" +
            "esource contains information about a YouTube channel.\",\"properties\":{\"contentDet" +
            "ails\":{\"$ref\":\"ChannelContentDetails\",\"description\":\"The contentDetails object e" +
            "ncapsulates information about the channel\'s content.\"},\"etag\":{\"type\":\"string\",\"" +
            "description\":\"The ETag for the channel resource.\"},\"id\":{\"type\":\"string\",\"descri" +
            "ption\":\"The ID that YouTube uses to uniquely identify the channel.\"},\"kind\":{\"ty" +
            "pe\":\"string\",\"description\":\"The type of the API resource. For channel resources," +
            " the value will be youtube#channel.\",\"default\":\"youtube#channel\"},\"snippet\":{\"$r" +
            "ef\":\"ChannelSnippet\",\"description\":\"The snippet object contains basic details ab" +
            "out the channel, such as its title, description, and thumbnail images.\"},\"statis" +
            "tics\":{\"$ref\":\"ChannelStatistics\",\"description\":\"The statistics object encapsula" +
            "tes statistics for the channel.\"},\"status\":{\"$ref\":\"ChannelStatus\",\"description\"" +
            ":\"The status object encapsulates information about the privacy status of the cha" +
            "nnel.\"},\"topicDetails\":{\"$ref\":\"ChannelTopicDetails\",\"description\":\"The topicDet" +
            "ails object encapsulates information about Freebase topics associated with the c" +
            "hannel.\"}}},\"ChannelContentDetails\":{\"id\":\"ChannelContentDetails\",\"type\":\"object" +
            "\",\"description\":\"Details about the content of a channel.\",\"properties\":{\"related" +
            "Playlists\":{\"type\":\"object\",\"description\":\"The relatedPlaylists object is a map " +
            "that identifies playlists associated with the channel, such as the channel\'s upl" +
            "oaded videos or favorite videos. You can retrieve any of these playlists using t" +
            "he playlists.list method.\",\"properties\":{\"favorites\":{\"type\":\"string\",\"descripti" +
            "on\":\"The ID of the playlist that contains the channel\'s favorite videos. Use the" +
            " playlistItems.insert and playlistItems.delete to add or remove items from that " +
            "list.\"},\"likes\":{\"type\":\"string\",\"description\":\"The ID of the playlist that cont" +
            "ains the channel\'s liked videos. Use the playlistItems.insert and playlistItems." +
            "delete to add or remove items from that list.\"},\"uploads\":{\"type\":\"string\",\"desc" +
            "ription\":\"The ID of the playlist that contains the channel\'s uploaded videos. Us" +
            "e the videos.insert method to upload new videos and the videos.delete method to " +
            "delete previously uploaded videos.\"},\"watchHistory\":{\"type\":\"string\",\"descriptio" +
            "n\":\"The ID of the playlist that contains the channel\'s watch history. Use the pl" +
            "aylistItems.insert and playlistItems.delete to add or remove items from that lis" +
            "t.\"},\"watchLater\":{\"type\":\"string\",\"description\":\"The ID of the channel\'s watch " +
            "later playlist. Use the playlistItems.insert and playlistItems.delete to add or " +
            "remove items from that list.\"}}}}},\"ChannelListResponse\":{\"id\":\"ChannelListRespo" +
            "nse\",\"type\":\"object\",\"description\":\"A paginated list of channels returned as the" +
            " response to a youtube.channels.list call.\",\"properties\":{\"etag\":{\"type\":\"string" +
            "\",\"description\":\"The ETag for the response.\"},\"items\":{\"type\":\"array\",\"descripti" +
            "on\":\"A list of channels that match the request criteria.\",\"items\":{\"$ref\":\"Chann" +
            "el\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type of the API response. For t" +
            "his operation, the value will be youtube#channelListResponse.\",\"default\":\"youtub" +
            "e#channelListResponse\"},\"nextPageToken\":{\"type\":\"string\",\"description\":\"The toke" +
            "n that can be used as the value of the pageToken parameter to retrieve the next " +
            "page in the result set.\"},\"pageInfo\":{\"$ref\":\"PageInfo\",\"description\":\"The pageI" +
            "nfo object encapsulates paging information for the result set.\"},\"prevPageToken\"" +
            ":{\"type\":\"string\",\"description\":\"The token that can be used as the value of the " +
            "pageToken parameter to retrieve the previous page in the result set.\"}}},\"Channe" +
            "lSnippet\":{\"id\":\"ChannelSnippet\",\"type\":\"object\",\"description\":\"Basic details ab" +
            "out a channel, including title, description and thumbnails.\",\"properties\":{\"chan" +
            "nelId\":{\"type\":\"string\",\"description\":\"The ID that YouTube uses to uniquely iden" +
            "tify the channel.\"},\"description\":{\"type\":\"string\",\"description\":\"The channel\'s " +
            "description.\"},\"publishedAt\":{\"type\":\"string\",\"description\":\"The date and time t" +
            "hat the channel was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:m" +
            "m:ss.sZ) format.\",\"format\":\"date-time\"},\"thumbnails\":{\"type\":\"object\",\"descripti" +
            "on\":\"A map of thumbnail images associated with the channel. For each object in t" +
            "he map, the key is the name of the thumbnail image, and the value is an object t" +
            "hat contains other information about the thumbnail.\",\"additionalProperties\":{\"$r" +
            "ef\":\"Thumbnail\",\"description\":\"The thumbnail image\'s name. This value is used as" +
            " the key in the snippet.thumbnails map.\"}},\"title\":{\"type\":\"string\",\"description" +
            "\":\"The channel\'s title.\"}}},\"ChannelStatistics\":{\"id\":\"ChannelStatistics\",\"type\"" +
            ":\"object\",\"description\":\"Statistics about a channel: number of subscribers, numb" +
            "er of videos in the channel, etc.\",\"properties\":{\"commentCount\":{\"type\":\"string\"" +
            ",\"description\":\"The number of comments for the channel.\",\"format\":\"uint64\"},\"sub" +
            "scriberCount\":{\"type\":\"string\",\"description\":\"The number of subscribers that the" +
            " channel has.\",\"format\":\"uint64\"},\"videoCount\":{\"type\":\"string\",\"description\":\"T" +
            "he number of videos uploaded to the channel.\",\"format\":\"uint64\"},\"viewCount\":{\"t" +
            "ype\":\"string\",\"description\":\"The number of times the channel has been viewed.\",\"" +
            "format\":\"uint64\"}}},\"ChannelStatus\":{\"id\":\"ChannelStatus\",\"type\":\"object\",\"descr" +
            "iption\":\"JSON template for the status part of a channel.\",\"properties\":{\"privacy" +
            "Status\":{\"type\":\"string\",\"description\":\"Privacy status of the channel.\"}}},\"Chan" +
            "nelTopicDetails\":{\"id\":\"ChannelTopicDetails\",\"type\":\"object\",\"description\":\"Free" +
            "base topic information related to the channel.\",\"properties\":{\"topicIds\":{\"type\"" +
            ":\"array\",\"description\":\"A list of Freebase topic IDs associated with the channel" +
            ". You can retrieve information about each topic using the Freebase Topic API.\",\"" +
            "items\":{\"type\":\"string\"}}}},\"GeoPoint\":{\"id\":\"GeoPoint\",\"type\":\"object\",\"descrip" +
            "tion\":\"A geoPoint holds geo location information associated with a YouTube resou" +
            "rce.\",\"properties\":{\"elevation\":{\"type\":\"number\",\"description\":\"Altitude above t" +
            "he Earth, in meters.\",\"format\":\"double\"},\"latitude\":{\"type\":\"number\",\"descriptio" +
            "n\":\"Latitude in degrees.\",\"format\":\"double\"},\"longitude\":{\"type\":\"number\",\"descr" +
            "iption\":\"Longitude in degrees.\",\"format\":\"double\"}}},\"GuideCategory\":{\"id\":\"Guid" +
            "eCategory\",\"type\":\"object\",\"description\":\"A guideCategory resource identifies a " +
            "category that YouTube algorithmically assigns based on a channel\'s content or ot" +
            "her indicators, such as the channel\'s popularity. The list is similar to video c" +
            "ategories, with the difference being that a video\'s uploader can assign a video " +
            "category but only YouTube can assign a channel category.\",\"properties\":{\"etag\":{" +
            "\"type\":\"string\",\"description\":\"The ETag of the guideCategory resource.\"},\"id\":{\"" +
            "type\":\"string\",\"description\":\"The ID that YouTube uses to uniquely identify the " +
            "guide category.\"},\"kind\":{\"type\":\"string\",\"description\":\"The type of the API res" +
            "ource. For guideCategory resources, the value will be youtube#guideCategory/code" +
            ">.\",\"default\":\"youtube#guideCategory\"},\"snippet\":{\"$ref\":\"GuideCategorySnippet\"," +
            "\"description\":\"The snippet object contains basic details about the category, suc" +
            "h as its title.\"}}},\"GuideCategoryListResponse\":{\"id\":\"GuideCategoryListResponse" +
            "\",\"type\":\"object\",\"description\":\"A paginated list of guide categories returned a" +
            "s the response to a youtube.guideCategories.list call.\",\"properties\":{\"etag\":{\"t" +
            "ype\":\"string\",\"description\":\"The ETag of the response.\"},\"items\":{\"type\":\"array\"" +
            ",\"description\":\"A list of categories that can be associated with YouTube channel" +
            "s. In this map, the category ID is the map key, and its value is the correspondi" +
            "ng guideCategory resource.\",\"items\":{\"$ref\":\"GuideCategory\"}},\"kind\":{\"type\":\"st" +
            "ring\",\"description\":\"The type of the API response. For this operation, the value" +
            " will be youtube#guideCategoryListResponse.\",\"default\":\"youtube#guideCategoryLis" +
            "tResponse\"}}},\"GuideCategorySnippet\":{\"id\":\"GuideCategorySnippet\",\"type\":\"object" +
            "\",\"description\":\"Basic details about a guide category.\",\"properties\":{\"channelId" +
            "\":{\"type\":\"string\",\"description\":\"The ID that YouTube uses to uniquely identify " +
            "the channel publishing the guide category.\",\"default\":\"UCBR8-60-B28hp2BmDPdntcQ\"" +
            "},\"title\":{\"type\":\"string\",\"description\":\"The category\'s title.\"}}},\"PageInfo\":{" +
            "\"id\":\"PageInfo\",\"type\":\"object\",\"description\":\"Paging details for lists of resou" +
            "rces, including total number of items available and number of resources returned" +
            " in a single page.\",\"properties\":{\"resultsPerPage\":{\"type\":\"integer\",\"descriptio" +
            "n\":\"The number of results included in the API response.\",\"format\":\"int32\"},\"tota" +
            "lResults\":{\"type\":\"integer\",\"description\":\"The total number of results in the re" +
            "sult set.\",\"format\":\"int32\"}}},\"Playlist\":{\"id\":\"Playlist\",\"type\":\"object\",\"desc" +
            "ription\":\"A playlist resource represents a YouTube playlist. A playlist is a col" +
            "lection of videos that can be viewed sequentially and shared with other users. A" +
            " playlist can contain up to 200 videos, and YouTube does not limit the number of" +
            " playlists that each user creates. By default, playlists are publicly visible to" +
            " other users, but playlists can be public or private.\\n\\nYouTube also uses playl" +
            "ists to identify special collections of videos for a channel, such as:  \\n- uplo" +
            "aded videos \\n- favorite videos \\n- positively rated (liked) videos \\n- watch hi" +
            "story \\n- watch later  To be more specific, these lists are associated with a ch" +
            "annel, which is a collection of a person, group, or company\'s videos, playlists," +
            " and other YouTube information. You can retrieve the playlist IDs for each of th" +
            "ese lists from the channel resource for a given channel.\\n\\nYou can then use the" +
            " playlistItems.list method to retrieve any of those lists. You can also add or r" +
            "emove items from those lists by calling the playlistItems.insert and playlistIte" +
            "ms.delete methods.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The ETa" +
            "g for the playlist resource.\"},\"id\":{\"type\":\"string\",\"description\":\"The ID that " +
            "YouTube uses to uniquely identify the playlist.\"},\"kind\":{\"type\":\"string\",\"descr" +
            "iption\":\"The type of the API resource. For video resources, the value will be yo" +
            "utube#playlist.\",\"default\":\"youtube#playlist\"},\"snippet\":{\"$ref\":\"PlaylistSnippe" +
            "t\",\"description\":\"The snippet object contains basic details about the playlist, " +
            "such as its title and description.\"},\"status\":{\"$ref\":\"PlaylistStatus\",\"descript" +
            "ion\":\"The status object contains status information for the playlist.\"}}},\"Playl" +
            "istItem\":{\"id\":\"PlaylistItem\",\"type\":\"object\",\"description\":\"A playlistItem reso" +
            "urce identifies another resource, such as a video, that is included in a playlis" +
            "t. In addition, the playlistItem resource contains details about the included re" +
            "source that pertain specifically to how that resource is used in that playlist.\\" +
            "n\\nYouTube uses playlists to identify special collections of videos for a channe" +
            "l, such as:  \\n- uploaded videos \\n- favorite videos \\n- positively rated (liked" +
            ") videos \\n- watch history \\n- watch later  To be more specific, these lists are" +
            " associated with a channel, which is a collection of a person, group, or company" +
            "\'s videos, playlists, and other YouTube information.\\n\\nYou can retrieve the pla" +
            "ylist IDs for each of these lists from the channel resource for a given channel." +
            " You can then use the playlistItems.list method to retrieve any of those lists. " +
            "You can also add or remove items from those lists by calling the playlistItems.i" +
            "nsert and playlistItems.delete methods. For example, if a user gives a positive " +
            "rating to a video, you would insert that video into the liked videos playlist fo" +
            "r that user\'s channel.\",\"properties\":{\"contentDetails\":{\"$ref\":\"PlaylistItemCont" +
            "entDetails\",\"description\":\"The contentDetails object is included in the resource" +
            " if the included item is a YouTube video. The object contains additional informa" +
            "tion about the video.\"},\"etag\":{\"type\":\"string\",\"description\":\"The ETag for the " +
            "playlist item resource.\"},\"id\":{\"type\":\"string\",\"description\":\"The ID that YouTu" +
            "be uses to uniquely identify the playlist item.\"},\"kind\":{\"type\":\"string\",\"descr" +
            "iption\":\"The type of the API resource. For playlist item resources, the value wi" +
            "ll be youtube#playlistItem.\",\"default\":\"youtube#playlistItem\"},\"snippet\":{\"$ref\"" +
            ":\"PlaylistItemSnippet\",\"description\":\"The snippet object contains basic details " +
            "about the playlist item, such as its title and position in the playlist.\"}}},\"Pl" +
            "aylistItemContentDetails\":{\"id\":\"PlaylistItemContentDetails\",\"type\":\"object\",\"de" +
            "scription\":\"Details about the content of a playlist item, such as the video or t" +
            "he video fragment start and end time included in the playlist.\",\"properties\":{\"e" +
            "ndAt\":{\"type\":\"string\",\"description\":\"The time, measured in seconds from the sta" +
            "rt of the video, when the video should stop playing. (The playlist owner can spe" +
            "cify the times when the video should start and stop playing when the video is pl" +
            "ayed in the context of the playlist.) By default, assume that the video.endTime " +
            "is the end of the video.\"},\"note\":{\"type\":\"string\",\"description\":\"A user-generat" +
            "ed note for this item.\"},\"startAt\":{\"type\":\"string\",\"description\":\"The time, mea" +
            "sured in seconds from the start of the video, when the video should start playin" +
            "g. (The playlist owner can specify the times when the video should start and sto" +
            "p playing when the video is played in the context of the playlist.) The default " +
            "value is 0.\"},\"videoId\":{\"type\":\"string\",\"description\":\"The ID that YouTube uses" +
            " to uniquely identify a video. To retrieve the video resource, set the id query " +
            "parameter to this value in your API request.\"}}},\"PlaylistItemListResponse\":{\"id" +
            "\":\"PlaylistItemListResponse\",\"type\":\"object\",\"description\":\"A paginated list of " +
            "playlist items returned as the response to a youtube.playlistItems.list call.\",\"" +
            "properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The ETag for the response.\"}" +
            ",\"items\":{\"type\":\"array\",\"description\":\"A list of playlist items that match the " +
            "request criteria.\",\"items\":{\"$ref\":\"PlaylistItem\"}},\"kind\":{\"type\":\"string\",\"des" +
            "cription\":\"The type of the API response. For this operation, the value will be y" +
            "outube#playlistItemListResponse.\",\"default\":\"youtube#playlistItemListResponse\"}," +
            "\"nextPageToken\":{\"type\":\"string\",\"description\":\"A token that can be used as the " +
            "value of the pageToken parameter to retrieve the next page in the result set.\"}," +
            "\"pageInfo\":{\"$ref\":\"PageInfo\",\"description\":\"The pageInfo object encapsulates pa" +
            "ging information for the result set.\"},\"prevPageToken\":{\"type\":\"string\",\"descrip" +
            "tion\":\"A token that can be used as the value of the pageToken parameter to retri" +
            "eve the previous page in the result set.\"}}},\"PlaylistItemSnippet\":{\"id\":\"Playli" +
            "stItemSnippet\",\"type\":\"object\",\"description\":\"Basic details about an item includ" +
            "ed in a playlist, including title, description, thumbnails, playlist the item is" +
            " part of and position of the item inside the playlist.\",\"properties\":{\"channelId" +
            "\":{\"type\":\"string\",\"description\":\"The ID that YouTube uses to uniquely identify " +
            "the user that added the item to the playlist.\"},\"description\":{\"type\":\"string\",\"" +
            "description\":\"The item\'s description.\"},\"playlistId\":{\"type\":\"string\",\"descripti" +
            "on\":\"The ID that YouTube uses to uniquely identify the playlist that the playlis" +
            "t item is in.\",\"annotations\":{\"required\":[\"youtube.playlistItems.insert\"]}},\"pos" +
            "ition\":{\"type\":\"integer\",\"description\":\"The order in which the item appears in t" +
            "he playlist. The value uses a zero-based index, so the first item has a position" +
            " of 0, the second item has a position of 1, and so forth.\",\"format\":\"uint32\"},\"p" +
            "ublishedAt\":{\"type\":\"string\",\"description\":\"The date and time that the item was " +
            "added to the playlist. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.s" +
            "Z) format.\",\"format\":\"date-time\"},\"resourceId\":{\"$ref\":\"ResourceId\",\"description" +
            "\":\"The id object contains information that can be used to uniquely identify the " +
            "resource that is included in the playlist as the playlist item.\"},\"thumbnails\":{" +
            "\"type\":\"object\",\"description\":\"A map of thumbnail images associated with the pla" +
            "ylist item. For each object in the map, the key is the name of the thumbnail ima" +
            "ge, and the value is an object that contains other information about the thumbna" +
            "il.\",\"additionalProperties\":{\"$ref\":\"Thumbnail\",\"description\":\"The thumbnail ima" +
            "ge\'s name. This value is used as the key in the snippet.thumbnails map.\"}},\"titl" +
            "e\":{\"type\":\"string\",\"description\":\"The item\'s title.\"}}},\"PlaylistListResponse\":" +
            "{\"id\":\"PlaylistListResponse\",\"type\":\"object\",\"description\":\"A paginated list of " +
            "playlists returned as the response to a youtube.playlists.list call.\",\"propertie" +
            "s\":{\"etag\":{\"type\":\"string\",\"description\":\"The ETag of the response.\"},\"items\":{" +
            "\"type\":\"array\",\"description\":\"A list of playlists that match the request criteri" +
            "a.\",\"items\":{\"$ref\":\"Playlist\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type" +
            " of the API response. For this operation, the value will be youtube#playlistList" +
            "Response.\",\"default\":\"youtube#playlistListResponse\"},\"nextPageToken\":{\"type\":\"st" +
            "ring\",\"description\":\"The token that can be used as the value of the pageToken pa" +
            "rameter to retrieve the next page in the result set.\"},\"pageInfo\":{\"$ref\":\"PageI" +
            "nfo\",\"description\":\"The pageInfo object encapsulates paging information for the " +
            "result set.\"},\"prevPageToken\":{\"type\":\"string\",\"description\":\"The token that can" +
            " be used as the value of the pageToken parameter to retrieve the previous page i" +
            "n the result set.\"}}},\"PlaylistSnippet\":{\"id\":\"PlaylistSnippet\",\"type\":\"object\"," +
            "\"description\":\"Basic details about a playlist, including title, description and " +
            "thumbnails.\",\"properties\":{\"channelId\":{\"type\":\"string\",\"description\":\"The ID th" +
            "at YouTube uses to uniquely identify the channel that published the playlist.\"}," +
            "\"description\":{\"type\":\"string\",\"description\":\"The playlist\'s description.\"},\"pub" +
            "lishedAt\":{\"type\":\"string\",\"description\":\"The date and time that the playlist wa" +
            "s created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"," +
            "\"format\":\"date-time\"},\"thumbnails\":{\"type\":\"object\",\"description\":\"A map of thum" +
            "bnail images associated with the playlist. For each object in the map, the key i" +
            "s the name of the thumbnail image, and the value is an object that contains othe" +
            "r information about the thumbnail.\",\"additionalProperties\":{\"$ref\":\"Thumbnail\",\"" +
            "description\":\"The thumbnail image\'s name. This value is used as the key in the s" +
            "nippet.thumbnails map.\"}},\"title\":{\"type\":\"string\",\"description\":\"The playlist\'s" +
            " title.\",\"annotations\":{\"required\":[\"youtube.playlists.insert\",\"youtube.playlist" +
            "s.update\"]}}}},\"PlaylistStatus\":{\"id\":\"PlaylistStatus\",\"type\":\"object\",\"descript" +
            "ion\":\"The status details of a playlist describes whether the playlist is private" +
            ".\",\"properties\":{\"privacyStatus\":{\"type\":\"string\",\"description\":\"The playlist\'s " +
            "privacy status.\"}}},\"ResourceId\":{\"id\":\"ResourceId\",\"type\":\"object\",\"description" +
            "\":\"A resource id is a generic reference that points to another YouTube resource." +
            "\",\"properties\":{\"channelId\":{\"type\":\"string\",\"description\":\"The ID that YouTube " +
            "uses to uniquely identify the referred resource, if that resource is a channel. " +
            "This property is only present if the resourceId.kind value is youtube#channel.\"}" +
            ",\"kind\":{\"type\":\"string\",\"description\":\"The kind, or type, of the referred resou" +
            "rce.\"},\"playlistId\":{\"type\":\"string\",\"description\":\"The ID that YouTube uses to " +
            "uniquely identify the referred resource, if that resource is a playlist. This pr" +
            "operty is only present if the resourceId.kind value is youtube#playlist.\"},\"vide" +
            "oId\":{\"type\":\"string\",\"description\":\"The ID that YouTube uses to uniquely identi" +
            "fy the referred resource, if that resource is a video. This property is only pre" +
            "sent if the resourceId.kind value is youtube#video.\"}}},\"SearchListResponse\":{\"i" +
            "d\":\"SearchListResponse\",\"type\":\"object\",\"description\":\"A paginated list of searc" +
            "h results returned as the response to a youtube.search.list call.\",\"properties\":" +
            "{\"etag\":{\"type\":\"string\",\"description\":\"The ETag for the response.\"},\"items\":{\"t" +
            "ype\":\"array\",\"description\":\"A list of results that match the search criteria.\",\"" +
            "items\":{\"$ref\":\"SearchResult\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type " +
            "of the API response. For this operation, the value will be youtube#searchListRes" +
            "ponse.\",\"default\":\"youtube#searchListResponse\"},\"nextPageToken\":{\"type\":\"string\"" +
            ",\"description\":\"The token that can be used as the value of the pageToken paramet" +
            "er to retrieve the next page in the result set.\"},\"pageInfo\":{\"$ref\":\"PageInfo\"," +
            "\"description\":\"The pageInfo object encapsulates paging information for the searc" +
            "h result set.\"},\"prevPageToken\":{\"type\":\"string\",\"description\":\"The token that c" +
            "an be used as the value of the pageToken parameter to retrieve the previous page" +
            " in the result set.\"}}},\"SearchResult\":{\"id\":\"SearchResult\",\"type\":\"object\",\"des" +
            "cription\":\"A search result contains information about a YouTube video, channel, " +
            "or playlist that matches the search parameters specified in an API request. Whil" +
            "e a search result points to a uniquely identifiable resource, like a video, it d" +
            "oes not have its own persistent data.\",\"properties\":{\"etag\":{\"type\":\"string\",\"de" +
            "scription\":\"The ETag of the search result.\"},\"id\":{\"$ref\":\"ResourceId\",\"descript" +
            "ion\":\"The id object contains information that can be used to uniquely identify t" +
            "he resource that matches the search request.\"},\"kind\":{\"type\":\"string\",\"descript" +
            "ion\":\"The type of the API response. For this resource, the value will be youtube" +
            "#searchResult.\",\"default\":\"youtube#searchResult\"},\"snippet\":{\"$ref\":\"SearchResul" +
            "tSnippet\",\"description\":\"The snippet object contains basic details about a searc" +
            "h result, such as its title or description. For example, if the search result is" +
            " a video, then the title will be the video\'s title and the description will be t" +
            "he video\'s description.\"}}},\"SearchResultSnippet\":{\"id\":\"SearchResultSnippet\",\"t" +
            "ype\":\"object\",\"description\":\"Basic details about a search result, including titl" +
            "e, description and thumbnails of the item referenced by the search result.\",\"pro" +
            "perties\":{\"channelId\":{\"type\":\"string\",\"description\":\"The value that YouTube use" +
            "s to uniquely identify the channel that published the resource that the search r" +
            "esult identifies.\"},\"description\":{\"type\":\"string\",\"description\":\"A description " +
            "of the search result.\"},\"publishedAt\":{\"type\":\"string\",\"description\":\"The creati" +
            "on date and time of the resource that the search result identifies. The value is" +
            " specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\",\"format\":\"date-time\"},\"" +
            "thumbnails\":{\"type\":\"object\",\"description\":\"A map of thumbnail images associated" +
            " with the search result. For each object in the map, the key is the name of the " +
            "thumbnail image, and the value is an object that contains other information abou" +
            "t the thumbnail.\",\"additionalProperties\":{\"$ref\":\"Thumbnail\",\"description\":\"The " +
            "thumbnail image\'s name. This value is used as the key in the snippet.thumbnails " +
            "map.\"}},\"title\":{\"type\":\"string\",\"description\":\"The title to display for the sea" +
            "rch result.\"}}},\"Subscription\":{\"id\":\"Subscription\",\"type\":\"object\",\"description" +
            "\":\"A subscription resource contains information about a YouTube user subscriptio" +
            "n. A subscription notifies a user when new videos are added to a channel or when" +
            " another user takes one of several actions on YouTube, such as uploading a video" +
            ", rating a video, or commenting on a video.\",\"properties\":{\"contentDetails\":{\"$r" +
            "ef\":\"SubscriptionContentDetails\",\"description\":\"The contentDetails object contai" +
            "ns basic statistics about the subscription.\"},\"etag\":{\"type\":\"string\",\"descripti" +
            "on\":\"The ETag of the subscription resource.\"},\"id\":{\"type\":\"string\",\"description" +
            "\":\"The ID that YouTube uses to uniquely identify the subscription.\"},\"kind\":{\"ty" +
            "pe\":\"string\",\"description\":\"The type of the API resource. For subscription resou" +
            "rces, the value will be youtube#subscription.\",\"default\":\"youtube#subscription\"}" +
            ",\"snippet\":{\"$ref\":\"SubscriptionSnippet\",\"description\":\"The snippet object conta" +
            "ins basic details about the subscription, including its title and the channel th" +
            "at the user subscribed to.\"}}},\"SubscriptionContentDetails\":{\"id\":\"SubscriptionC" +
            "ontentDetails\",\"type\":\"object\",\"description\":\"Details about the content to witch" +
            " a subscription refers.\",\"properties\":{\"newItemCount\":{\"type\":\"integer\",\"descrip" +
            "tion\":\"The number of new items in the subscription since its content was last re" +
            "ad.\",\"format\":\"uint32\"},\"totalItemCount\":{\"type\":\"integer\",\"description\":\"The ap" +
            "proximate number of items that the subscription points to.\",\"format\":\"uint32\"}}}" +
            ",\"SubscriptionListResponse\":{\"id\":\"SubscriptionListResponse\",\"type\":\"object\",\"de" +
            "scription\":\"A paginated list of subscriptions returned as the response to a yout" +
            "ube.subscriptions.list call.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description" +
            "\":\"The ETag of the response.\"},\"items\":{\"type\":\"array\",\"description\":\"A list of " +
            "subscriptions that match the request criteria.\",\"items\":{\"$ref\":\"Subscription\"}}" +
            ",\"kind\":{\"type\":\"string\",\"description\":\"The type of the API response. For this o" +
            "peration, the value will be youtube#subscriptionListResponse.\",\"default\":\"youtub" +
            "e#subscriptionListResponse\"},\"nextPageToken\":{\"type\":\"string\",\"description\":\"The" +
            " token that can be used as the value of the pageToken parameter to retrieve the " +
            "next page in the result set.\"},\"pageInfo\":{\"$ref\":\"PageInfo\",\"description\":\"The " +
            "pageInfo object encapsulates paging information for the result set.\"},\"prevPageT" +
            "oken\":{\"type\":\"string\",\"description\":\"The token that can be used as the value of" +
            " the pageToken parameter to retrieve the previous page in the result set.\"}}},\"S" +
            "ubscriptionSnippet\":{\"id\":\"SubscriptionSnippet\",\"type\":\"object\",\"description\":\"B" +
            "asic details about a subscription, including title, description and thumbnails o" +
            "f the subscribed item.\",\"properties\":{\"channelId\":{\"type\":\"string\",\"description\"" +
            ":\"The ID that YouTube uses to uniquely identify the subscriber\'s channel.\"},\"des" +
            "cription\":{\"type\":\"string\",\"description\":\"The subscription\'s details.\"},\"publish" +
            "edAt\":{\"type\":\"string\",\"description\":\"The date and time that the subscription wa" +
            "s created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\"," +
            "\"format\":\"date-time\"},\"resourceId\":{\"$ref\":\"ResourceId\",\"description\":\"The id ob" +
            "ject contains information about the channel that the user subscribed to.\"},\"thum" +
            "bnails\":{\"type\":\"object\",\"description\":\"A map of thumbnail images associated wit" +
            "h the subscription. For each object in the map, the key is the name of the thumb" +
            "nail image, and the value is an object that contains other information about the" +
            " thumbnail.\",\"additionalProperties\":{\"$ref\":\"Thumbnail\",\"description\":\"The thumb" +
            "nail image\'s name.\"}},\"title\":{\"type\":\"string\",\"description\":\"The subscription\'s" +
            " title.\"}}},\"Thumbnail\":{\"id\":\"Thumbnail\",\"type\":\"object\",\"description\":\"A thumb" +
            "nail is an image representing a YouTube resource.\",\"properties\":{\"url\":{\"type\":\"" +
            "string\",\"description\":\"The thumbnail image\'s URL.\"}}},\"Video\":{\"id\":\"Video\",\"typ" +
            "e\":\"object\",\"description\":\"A video resource represents a YouTube video.\",\"proper" +
            "ties\":{\"contentDetails\":{\"$ref\":\"VideoContentDetails\",\"description\":\"The content" +
            "Details object contains information about the video content, including the lengt" +
            "h of the video and its aspect ratio.\"},\"etag\":{\"type\":\"string\",\"description\":\"Th" +
            "e ETag of the video resource.\"},\"id\":{\"type\":\"string\",\"description\":\"The ID that" +
            " YouTube uses to uniquely identify the video.\"},\"kind\":{\"type\":\"string\",\"descrip" +
            "tion\":\"The type of the API resource. For video resources, the value will be yout" +
            "ube#video.\",\"default\":\"youtube#video\"},\"player\":{\"$ref\":\"VideoPlayer\",\"descripti" +
            "on\":\"The player object contains information that you would use to play the video" +
            " in an embedded player.\"},\"recordingDetails\":{\"$ref\":\"VideoRecordingDetails\",\"de" +
            "scription\":\"The recordingDetails object encapsulates information about the locat" +
            "ion, date and address where the video was recorded.\"},\"snippet\":{\"$ref\":\"VideoSn" +
            "ippet\",\"description\":\"The snippet object contains basic details about the video," +
            " such as its title, description, and category.\"},\"statistics\":{\"$ref\":\"VideoStat" +
            "istics\",\"description\":\"The statistics object contains statistics about the video" +
            ".\"},\"status\":{\"$ref\":\"VideoStatus\",\"description\":\"The status object contains inf" +
            "ormation about the video\'s uploading, processing, and privacy statuses.\"},\"topic" +
            "Details\":{\"$ref\":\"VideoTopicDetails\",\"description\":\"The topicDetails object enca" +
            "psulates information about Freebase topics associated with the video.\"}}},\"Video" +
            "Category\":{\"id\":\"VideoCategory\",\"type\":\"object\",\"description\":\"A videoCategory r" +
            "esource identifies a category that has been or could be associated with uploaded" +
            " videos.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The ETag of the v" +
            "ideoCategory resource.\"},\"id\":{\"type\":\"string\",\"description\":\"The ID that YouTub" +
            "e uses to uniquely identify the video category.\"},\"kind\":{\"type\":\"string\",\"descr" +
            "iption\":\"The type of the API resource. For video category resources, the value w" +
            "ill be youtube#videoCategory.\",\"default\":\"youtube#videoCategory\"},\"snippet\":{\"$r" +
            "ef\":\"VideoCategorySnippet\",\"description\":\"The snippet object contains basic deta" +
            "ils about the video category, including its title.\"}}},\"VideoCategoryListRespons" +
            "e\":{\"id\":\"VideoCategoryListResponse\",\"type\":\"object\",\"description\":\"A paginated " +
            "list of video categories returned as the response to a youtube.videoCategory.lis" +
            "t call.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The ETag of the re" +
            "sponse.\"},\"items\":{\"type\":\"array\",\"description\":\"A list of video categories that" +
            " can be associated with YouTube videos. In this map, the video category ID is th" +
            "e map key, and its value is the corresponding videoCategory resource.\",\"items\":{" +
            "\"$ref\":\"VideoCategory\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type of the " +
            "API response. For this operation, the value will be youtube#videoCategoryListRes" +
            "ponse.\",\"default\":\"youtube#videoCategoryListResponse\"}}},\"VideoCategorySnippet\":" +
            "{\"id\":\"VideoCategorySnippet\",\"type\":\"object\",\"description\":\"Basic details about " +
            "a video category, such as its localized title.\",\"properties\":{\"channelId\":{\"type" +
            "\":\"string\",\"description\":\"The YouTube channel that created the video category.\"," +
            "\"default\":\"UCBR8-60-B28hp2BmDPdntcQ\"},\"title\":{\"type\":\"string\",\"description\":\"Th" +
            "e video category\'s title.\"}}},\"VideoContentDetails\":{\"id\":\"VideoContentDetails\"," +
            "\"type\":\"object\",\"description\":\"Details about the media content of a YouTube vide" +
            "o.\",\"properties\":{\"duration\":{\"type\":\"string\",\"description\":\"The length of the v" +
            "ideo. The tag value is an ISO 8601 duration in the format PT#M#S, in which the l" +
            "etters PT indicate that the value specifies a period of time, and the letters M " +
            "and S refer to length in minutes and seconds, respectively. The # characters pre" +
            "ceding the M and S letters are both integers that specify the number of minutes " +
            "(or seconds) of the video. For example, a value of PT15M51S indicates that the v" +
            "ideo is 15 minutes and 51 seconds long.\"},\"regionRestriction\":{\"type\":\"object\",\"" +
            "description\":\"The regionRestriction object contains information about the countr" +
            "ies where a video is (or is not) viewable. The object will contain either the co" +
            "ntentDetails.regionRestriction.allowed property or the contentDetails.regionRest" +
            "riction.blocked property.\",\"properties\":{\"allowed\":{\"type\":\"array\",\"description\"" +
            ":\"A list of region codes that identify countries where the video is viewable. If" +
            " this property is present and a country is not listed in its value, then the vid" +
            "eo is blocked from appearing in that country. If this property is present and co" +
            "ntains an empty list, the video is blocked in all countries.\",\"items\":{\"type\":\"s" +
            "tring\"}},\"blocked\":{\"type\":\"array\",\"description\":\"A list of region codes that id" +
            "entify countries where the video is blocked. If this property is present and a c" +
            "ountry is not listed in its value, then the video is viewable in that country. I" +
            "f this property is present and contains an empty list, the video is viewable in " +
            "all countries.\",\"items\":{\"type\":\"string\"}}}}}},\"VideoListResponse\":{\"id\":\"VideoL" +
            "istResponse\",\"type\":\"object\",\"description\":\"A paginated list of videos returned " +
            "as the response to a youtube.videos.list call.\",\"properties\":{\"etag\":{\"type\":\"st" +
            "ring\",\"description\":\"The ETag of the response.\"},\"items\":{\"type\":\"array\",\"descri" +
            "ption\":\"A list of videos that match the request criteria.\",\"items\":{\"$ref\":\"Vide" +
            "o\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type of the API response. For th" +
            "is operation, the value will be youtube#videoListResponse.\",\"default\":\"youtube#v" +
            "ideoListResponse\"}}},\"VideoPlayer\":{\"id\":\"VideoPlayer\",\"type\":\"object\",\"descript" +
            "ion\":\"Player to be used for a video playback.\",\"properties\":{\"embedHtml\":{\"type\"" +
            ":\"string\",\"description\":\"An <iframe> tag that embeds a player that will play the" +
            " video.\"}}},\"VideoRecordingDetails\":{\"id\":\"VideoRecordingDetails\",\"type\":\"object" +
            "\",\"description\":\"Recording information associated with the video.\",\"properties\":" +
            "{\"location\":{\"$ref\":\"GeoPoint\",\"description\":\"The geolocation information associ" +
            "ated with the video.\"},\"locationDescription\":{\"type\":\"string\",\"description\":\"The" +
            " text description of the location where the video was recorded.\"},\"recordingDate" +
            "\":{\"type\":\"string\",\"description\":\"The date and time when the video was recorded." +
            " The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\",\"format\":\"" +
            "date-time\"}}},\"VideoSnippet\":{\"id\":\"VideoSnippet\",\"type\":\"object\",\"description\":" +
            "\"Basic details about a video, including title, description, uploader, thumbnails" +
            " and category.\",\"properties\":{\"categoryId\":{\"type\":\"string\",\"description\":\"The Y" +
            "ouTube video category associated with the video.\"},\"channelId\":{\"type\":\"string\"," +
            "\"description\":\"The ID that YouTube uses to uniquely identify the channel that th" +
            "e video was uploaded to.\"},\"description\":{\"type\":\"string\",\"description\":\"The vid" +
            "eo\'s description.\"},\"publishedAt\":{\"type\":\"string\",\"description\":\"The date and t" +
            "ime that the video was uploaded. The value is specified in ISO 8601 (YYYY-MM-DDT" +
            "hh:mm:ss.sZ) format.\",\"format\":\"date-time\"},\"tags\":{\"type\":\"array\",\"description\"" +
            ":\"A list of keyword tags associated with the video. Tags may contain spaces. Thi" +
            "s field is only visible to the video\'s uploader.\",\"items\":{\"type\":\"string\"}},\"th" +
            "umbnails\":{\"type\":\"object\",\"description\":\"A map of thumbnail images associated w" +
            "ith the video. For each object in the map, the key is the name of the thumbnail " +
            "image, and the value is an object that contains other information about the thum" +
            "bnail.\",\"additionalProperties\":{\"$ref\":\"Thumbnail\",\"description\":\"The thumbnail " +
            "image\'s name. This value is used as the key in the snippet.thumbnails map.\"}},\"t" +
            "itle\":{\"type\":\"string\",\"description\":\"The video\'s title.\"}}},\"VideoStatistics\":{" +
            "\"id\":\"VideoStatistics\",\"type\":\"object\",\"description\":\"Statistics about the video" +
            ", such as the number of times the video was viewed or liked.\",\"properties\":{\"com" +
            "mentCount\":{\"type\":\"string\",\"description\":\"The number of comments for the video." +
            "\",\"format\":\"uint64\"},\"dislikeCount\":{\"type\":\"string\",\"description\":\"The number o" +
            "f users who have indicated that they disliked the video by giving it a negative " +
            "rating.\",\"format\":\"uint64\"},\"favoriteCount\":{\"type\":\"string\",\"description\":\"The " +
            "number of users who currently have the video marked as a favorite video.\",\"forma" +
            "t\":\"uint64\"},\"likeCount\":{\"type\":\"string\",\"description\":\"The number of users who" +
            " have indicated that they liked the video by giving it a positive rating.\",\"form" +
            "at\":\"uint64\"},\"viewCount\":{\"type\":\"string\",\"description\":\"The number of times th" +
            "e video has been viewed.\",\"format\":\"uint64\"}}},\"VideoStatus\":{\"id\":\"VideoStatus\"" +
            ",\"type\":\"object\",\"description\":\"The status of a video details the video\'s upload" +
            " status and privacy status.\",\"properties\":{\"failureReason\":{\"type\":\"string\",\"des" +
            "cription\":\"This value explains why a video failed to upload. This property is on" +
            "ly present if the uploadStatus property indicates that the upload failed.\"},\"pri" +
            "vacyStatus\":{\"type\":\"string\",\"description\":\"The video\'s privacy status.\"},\"rejec" +
            "tionReason\":{\"type\":\"string\",\"description\":\"This value explains why YouTube reje" +
            "cted an uploaded video. This property is only present if the uploadStatus proper" +
            "ty indicates that the upload was rejected.\"},\"uploadStatus\":{\"type\":\"string\",\"de" +
            "scription\":\"The status of the uploaded video.\"}}},\"VideoTopicDetails\":{\"id\":\"Vid" +
            "eoTopicDetails\",\"type\":\"object\",\"description\":\"Freebase topic information relate" +
            "d to the video.\",\"properties\":{\"topicIds\":{\"type\":\"array\",\"description\":\"A list " +
            "of Freebase topic IDs associated with the video. You can retrieve information ab" +
            "out each topic using the Freebase Topic API.\",\"items\":{\"type\":\"string\"}}}}},\"res" +
            "ources\":{\"activities\":{\"methods\":{\"insert\":{\"id\":\"youtube.activities.insert\",\"pa" +
            "th\":\"activities\",\"httpMethod\":\"POST\",\"description\":\"Posts a bulletin for a speci" +
            "fic channel. (The user submitting the request must be authorized to act on the c" +
            "hannel\'s behalf.)\",\"parameters\":{\"part\":{\"type\":\"string\",\"description\":\"The part" +
            " parameter serves two purposes in this operation. It identifies the properties t" +
            "hat the write operation will set as well as the properties that the API response" +
            " will include.\\n\\nThe part names that you can include in the parameter value are" +
            " snippet and contentDetails.\",\"required\":true,\"location\":\"query\"}},\"parameterOrd" +
            "er\":[\"part\"],\"request\":{\"$ref\":\"Activity\"},\"response\":{\"$ref\":\"Activity\"},\"scope" +
            "s\":[\"https://www.googleapis.com/auth/youtube\"]},\"list\":{\"id\":\"youtube.activities" +
            ".list\",\"path\":\"activities\",\"httpMethod\":\"GET\",\"description\":\"Returns a list of c" +
            "hannel activity events that match the request criteria. For example, you can ret" +
            "rieve events associated with a particular channel, events associated with the us" +
            "er\'s subscriptions and Google+ friends, or the YouTube home page feed, which is " +
            "customized for each user.\",\"parameters\":{\"channelId\":{\"type\":\"string\",\"descripti" +
            "on\":\"The channelId parameter specifies a unique YouTube channel ID. The API will" +
            " then return a list of that channel\'s activities.\",\"location\":\"query\"},\"home\":{\"" +
            "type\":\"string\",\"description\":\"Set this parameter\'s value to true to retrieve the" +
            " activity feed that displays on the YouTube home page for the currently authenti" +
            "cated user.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"description\":\"U" +
            "SE_DESCRIPTION --- channels:list:maxResults\",\"default\":\"5\",\"format\":\"uint32\",\"mi" +
            "nimum\":\"0\",\"maximum\":\"50\",\"location\":\"query\"},\"mine\":{\"type\":\"boolean\",\"descript" +
            "ion\":\"Set this parameter\'s value to true to retrieve a feed of the authenticated" +
            " user\'s activities.\",\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"descripti" +
            "on\":\"USE_DESCRIPTION --- channels:list:pageToken\",\"location\":\"query\"},\"part\":{\"t" +
            "ype\":\"string\",\"description\":\"The part parameter specifies a comma-separated list" +
            " of one or more activity resource properties that the API response will include." +
            " The part names that you can include in the parameter value are id, snippet, and" +
            " contentDetails.\\n\\nIf the parameter identifies a property that contains child p" +
            "roperties, the child properties will be included in the response. For example, i" +
            "n a activity resource, the snippet property contains other properties that ident" +
            "ify the type of activity, a display title for the activity, and so forth. If you" +
            " set part=snippet, the API response will also contain all of those nested proper" +
            "ties.\",\"required\":true,\"location\":\"query\"},\"publishedAfter\":{\"type\":\"string\",\"de" +
            "scription\":\"The publishedAfter parameter specifies the earliest date and time th" +
            "at an activity could have occurred for that activity to be included in the API r" +
            "esponse. If the parameter value specifies a day, but not a time, then any activi" +
            "ties that occurred that day will be included in the result set. The value is spe" +
            "cified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.\",\"format\":\"date-time\",\"locat" +
            "ion\":\"query\"},\"publishedBefore\":{\"type\":\"string\",\"description\":\"The publishedBef" +
            "ore parameter specifies the date and time before which an activity must have occ" +
            "urred for that activity to be included in the API response. If the parameter val" +
            "ue specifies a day, but not a time, then any activities that occurred that day w" +
            "ill be excluded from the result set. The value is specified in ISO 8601 (YYYY-MM" +
            "-DDThh:mm:ss.sZ) format.\",\"format\":\"date-time\",\"location\":\"query\"}},\"parameterOr" +
            "der\":[\"part\"],\"response\":{\"$ref\":\"ActivityListResponse\"},\"scopes\":[\"https://www." +
            "googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtube.readonly\"]" +
            "}}},\"channels\":{\"methods\":{\"list\":{\"id\":\"youtube.channels.list\",\"path\":\"channels" +
            "\",\"httpMethod\":\"GET\",\"description\":\"Returns a collection of zero or more channel" +
            " resources that match the request criteria.\",\"parameters\":{\"categoryId\":{\"type\":" +
            "\"string\",\"description\":\"The categoryId parameter specifies a YouTube guide categ" +
            "ory, thereby requesting YouTube channels associated with that category.\",\"locati" +
            "on\":\"query\"},\"id\":{\"type\":\"string\",\"description\":\"The id parameter specifies a c" +
            "omma-separated list of the YouTube channel ID(s) for the resource(s) that are be" +
            "ing retrieved. In a channel resource, the id property specifies the channel\'s Yo" +
            "uTube channel ID.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"descripti" +
            "on\":\"The maxResults parameter specifies the maximum number of items that should " +
            "be returned in the result set.\",\"default\":\"5\",\"format\":\"uint32\",\"minimum\":\"0\",\"m" +
            "aximum\":\"50\",\"location\":\"query\"},\"mine\":{\"type\":\"boolean\",\"description\":\"Set thi" +
            "s parameter\'s value to true to instruct the API to only return channels owned by" +
            " the authenticated user.\",\"location\":\"query\"},\"mySubscribers\":{\"type\":\"string\",\"" +
            "description\":\"Set this parameter\'s value to true to retrieve a list of channels " +
            "that subscribed to the authenticated user\'s channel.\",\"location\":\"query\"},\"pageT" +
            "oken\":{\"type\":\"string\",\"description\":\"The pageToken parameter identifies a speci" +
            "fic page in the result set that should be returned. In an API response, the next" +
            "PageToken and prevPageToken properties identify other pages that could be retrie" +
            "ved.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"The part parame" +
            "ter specifies a comma-separated list of one or more channel resource properties " +
            "that the API response will include. The part names that you can include in the p" +
            "arameter value are id, snippet, contentDetails, statistics, and topicDetails.\\n\\" +
            "nIf the parameter identifies a property that contains child properties, the chil" +
            "d properties will be included in the response. For example, in a channel resourc" +
            "e, the contentDetails property contains other properties, such as the uploads pr" +
            "operties. As such, if you set part=contentDetails, the API response will also co" +
            "ntain all of those nested properties.\",\"required\":true,\"location\":\"query\"}},\"par" +
            "ameterOrder\":[\"part\"],\"response\":{\"$ref\":\"ChannelListResponse\"},\"scopes\":[\"https" +
            "://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtube.rea" +
            "donly\",\"https://www.googleapis.com/auth/youtubepartner\"]}}},\"guideCategories\":{\"" +
            "methods\":{\"list\":{\"id\":\"youtube.guideCategories.list\",\"path\":\"guideCategories\",\"" +
            "httpMethod\":\"GET\",\"description\":\"Returns a list of categories that can be associ" +
            "ated with YouTube channels.\",\"parameters\":{\"hl\":{\"type\":\"string\",\"description\":\"" +
            "The hl parameter specifies the language that will be used for text values in the" +
            " API response.\",\"default\":\"en-US\",\"location\":\"query\"},\"id\":{\"type\":\"string\",\"des" +
            "cription\":\"The id parameter specifies a comma-separated list of the YouTube chan" +
            "nel category ID(s) for the resource(s) that are being retrieved. In a guideCateg" +
            "ory resource, the id property specifies the YouTube channel category ID.\",\"locat" +
            "ion\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"The part parameter specifie" +
            "s a comma-separated list of one or more guideCategory resource properties that t" +
            "he API response will include. The part names that you can include in the paramet" +
            "er value are id and snippet.\\n\\nIf the parameter identifies a property that cont" +
            "ains child properties, the child properties will be included in the response. Fo" +
            "r example, in a guideCategory resource, the snippet property contains other prop" +
            "erties, such as the category\'s title. If you set part=snippet, the API response " +
            "will also contain all of those nested properties.\",\"required\":true,\"location\":\"q" +
            "uery\"},\"regionCode\":{\"type\":\"string\",\"description\":\"The regionCode parameter ins" +
            "tructs the API to return the list of guide categories available in the specified" +
            " country. The parameter value is an ISO 3166-1 alpha-2 country code.\",\"location\"" +
            ":\"query\"}},\"parameterOrder\":[\"part\"],\"response\":{\"$ref\":\"GuideCategoryListRespon" +
            "se\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis" +
            ".com/auth/youtube.readonly\",\"https://www.googleapis.com/auth/youtubepartner\"]}}}" +
            ",\"playlistItems\":{\"methods\":{\"delete\":{\"id\":\"youtube.playlistItems.delete\",\"path" +
            "\":\"playlistItems\",\"httpMethod\":\"DELETE\",\"description\":\"Deletes a playlist item.\"" +
            ",\"parameters\":{\"id\":{\"type\":\"string\",\"description\":\"The id parameter specifies t" +
            "he YouTube playlist item ID for the playlist item that is being deleted. In a pl" +
            "aylistItem resource, the id property specifies the playlist item\'s ID.\",\"require" +
            "d\":true,\"location\":\"query\"}},\"parameterOrder\":[\"id\"],\"scopes\":[\"https://www.goog" +
            "leapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"ins" +
            "ert\":{\"id\":\"youtube.playlistItems.insert\",\"path\":\"playlistItems\",\"httpMethod\":\"P" +
            "OST\",\"description\":\"Adds a resource to a playlist.\",\"parameters\":{\"part\":{\"type\"" +
            ":\"string\",\"description\":\"The part parameter serves two purposes in this operatio" +
            "n. It identifies the properties that the write operation will set as well as the" +
            " properties that the API response will include.\\n\\nThe part names that you can i" +
            "nclude in the parameter value are snippet and contentDetails.\",\"required\":true,\"" +
            "location\":\"query\"}},\"parameterOrder\":[\"part\"],\"request\":{\"$ref\":\"PlaylistItem\"}," +
            "\"response\":{\"$ref\":\"PlaylistItem\"},\"scopes\":[\"https://www.googleapis.com/auth/yo" +
            "utube\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"list\":{\"id\":\"youtube." +
            "playlistItems.list\",\"path\":\"playlistItems\",\"httpMethod\":\"GET\",\"description\":\"Ret" +
            "urns a collection of playlist items that match the API request parameters. You c" +
            "an retrieve all of the playlist items in a specified playlist or retrieve one or" +
            " more playlist items by their unique IDs.\",\"parameters\":{\"id\":{\"type\":\"string\",\"" +
            "description\":\"The id parameter specifies a comma-separated list of one or more u" +
            "nique playlist item IDs.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"de" +
            "scription\":\"USE_DESCRIPTION --- channels:list:maxResults\",\"default\":\"5\",\"format\"" +
            ":\"uint32\",\"minimum\":\"0\",\"maximum\":\"50\",\"location\":\"query\"},\"pageToken\":{\"type\":\"" +
            "string\",\"description\":\"USE_DESCRIPTION --- channels:list:pageToken\",\"location\":\"" +
            "query\"},\"part\":{\"type\":\"string\",\"description\":\"The part parameter specifies a co" +
            "mma-separated list of one or more playlistItem resource properties that the API " +
            "response will include. The part names that you can include in the parameter valu" +
            "e are id, snippet, and contentDetails.\\n\\nIf the parameter identifies a property" +
            " that contains child properties, the child properties will be included in the re" +
            "sponse. For example, in a playlistItem resource, the snippet property contains n" +
            "umerous fields, including the title, description, position, and resourceId prope" +
            "rties. As such, if you set part=snippet, the API response will contain all of th" +
            "ose properties.\",\"required\":true,\"location\":\"query\"},\"playlistId\":{\"type\":\"strin" +
            "g\",\"description\":\"The playlistId parameter specifies the unique ID of the playli" +
            "st for which you want to retrieve playlist items. Note that even though this is " +
            "an optional parameter, every request to retrieve playlist items must specify a v" +
            "alue for either the id parameter or the playlistId parameter.\",\"location\":\"query" +
            "\"}},\"parameterOrder\":[\"part\"],\"response\":{\"$ref\":\"PlaylistItemListResponse\"},\"sc" +
            "opes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/aut" +
            "h/youtube.readonly\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"update\":" +
            "{\"id\":\"youtube.playlistItems.update\",\"path\":\"playlistItems\",\"httpMethod\":\"PUT\",\"" +
            "description\":\"Modifies a playlist item. For example, you could update the item\'s" +
            " position in the playlist.\",\"parameters\":{\"part\":{\"type\":\"string\",\"description\":" +
            "\"The part parameter serves two purposes in this operation. It identifies the pro" +
            "perties that the write operation will set as well as the properties that the API" +
            " response will include.\\n\\nThe part names that you can include in the parameter " +
            "value are snippet and contentDetails.\\n\\nNote that this method will override the" +
            " existing values for all of the mutable properties that are contained in any par" +
            "ts that the parameter value specifies. For example, a playlist item can specify " +
            "a start time and end time, which identify the times portion of the video that sh" +
            "ould play when users watch the video in the playlist. If your request is updatin" +
            "g a playlist item that sets these values, and the request\'s part parameter value" +
            " includes the contentDetails part, the playlist item\'s start and end times will " +
            "be updated to whatever value the request body specifies. If the request body doe" +
            "s not specify values, the existing start and end times will be removed and repla" +
            "ced with the default settings.\",\"required\":true,\"location\":\"query\"}},\"parameterO" +
            "rder\":[\"part\"],\"request\":{\"$ref\":\"PlaylistItem\"},\"response\":{\"$ref\":\"PlaylistIte" +
            "m\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis." +
            "com/auth/youtubepartner\"]}}},\"playlists\":{\"methods\":{\"delete\":{\"id\":\"youtube.pla" +
            "ylists.delete\",\"path\":\"playlists\",\"httpMethod\":\"DELETE\",\"description\":\"Deletes a" +
            " playlist.\",\"parameters\":{\"id\":{\"type\":\"string\",\"description\":\"The id parameter " +
            "specifies the YouTube playlist ID for the playlist that is being deleted. In a p" +
            "laylist resource, the id property specifies the playlist\'s ID.\",\"required\":true," +
            "\"location\":\"query\"}},\"parameterOrder\":[\"id\"],\"scopes\":[\"https://www.googleapis.c" +
            "om/auth/youtube\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"insert\":{\"i" +
            "d\":\"youtube.playlists.insert\",\"path\":\"playlists\",\"httpMethod\":\"POST\",\"descriptio" +
            "n\":\"Creates a playlist.\",\"parameters\":{\"part\":{\"type\":\"string\",\"description\":\"Th" +
            "e part parameter serves two purposes in this operation. It identifies the proper" +
            "ties that the write operation will set as well as the properties that the API re" +
            "sponse will include.\\n\\nThe part names that you can include in the parameter val" +
            "ue are snippet and status.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder" +
            "\":[\"part\"],\"request\":{\"$ref\":\"Playlist\"},\"response\":{\"$ref\":\"Playlist\"},\"scopes\"" +
            ":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/you" +
            "tubepartner\"]},\"list\":{\"id\":\"youtube.playlists.list\",\"path\":\"playlists\",\"httpMet" +
            "hod\":\"GET\",\"description\":\"Returns a collection of playlists that match the API r" +
            "equest parameters. For example, you can retrieve all playlists that the authenti" +
            "cated user owns, or you can retrieve one or more playlists by their unique IDs.\"" +
            ",\"parameters\":{\"channelId\":{\"type\":\"string\",\"description\":\"This value indicates " +
            "that the API should only return the specified channel\'s playlists.\",\"location\":\"" +
            "query\"},\"id\":{\"type\":\"string\",\"description\":\"The id parameter specifies a comma-" +
            "separated list of the YouTube playlist ID(s) for the resource(s) that are being " +
            "retrieved. In a playlist resource, the id property specifies the playlist\'s YouT" +
            "ube playlist ID.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"descriptio" +
            "n\":\"USE_DESCRIPTION --- channels:list:maxResults\",\"default\":\"5\",\"format\":\"uint32" +
            "\",\"minimum\":\"0\",\"maximum\":\"50\",\"location\":\"query\"},\"mine\":{\"type\":\"boolean\",\"des" +
            "cription\":\"Set this parameter\'s value to true to instruct the API to only return" +
            " playlists owned by the authenticated user.\",\"location\":\"query\"},\"pageToken\":{\"t" +
            "ype\":\"string\",\"description\":\"USE_DESCRIPTION --- channels:list:pageToken\",\"locat" +
            "ion\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"The part parameter specifie" +
            "s a comma-separated list of one or more playlist resource properties that the AP" +
            "I response will include. The part names that you can include in the parameter va" +
            "lue are id, snippet, and status.\\n\\nIf the parameter identifies a property that " +
            "contains child properties, the child properties will be included in the response" +
            ". For example, in a playlist resource, the snippet property contains properties " +
            "like author, title, description, tags, and timeCreated. As such, if you set part" +
            "=snippet, the API response will contain all of those properties.\",\"required\":tru" +
            "e,\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"response\":{\"$ref\":\"PlaylistLis" +
            "tResponse\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.goo" +
            "gleapis.com/auth/youtube.readonly\",\"https://www.googleapis.com/auth/youtubepartn" +
            "er\"]},\"update\":{\"id\":\"youtube.playlists.update\",\"path\":\"playlists\",\"httpMethod\":" +
            "\"PUT\",\"description\":\"Modifies a playlist. For example, you could change a playli" +
            "st\'s title, description, or privacy status.\",\"parameters\":{\"part\":{\"type\":\"strin" +
            "g\",\"description\":\"The part parameter serves two purposes in this operation. It i" +
            "dentifies the properties that the write operation will set as well as the proper" +
            "ties that the API response will include.\\n\\nThe part names that you can include " +
            "in the parameter value are snippet and status.\\n\\nNote that this method will ove" +
            "rride the existing values for all of the mutable properties that are contained i" +
            "n any parts that the parameter value specifies. For example, a playlist\'s privac" +
            "y setting is contained in the status part. As such, if your request is updating " +
            "a private playlist, and the request\'s part parameter value includes the status p" +
            "art, the playlist\'s privacy setting will be updated to whatever value the reques" +
            "t body specifies. If the request body does not specify a value, the existing pri" +
            "vacy setting will be removed and the playlist will revert to the default privacy" +
            " setting.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"reque" +
            "st\":{\"$ref\":\"Playlist\"},\"response\":{\"$ref\":\"Playlist\"},\"scopes\":[\"https://www.go" +
            "ogleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtubepartner\"]}}}," +
            "\"search\":{\"methods\":{\"list\":{\"id\":\"youtube.search.list\",\"path\":\"search\",\"httpMet" +
            "hod\":\"GET\",\"description\":\"Returns a collection of search results that match the " +
            "query parameters specified in the API request. By default, a search result set i" +
            "dentifies matching video, channel, and playlist resources, but you can also conf" +
            "igure queries to only retrieve a specific type of resource.\",\"parameters\":{\"maxR" +
            "esults\":{\"type\":\"integer\",\"description\":\"USE_DESCRIPTION --- channels:list:maxRe" +
            "sults\",\"default\":\"5\",\"format\":\"uint32\",\"minimum\":\"0\",\"maximum\":\"50\",\"location\":\"" +
            "query\"},\"order\":{\"type\":\"string\",\"description\":\"The order parameter specifies th" +
            "e method that will be used to order resources in the API response.\",\"default\":\"S" +
            "EARCH_SORT_RELEVANCE\",\"enum\":[\"date\",\"rating\",\"relevance\",\"viewCount\"],\"enumDesc" +
            "riptions\":[\"Resources are sorted in reverse chronological order based on the dat" +
            "e they were created.\",\"Resources are sorted from highest to lowest rating.\",\"Res" +
            "ources are sorted based on their relevance to the search query. This is the defa" +
            "ult value for this parameter.\",\"Resources are sorted from highest to lowest numb" +
            "er of views.\"],\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"description\":\"U" +
            "SE_DESCRIPTION --- channels:list:pageToken\",\"location\":\"query\"},\"part\":{\"type\":\"" +
            "string\",\"description\":\"The part parameter specifies a comma-separated list of on" +
            "e or more search resource properties that the API response will include. The par" +
            "t names that you can include in the parameter value are id and snippet.\\n\\nIf th" +
            "e parameter identifies a property that contains child properties, the child prop" +
            "erties will be included in the response. For example, in a search result, the sn" +
            "ippet property contains other properties that identify the result\'s title, descr" +
            "iption, and so forth. If you set part=snippet, the API response will also contai" +
            "n all of those nested properties.\",\"required\":true,\"location\":\"query\"},\"publishe" +
            "d\":{\"type\":\"string\",\"description\":\"The published parameter indicates that the AP" +
            "I response should only contain resources created within the specified time perio" +
            "d.\",\"enum\":[\"any\",\"thisMonth\",\"thisWeek\",\"today\"],\"enumDescriptions\":[\"Do not fi" +
            "lter results based on their creation date. This is the default value.\",\"Return v" +
            "ideos that were uploaded within the past month.\",\"Return videos that were upload" +
            "ed within the past week.\",\"Return videos that were uploaded today.\"],\"location\":" +
            "\"query\"},\"q\":{\"type\":\"string\",\"description\":\"The q parameter specifies the query" +
            " term to search for.\",\"location\":\"query\"},\"relatedToVideoId\":{\"type\":\"string\",\"d" +
            "escription\":\"The relatedToVideoId parameter retrieves a list of videos that are " +
            "related to the video that the parameter value identifies. The parameter value mu" +
            "st be set to a YouTube video ID and, if you are using this parameter, the type p" +
            "arameter must be set to video.\",\"location\":\"query\"},\"topicId\":{\"type\":\"string\",\"" +
            "description\":\"The topicId parameter indicates that the API response should only " +
            "contain resources associated with the specified topic. The value identifies a Fr" +
            "eebase topic ID.\",\"location\":\"query\"},\"type\":{\"type\":\"string\",\"description\":\"The" +
            " type parameter restricts a search query to only retrieve a particular type of r" +
            "esource.\",\"default\":\"video,channel,playlist\",\"location\":\"query\"},\"videoCaption\":" +
            "{\"type\":\"string\",\"description\":\"The videoCaption parameter indicates whether the" +
            " API should filter video search results based on whether they have captions.\",\"e" +
            "num\":[\"any\",\"closedCaption\",\"none\"],\"enumDescriptions\":[\"Do not filter results b" +
            "ased on caption availability.\",\"Only include videos that have captions.\",\"Only i" +
            "nclude videos that do not have captions.\"],\"location\":\"query\"},\"videoDefinition\"" +
            ":{\"type\":\"string\",\"description\":\"The videoDefinition parameter lets you restrict" +
            " a search to only include either high definition (HD) or standard definition (SD" +
            ") videos. HD videos are available for playback in at least 720p, though higher r" +
            "esolutions, like 1080p, might also be available.\",\"enum\":[\"any\",\"high\",\"standard" +
            "\"],\"enumDescriptions\":[\"Return all videos, regardless of their resolution.\",\"Onl" +
            "y retrieve HD videos.\",\"Only retrieve videos in standard definition.\"],\"location" +
            "\":\"query\"},\"videoDimension\":{\"type\":\"string\",\"description\":\"The videoDimension p" +
            "arameter lets you restrict a search to only retrieve 2D or 3D videos.\",\"enum\":[\"" +
            "2d\",\"3d\",\"any\"],\"enumDescriptions\":[\"Restrict search results to exclude 3D video" +
            "s.\",\"Restrict search results to only include 3D videos.\",\"Include both 3D and no" +
            "n-3D videos in returned results. This is the default value.\"],\"location\":\"query\"" +
            "},\"videoDuration\":{\"type\":\"string\",\"description\":\"The videoDuration parameter fi" +
            "lters video search results based on their duration.\",\"enum\":[\"any\",\"long\",\"mediu" +
            "m\",\"short\"],\"enumDescriptions\":[\"Do not filter video search results based on the" +
            "ir duration. This is the default value.\",\"Only include videos longer than 20 min" +
            "utes.\",\"Only include videos that are between four and 20 minutes long (inclusive" +
            ").\",\"Only include videos that are less than four minutes long.\"],\"location\":\"que" +
            "ry\"},\"videoLicense\":{\"type\":\"string\",\"description\":\"The videoLicense parameter f" +
            "ilters search results to only include videos with a particular license. YouTube " +
            "lets video uploaders choose to attach either the Creative Commons license or the" +
            " standard YouTube license to each of their videos.\",\"enum\":[\"any\",\"creativeCommo" +
            "n\",\"youtube\"],\"enumDescriptions\":[\"Return all videos, regardless of which licens" +
            "e they have, that match the query parameters.\",\"Only return videos that have a C" +
            "reative Commons license. Users can reuse videos with this license in other video" +
            "s that they create. Learn more.\",\"Only return videos that have the standard YouT" +
            "ube license.\"],\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"response\":{\"$ref\"" +
            ":\"SearchListResponse\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"http" +
            "s://www.googleapis.com/auth/youtube.readonly\",\"https://www.googleapis.com/auth/y" +
            "outubepartner\"]}}},\"subscriptions\":{\"methods\":{\"delete\":{\"id\":\"youtube.subscript" +
            "ions.delete\",\"path\":\"subscriptions\",\"httpMethod\":\"DELETE\",\"description\":\"Deletes" +
            " a subscription.\",\"parameters\":{\"id\":{\"type\":\"string\",\"description\":\"The id para" +
            "meter specifies the YouTube subscription ID for the resource that is being delet" +
            "ed. In a subscription resource, the id property specifies the YouTube subscripti" +
            "on ID.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder\":[\"id\"],\"scopes\":[\"" +
            "https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtub" +
            "epartner\"]},\"insert\":{\"id\":\"youtube.subscriptions.insert\",\"path\":\"subscriptions\"" +
            ",\"httpMethod\":\"POST\",\"description\":\"Adds a subscription for the authenticated us" +
            "er\'s channel.\",\"parameters\":{\"part\":{\"type\":\"string\",\"description\":\"The part par" +
            "ameter serves two purposes in this operation. It identifies the properties that " +
            "the write operation will set as well as the properties that the API response wil" +
            "l include.\\n\\nThe part names that you can include in the parameter value are sni" +
            "ppet and contentDetails.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder\":" +
            "[\"part\"],\"request\":{\"$ref\":\"Subscription\"},\"response\":{\"$ref\":\"Subscription\"},\"s" +
            "copes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/au" +
            "th/youtubepartner\"]},\"list\":{\"id\":\"youtube.subscriptions.list\",\"path\":\"subscript" +
            "ions\",\"httpMethod\":\"GET\",\"description\":\"Returns subscription resources that matc" +
            "h the API request criteria.\",\"parameters\":{\"channelId\":{\"type\":\"string\",\"descrip" +
            "tion\":\"The channelId parameter specifies a YouTube channel ID. The API will only" +
            " return that channel\'s subscriptions.\",\"location\":\"query\"},\"forChannelId\":{\"type" +
            "\":\"string\",\"description\":\"The forChannelId parameter specifies a comma-separated" +
            " list of channel IDs. The API response will then only contain subscriptions matc" +
            "hing those channels.\",\"location\":\"query\"},\"id\":{\"type\":\"string\",\"description\":\"T" +
            "he id parameter specifies a comma-separated list of the YouTube subscription ID(" +
            "s) for the resource(s) that are being retrieved. In a subscription resource, the" +
            " id property specifies the YouTube subscription ID.\",\"location\":\"query\"},\"maxRes" +
            "ults\":{\"type\":\"integer\",\"description\":\"USE_DESCRIPTION --- channels:list:maxResu" +
            "lts\",\"default\":\"5\",\"format\":\"uint32\",\"minimum\":\"0\",\"maximum\":\"50\",\"location\":\"qu" +
            "ery\"},\"mine\":{\"type\":\"boolean\",\"description\":\"Set this parameter\'s value to true" +
            " to retrieve a feed of the authenticated user\'s subscriptions.\",\"location\":\"quer" +
            "y\"},\"order\":{\"type\":\"string\",\"description\":\"The order parameter specifies the me" +
            "thod that will be used to sort resources in the API response.\",\"default\":\"SUBSCR" +
            "IPTION_ORDER_RELEVANCE\",\"enum\":[\"alphabetical\",\"relevance\",\"unread\"],\"enumDescri" +
            "ptions\":[\"Sort alphabetically.\",\"Sort by relevance.\",\"Sort by order of activity." +
            "\"],\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"description\":\"USE_DESCRIPTI" +
            "ON --- channels:list:pageToken\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"des" +
            "cription\":\"The part parameter specifies a comma-separated list of one or more su" +
            "bscription resource properties that the API response will include. The part name" +
            "s that you can include in the parameter value are id, snippet, and contentDetail" +
            "s.\\n\\nIf the parameter identifies a property that contains child properties, the" +
            " child properties will be included in the response. For example, in a subscripti" +
            "on resource, the snippet property contains other properties, such as a display t" +
            "itle for the subscription. If you set part=snippet, the API response will also c" +
            "ontain all of those nested properties.\",\"required\":true,\"location\":\"query\"}},\"pa" +
            "rameterOrder\":[\"part\"],\"response\":{\"$ref\":\"SubscriptionListResponse\"},\"scopes\":[" +
            "\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtu" +
            "bepartner\"]}}},\"videoCategories\":{\"methods\":{\"list\":{\"id\":\"youtube.videoCategori" +
            "es.list\",\"path\":\"videoCategories\",\"httpMethod\":\"GET\",\"description\":\"Returns a li" +
            "st of categories that can be associated with YouTube videos.\",\"parameters\":{\"hl\"" +
            ":{\"type\":\"string\",\"description\":\"The hl parameter specifies the language that sh" +
            "ould be used for text values in the API response.\",\"default\":\"en_US\",\"location\":" +
            "\"query\"},\"id\":{\"type\":\"string\",\"description\":\"The id parameter specifies a comma" +
            "-separated list of video category IDs for the resources that you are retrieving." +
            "\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"The part parameter " +
            "specifies the videoCategory resource parts that the API response will include. S" +
            "upported values are id and snippet.\",\"required\":true,\"location\":\"query\"},\"region" +
            "Code\":{\"type\":\"string\",\"description\":\"The regionCode parameter instructs the API" +
            " to return the list of video categories available in the specified country. The " +
            "parameter value is an ISO 3166-1 alpha-2 country code.\",\"location\":\"query\"}},\"pa" +
            "rameterOrder\":[\"part\"],\"response\":{\"$ref\":\"VideoCategoryListResponse\"},\"scopes\":" +
            "[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/yout" +
            "ube.readonly\",\"https://www.googleapis.com/auth/youtubepartner\"]}}},\"videos\":{\"me" +
            "thods\":{\"delete\":{\"id\":\"youtube.videos.delete\",\"path\":\"videos\",\"httpMethod\":\"DEL" +
            "ETE\",\"description\":\"Deletes a YouTube video.\",\"parameters\":{\"id\":{\"type\":\"string" +
            "\",\"description\":\"The id parameter specifies the YouTube video ID for the resourc" +
            "e that is being deleted. In a video resource, the id property specifies the vide" +
            "o\'s ID.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder\":[\"id\"],\"scopes\":[" +
            "\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtu" +
            "bepartner\"]},\"insert\":{\"id\":\"youtube.videos.insert\",\"path\":\"videos\",\"httpMethod\"" +
            ":\"POST\",\"description\":\"Uploads a video to YouTube and optionally sets the video\'" +
            "s metadata.\",\"parameters\":{\"part\":{\"type\":\"string\",\"description\":\"The part param" +
            "eter serves two purposes in this operation. It identifies the properties that th" +
            "e write operation will set as well as the properties that the API response will " +
            "include.\\n\\nThe part names that you can include in the parameter value are snipp" +
            "et, contentDetails, player, statistics, status, and topicDetails. However, not a" +
            "ll of those parts contain properties that can be set when setting or updating a " +
            "video\'s metadata. For example, the statistics object encapsulates statistics tha" +
            "t YouTube calculates for a video and does not contain values that you can set or" +
            " modify. If the parameter value specifies a part that does not contain mutable v" +
            "alues, that part will still be included in the API response.\",\"required\":true,\"l" +
            "ocation\":\"query\"}},\"parameterOrder\":[\"part\"],\"request\":{\"$ref\":\"Video\"},\"respons" +
            "e\":{\"$ref\":\"Video\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https:/" +
            "/www.googleapis.com/auth/youtube.upload\"],\"supportsMediaUpload\":true,\"mediaUploa" +
            "d\":{\"accept\":[\"application/octet-stream\",\"video/*\"],\"maxSize\":\"64GB\",\"protocols\"" +
            ":{\"simple\":{\"multipart\":true,\"path\":\"/upload/youtube/v3/videos\"},\"resumable\":{\"m" +
            "ultipart\":true,\"path\":\"/resumable/upload/youtube/v3/videos\"}}}},\"list\":{\"id\":\"yo" +
            "utube.videos.list\",\"path\":\"videos\",\"httpMethod\":\"GET\",\"description\":\"Returns a l" +
            "ist of videos that match the API request parameters.\",\"parameters\":{\"id\":{\"type\"" +
            ":\"string\",\"description\":\"The id parameter specifies a comma-separated list of th" +
            "e YouTube video ID(s) for the resource(s) that are being retrieved. In a video r" +
            "esource, the id property specifies the video\'s ID.\",\"required\":true,\"location\":\"" +
            "query\"},\"part\":{\"type\":\"string\",\"description\":\"The part parameter specifies a co" +
            "mma-separated list of one or more video resource properties that the API respons" +
            "e will include. The part names that you can include in the parameter value are i" +
            "d, snippet, contentDetails, player, statistics, status, and topicDetails.\\n\\nIf " +
            "the parameter identifies a property that contains child properties, the child pr" +
            "operties will be included in the response. For example, in a video resource, the" +
            " snippet property contains the channelId, title, description, tags, and category" +
            "Id properties. As such, if you set part=snippet, the API response will contain a" +
            "ll of those properties.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder\":[" +
            "\"id\",\"part\"],\"response\":{\"$ref\":\"VideoListResponse\"},\"scopes\":[\"https://www.goog" +
            "leapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtube.readonly\",\"htt" +
            "ps://www.googleapis.com/auth/youtubepartner\"]},\"update\":{\"id\":\"youtube.videos.up" +
            "date\",\"path\":\"videos\",\"httpMethod\":\"PUT\",\"description\":\"Updates a video\'s metada" +
            "ta.\",\"parameters\":{\"part\":{\"type\":\"string\",\"description\":\"The part parameter ser" +
            "ves two purposes in this operation. It identifies the properties that the write " +
            "operation will set as well as the properties that the API response will include." +
            "\\n\\nThe part names that you can include in the parameter value are snippet, cont" +
            "entDetails, player, statistics, status, and topicDetails.\\n\\nNote that this meth" +
            "od will override the existing values for all of the mutable properties that are " +
            "contained in any parts that the parameter value specifies. For example, a video\'" +
            "s privacy setting is contained in the status part. As such, if your request is u" +
            "pdating a private video, and the request\'s part parameter value includes the sta" +
            "tus part, the video\'s privacy setting will be updated to whatever value the requ" +
            "est body specifies. If the request body does not specify a value, the existing p" +
            "rivacy setting will be removed and the video will revert to the default privacy " +
            "setting.\\n\\nIn addition, not all of those parts contain properties that can be s" +
            "et when setting or updating a video\'s metadata. For example, the statistics obje" +
            "ct encapsulates statistics that YouTube calculates for a video and does not cont" +
            "ain values that you can set or modify. If the parameter value specifies a part t" +
            "hat does not contain mutable values, that part will still be included in the API" +
            " response.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"requ" +
            "est\":{\"$ref\":\"Video\"},\"response\":{\"$ref\":\"Video\"},\"scopes\":[\"https://www.googlea" +
            "pis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtubepartner\"]}}}}}";
        
        public const string Version = "v3";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string _Key;
        
        protected YoutubeService(Google.Apis.Discovery.IService _service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this._service = _service;
            this._authenticator = _authenticator;
            this._activities = new ActivitiesResource(this, _authenticator);
            this._channels = new ChannelsResource(this, _authenticator);
            this._guideCategories = new GuideCategoriesResource(this, _authenticator);
            this._playlistItems = new PlaylistItemsResource(this, _authenticator);
            this._playlists = new PlaylistsResource(this, _authenticator);
            this._search = new SearchResource(this, _authenticator);
            this._subscriptions = new SubscriptionsResource(this, _authenticator);
            this._videoCategories = new VideoCategoriesResource(this, _authenticator);
            this._videos = new VideosResource(this, _authenticator);
        }
        
        public YoutubeService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public YoutubeService(Google.Apis.Authentication.IAuthenticator _authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(YoutubeService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameters(new System.Uri("https://www.googleapis.com/youtube/v3/"))), _authenticator) {
        }
        
        public Google.Apis.Authentication.IAuthenticator Authenticator {
            get {
                return this._authenticator;
            }
        }
        
        public virtual string Name {
            get {
                return "youtube";
            }
        }
        
        public virtual string BaseUri {
            get {
                return "https://www.googleapis.com/youtube/v3/";
            }
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this._Key;
            }
            set {
                this._Key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this._service.CreateRequest(resource, method);
            if ((string.IsNullOrEmpty(Key) == false)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(_authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            _service.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return _service.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return _service.DeserializeResponse<T>(response);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>Manage your YouTube account</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtube")]
            Youtube,
            
            /// <summary>View your YouTube account</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtube.readonly")]
            YoutubeReadonly,
            
            /// <summary>Manage your YouTube videos</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtube.upload")]
            YoutubeUpload,
            
            /// <summary>View and manage your assets and associated content on YouTube</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtubepartner")]
            Youtubepartner,
        }
    }
    
    public class ActivitiesResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "activities";
        
        public ActivitiesResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Posts a bulletin for a specific channel. (The user submitting the request must be authorized to act on the channel&apos;s behalf.)</summary>
        /// <param name="part">Required - The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        ///
        ///The part names that you can include in the parameter value are snippet and contentDetails.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.Activity body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Returns a list of channel activity events that match the request criteria. For example, you can retrieve events associated with a particular channel, events associated with the user&apos;s subscriptions and Google+ friends, or the YouTube home page feed, which is customized for each user.</summary>
        /// <param name="part">Required - The part parameter specifies a comma-separated list of one or more activity resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails.
        ///
        ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a activity resource, the snippet property contains other properties that identify the type of activity, a display title for the activity, and so forth. If you set part=snippet, the API response will also contain all of those nested properties.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Activity> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Activity _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Activity body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
            ///
            ///The part names that you can include in the parameter value are snippet and contentDetails.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Activity Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activities";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.ActivityListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _channelId;
            
            private string _home;
            
            private System.Nullable<long> _maxResults;
            
            private System.Nullable<bool> _mine;
            
            private string _pageToken;
            
            private string _part;
            
            private string _publishedAfter;
            
            private string _publishedBefore;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The channelId parameter specifies a unique YouTube channel ID. The API will then return a list of that channel's activities.</summary>
            [Google.Apis.Util.RequestParameterAttribute("channelId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ChannelId {
                get {
                    return this._channelId;
                }
                set {
                    this._channelId = value;
                }
            }
            
            /// <summary>Set this parameter's value to true to retrieve the activity feed that displays on the YouTube home page for the currently authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("home", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Home {
                get {
                    return this._home;
                }
                set {
                    this._home = value;
                }
            }
            
            /// <summary>USE_DESCRIPTION --- channels:list:maxResults</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Set this parameter's value to true to retrieve a feed of the authenticated user's activities.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Mine {
                get {
                    return this._mine;
                }
                set {
                    this._mine = value;
                }
            }
            
            /// <summary>USE_DESCRIPTION --- channels:list:pageToken</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>The part parameter specifies a comma-separated list of one or more activity resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails.
            ///
            ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a activity resource, the snippet property contains other properties that identify the type of activity, a display title for the activity, and so forth. If you set part=snippet, the API response will also contain all of those nested properties.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>The publishedAfter parameter specifies the earliest date and time that an activity could have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be included in the result set. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.</summary>
            [Google.Apis.Util.RequestParameterAttribute("publishedAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PublishedAfter {
                get {
                    return this._publishedAfter;
                }
                set {
                    this._publishedAfter = value;
                }
            }
            
            /// <summary>The publishedBefore parameter specifies the date and time before which an activity must have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be excluded from the result set. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format.</summary>
            [Google.Apis.Util.RequestParameterAttribute("publishedBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PublishedBefore {
                get {
                    return this._publishedBefore;
                }
                set {
                    this._publishedBefore = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activities";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class ChannelsResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "channels";
        
        public ChannelsResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Returns a collection of zero or more channel resources that match the request criteria.</summary>
        /// <param name="part">Required - The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, statistics, and topicDetails.
        ///
        ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channel resource, the contentDetails property contains other properties, such as the uploads properties. As such, if you set part=contentDetails, the API response will also contain all of those nested properties.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.ChannelListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _categoryId;
            
            private string _id;
            
            private System.Nullable<long> _maxResults;
            
            private System.Nullable<bool> _mine;
            
            private string _mySubscribers;
            
            private string _pageToken;
            
            private string _part;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The categoryId parameter specifies a YouTube guide category, thereby requesting YouTube channels associated with that category.</summary>
            [Google.Apis.Util.RequestParameterAttribute("categoryId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CategoryId {
                get {
                    return this._categoryId;
                }
                set {
                    this._categoryId = value;
                }
            }
            
            /// <summary>The id parameter specifies a comma-separated list of the YouTube channel ID(s) for the resource(s) that are being retrieved. In a channel resource, the id property specifies the channel's YouTube channel ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>The maxResults parameter specifies the maximum number of items that should be returned in the result set.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Set this parameter's value to true to instruct the API to only return channels owned by the authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Mine {
                get {
                    return this._mine;
                }
                set {
                    this._mine = value;
                }
            }
            
            /// <summary>Set this parameter's value to true to retrieve a list of channels that subscribed to the authenticated user's channel.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mySubscribers", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MySubscribers {
                get {
                    return this._mySubscribers;
                }
                set {
                    this._mySubscribers = value;
                }
            }
            
            /// <summary>The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, statistics, and topicDetails.
            ///
            ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channel resource, the contentDetails property contains other properties, such as the uploads properties. As such, if you set part=contentDetails, the API response will also contain all of those nested properties.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "channels";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class GuideCategoriesResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "guideCategories";
        
        public GuideCategoriesResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Returns a list of categories that can be associated with YouTube channels.</summary>
        /// <param name="part">Required - The part parameter specifies a comma-separated list of one or more guideCategory resource properties that the API response will include. The part names that you can include in the parameter value are id and snippet.
        ///
        ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a guideCategory resource, the snippet property contains other properties, such as the category&apos;s title. If you set part=snippet, the API response will also contain all of those nested properties.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.GuideCategoryListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _hl;
            
            private string _id;
            
            private string _part;
            
            private string _regionCode;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The hl parameter specifies the language that will be used for text values in the API response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("hl", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Hl {
                get {
                    return this._hl;
                }
                set {
                    this._hl = value;
                }
            }
            
            /// <summary>The id parameter specifies a comma-separated list of the YouTube channel category ID(s) for the resource(s) that are being retrieved. In a guideCategory resource, the id property specifies the YouTube channel category ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>The part parameter specifies a comma-separated list of one or more guideCategory resource properties that the API response will include. The part names that you can include in the parameter value are id and snippet.
            ///
            ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a guideCategory resource, the snippet property contains other properties, such as the category's title. If you set part=snippet, the API response will also contain all of those nested properties.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>The regionCode parameter instructs the API to return the list of guide categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.</summary>
            [Google.Apis.Util.RequestParameterAttribute("regionCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RegionCode {
                get {
                    return this._regionCode;
                }
                set {
                    this._regionCode = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "guideCategories";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class PlaylistItemsResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "playlistItems";
        
        public PlaylistItemsResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Deletes a playlist item.</summary>
        /// <param name="id">Required - The id parameter specifies the YouTube playlist item ID for the playlist item that is being deleted. In a playlistItem resource, the id property specifies the playlist item&apos;s ID.</param>
        public virtual DeleteRequest Delete(string id) {
            return new DeleteRequest(service, id);
        }
        
        /// <summary>Adds a resource to a playlist.</summary>
        /// <param name="part">Required - The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        ///
        ///The part names that you can include in the parameter value are snippet and contentDetails.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.PlaylistItem body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Returns a collection of playlist items that match the API request parameters. You can retrieve all of the playlist items in a specified playlist or retrieve one or more playlist items by their unique IDs.</summary>
        /// <param name="part">Required - The part parameter specifies a comma-separated list of one or more playlistItem resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails.
        ///
        ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlistItem resource, the snippet property contains numerous fields, including the title, description, position, and resourceId properties. As such, if you set part=snippet, the API response will contain all of those properties.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        /// <summary>Modifies a playlist item. For example, you could update the item&apos;s position in the playlist.</summary>
        /// <param name="part">Required - The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        ///
        ///The part names that you can include in the parameter value are snippet and contentDetails.
        ///
        ///Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a playlist item can specify a start time and end time, which identify the times portion of the video that should play when users watch the video in the playlist. If your request is updating a playlist item that sets these values, and the request&apos;s part parameter value includes the contentDetails part, the playlist item&apos;s start and end times will be updated to whatever value the request body specifies. If the request body does not specify values, the existing start and end times will be removed and replaced with the default settings.</param>
        public virtual UpdateRequest Update(Google.Apis.Youtube.v3.Data.PlaylistItem body, string part) {
            return new UpdateRequest(service, body, part);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The id parameter specifies the YouTube playlist item ID for the playlist item that is being deleted. In a playlistItem resource, the id property specifies the playlist item's ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlistItems";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.PlaylistItem> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.PlaylistItem _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.PlaylistItem body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
            ///
            ///The part names that you can include in the parameter value are snippet and contentDetails.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.PlaylistItem Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlistItems";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.PlaylistItemListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            private System.Nullable<long> _maxResults;
            
            private string _pageToken;
            
            private string _part;
            
            private string _playlistId;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The id parameter specifies a comma-separated list of one or more unique playlist item IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>USE_DESCRIPTION --- channels:list:maxResults</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>USE_DESCRIPTION --- channels:list:pageToken</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>The part parameter specifies a comma-separated list of one or more playlistItem resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails.
            ///
            ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlistItem resource, the snippet property contains numerous fields, including the title, description, position, and resourceId properties. As such, if you set part=snippet, the API response will contain all of those properties.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>The playlistId parameter specifies the unique ID of the playlist for which you want to retrieve playlist items. Note that even though this is an optional parameter, every request to retrieve playlist items must specify a value for either the id parameter or the playlistId parameter.</summary>
            [Google.Apis.Util.RequestParameterAttribute("playlistId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PlaylistId {
                get {
                    return this._playlistId;
                }
                set {
                    this._playlistId = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlistItems";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.PlaylistItem> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.PlaylistItem _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.PlaylistItem body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
            ///
            ///The part names that you can include in the parameter value are snippet and contentDetails.
            ///
            ///Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a playlist item can specify a start time and end time, which identify the times portion of the video that should play when users watch the video in the playlist. If your request is updating a playlist item that sets these values, and the request's part parameter value includes the contentDetails part, the playlist item's start and end times will be updated to whatever value the request body specifies. If the request body does not specify values, the existing start and end times will be removed and replaced with the default settings.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.PlaylistItem Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlistItems";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class PlaylistsResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "playlists";
        
        public PlaylistsResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Deletes a playlist.</summary>
        /// <param name="id">Required - The id parameter specifies the YouTube playlist ID for the playlist that is being deleted. In a playlist resource, the id property specifies the playlist&apos;s ID.</param>
        public virtual DeleteRequest Delete(string id) {
            return new DeleteRequest(service, id);
        }
        
        /// <summary>Creates a playlist.</summary>
        /// <param name="part">Required - The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        ///
        ///The part names that you can include in the parameter value are snippet and status.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.Playlist body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Returns a collection of playlists that match the API request parameters. For example, you can retrieve all playlists that the authenticated user owns, or you can retrieve one or more playlists by their unique IDs.</summary>
        /// <param name="part">Required - The part parameter specifies a comma-separated list of one or more playlist resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and status.
        ///
        ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlist resource, the snippet property contains properties like author, title, description, tags, and timeCreated. As such, if you set part=snippet, the API response will contain all of those properties.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        /// <summary>Modifies a playlist. For example, you could change a playlist&apos;s title, description, or privacy status.</summary>
        /// <param name="part">Required - The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        ///
        ///The part names that you can include in the parameter value are snippet and status.
        ///
        ///Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a playlist&apos;s privacy setting is contained in the status part. As such, if your request is updating a private playlist, and the request&apos;s part parameter value includes the status part, the playlist&apos;s privacy setting will be updated to whatever value the request body specifies. If the request body does not specify a value, the existing privacy setting will be removed and the playlist will revert to the default privacy setting.</param>
        public virtual UpdateRequest Update(Google.Apis.Youtube.v3.Data.Playlist body, string part) {
            return new UpdateRequest(service, body, part);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The id parameter specifies the YouTube playlist ID for the playlist that is being deleted. In a playlist resource, the id property specifies the playlist's ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlists";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Playlist> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Playlist _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Playlist body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
            ///
            ///The part names that you can include in the parameter value are snippet and status.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Playlist Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlists";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.PlaylistListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _channelId;
            
            private string _id;
            
            private System.Nullable<long> _maxResults;
            
            private System.Nullable<bool> _mine;
            
            private string _pageToken;
            
            private string _part;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>This value indicates that the API should only return the specified channel's playlists.</summary>
            [Google.Apis.Util.RequestParameterAttribute("channelId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ChannelId {
                get {
                    return this._channelId;
                }
                set {
                    this._channelId = value;
                }
            }
            
            /// <summary>The id parameter specifies a comma-separated list of the YouTube playlist ID(s) for the resource(s) that are being retrieved. In a playlist resource, the id property specifies the playlist's YouTube playlist ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>USE_DESCRIPTION --- channels:list:maxResults</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Set this parameter's value to true to instruct the API to only return playlists owned by the authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Mine {
                get {
                    return this._mine;
                }
                set {
                    this._mine = value;
                }
            }
            
            /// <summary>USE_DESCRIPTION --- channels:list:pageToken</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>The part parameter specifies a comma-separated list of one or more playlist resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and status.
            ///
            ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlist resource, the snippet property contains properties like author, title, description, tags, and timeCreated. As such, if you set part=snippet, the API response will contain all of those properties.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlists";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Playlist> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Playlist _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Playlist body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
            ///
            ///The part names that you can include in the parameter value are snippet and status.
            ///
            ///Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a playlist's privacy setting is contained in the status part. As such, if your request is updating a private playlist, and the request's part parameter value includes the status part, the playlist's privacy setting will be updated to whatever value the request body specifies. If the request body does not specify a value, the existing privacy setting will be removed and the playlist will revert to the default privacy setting.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Playlist Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlists";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class SearchResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "search";
        
        public SearchResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching video, channel, and playlist resources, but you can also configure queries to only retrieve a specific type of resource.</summary>
        /// <param name="part">Required - The part parameter specifies a comma-separated list of one or more search resource properties that the API response will include. The part names that you can include in the parameter value are id and snippet.
        ///
        ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a search result, the snippet property contains other properties that identify the result&apos;s title, description, and so forth. If you set part=snippet, the API response will also contain all of those nested properties.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        /// <summary>The order parameter specifies the method that will be used to order resources in the API response.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Order {
            
            /// <summary>Resources are sorted in reverse chronological order based on the date they were created.</summary>
            [Google.Apis.Util.StringValueAttribute("date")]
            Date,
            
            /// <summary>Resources are sorted from highest to lowest rating.</summary>
            [Google.Apis.Util.StringValueAttribute("rating")]
            Rating,
            
            /// <summary>Resources are sorted based on their relevance to the search query. This is the default value for this parameter.</summary>
            [Google.Apis.Util.StringValueAttribute("relevance")]
            Relevance,
            
            /// <summary>Resources are sorted from highest to lowest number of views.</summary>
            [Google.Apis.Util.StringValueAttribute("viewCount")]
            ViewCount,
        }
        
        /// <summary>The published parameter indicates that the API response should only contain resources created within the specified time period.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Published {
            
            /// <summary>Do not filter results based on their creation date. This is the default value.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Return videos that were uploaded within the past month.</summary>
            [Google.Apis.Util.StringValueAttribute("thisMonth")]
            ThisMonth,
            
            /// <summary>Return videos that were uploaded within the past week.</summary>
            [Google.Apis.Util.StringValueAttribute("thisWeek")]
            ThisWeek,
            
            /// <summary>Return videos that were uploaded today.</summary>
            [Google.Apis.Util.StringValueAttribute("today")]
            Today,
        }
        
        /// <summary>The videoCaption parameter indicates whether the API should filter video search results based on whether they have captions.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoCaption {
            
            /// <summary>Do not filter results based on caption availability.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Only include videos that have captions.</summary>
            [Google.Apis.Util.StringValueAttribute("closedCaption")]
            ClosedCaption,
            
            /// <summary>Only include videos that do not have captions.</summary>
            [Google.Apis.Util.StringValueAttribute("none")]
            None,
        }
        
        /// <summary>The videoDefinition parameter lets you restrict a search to only include either high definition (HD) or standard definition (SD) videos. HD videos are available for playback in at least 720p, though higher resolutions, like 1080p, might also be available.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoDefinition {
            
            /// <summary>Return all videos, regardless of their resolution.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Only retrieve HD videos.</summary>
            [Google.Apis.Util.StringValueAttribute("high")]
            High,
            
            /// <summary>Only retrieve videos in standard definition.</summary>
            [Google.Apis.Util.StringValueAttribute("standard")]
            Standard,
        }
        
        /// <summary>The videoDimension parameter lets you restrict a search to only retrieve 2D or 3D videos.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoDimension {
            
            /// <summary>Restrict search results to exclude 3D videos.</summary>
            [Google.Apis.Util.StringValueAttribute("2d")]
            D,
            
            /// <summary>Restrict search results to only include 3D videos.</summary>
            [Google.Apis.Util.StringValueAttribute("3d")]
            DValue,
            
            /// <summary>Include both 3D and non-3D videos in returned results. This is the default value.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
        }
        
        /// <summary>The videoDuration parameter filters video search results based on their duration.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoDuration {
            
            /// <summary>Do not filter video search results based on their duration. This is the default value.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Only include videos longer than 20 minutes.</summary>
            [Google.Apis.Util.StringValueAttribute("long")]
            Long,
            
            /// <summary>Only include videos that are between four and 20 minutes long (inclusive).</summary>
            [Google.Apis.Util.StringValueAttribute("medium")]
            Medium,
            
            /// <summary>Only include videos that are less than four minutes long.</summary>
            [Google.Apis.Util.StringValueAttribute("short")]
            Short,
        }
        
        /// <summary>The videoLicense parameter filters search results to only include videos with a particular license. YouTube lets video uploaders choose to attach either the Creative Commons license or the standard YouTube license to each of their videos.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoLicense {
            
            /// <summary>Return all videos, regardless of which license they have, that match the query parameters.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Only return videos that have a Creative Commons license. Users can reuse videos with this license in other videos that they create. Learn more.</summary>
            [Google.Apis.Util.StringValueAttribute("creativeCommon")]
            CreativeCommon,
            
            /// <summary>Only return videos that have the standard YouTube license.</summary>
            [Google.Apis.Util.StringValueAttribute("youtube")]
            Youtube,
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.SearchListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private System.Nullable<long> _maxResults;
            
            private System.Nullable<Order> _order;
            
            private string _pageToken;
            
            private string _part;
            
            private System.Nullable<Published> _published;
            
            private string _q;
            
            private string _relatedToVideoId;
            
            private string _topicId;
            
            private string _type;
            
            private System.Nullable<VideoCaption> _videoCaption;
            
            private System.Nullable<VideoDefinition> _videoDefinition;
            
            private System.Nullable<VideoDimension> _videoDimension;
            
            private System.Nullable<VideoDuration> _videoDuration;
            
            private System.Nullable<VideoLicense> _videoLicense;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>USE_DESCRIPTION --- channels:list:maxResults</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>The order parameter specifies the method that will be used to order resources in the API response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("order", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Order> Order {
                get {
                    return this._order;
                }
                set {
                    this._order = value;
                }
            }
            
            /// <summary>USE_DESCRIPTION --- channels:list:pageToken</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>The part parameter specifies a comma-separated list of one or more search resource properties that the API response will include. The part names that you can include in the parameter value are id and snippet.
            ///
            ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a search result, the snippet property contains other properties that identify the result's title, description, and so forth. If you set part=snippet, the API response will also contain all of those nested properties.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>The published parameter indicates that the API response should only contain resources created within the specified time period.</summary>
            [Google.Apis.Util.RequestParameterAttribute("published", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Published> Published {
                get {
                    return this._published;
                }
                set {
                    this._published = value;
                }
            }
            
            /// <summary>The q parameter specifies the query term to search for.</summary>
            [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Q {
                get {
                    return this._q;
                }
                set {
                    this._q = value;
                }
            }
            
            /// <summary>The relatedToVideoId parameter retrieves a list of videos that are related to the video that the parameter value identifies. The parameter value must be set to a YouTube video ID and, if you are using this parameter, the type parameter must be set to video.</summary>
            [Google.Apis.Util.RequestParameterAttribute("relatedToVideoId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RelatedToVideoId {
                get {
                    return this._relatedToVideoId;
                }
                set {
                    this._relatedToVideoId = value;
                }
            }
            
            /// <summary>The topicId parameter indicates that the API response should only contain resources associated with the specified topic. The value identifies a Freebase topic ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("topicId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string TopicId {
                get {
                    return this._topicId;
                }
                set {
                    this._topicId = value;
                }
            }
            
            /// <summary>The type parameter restricts a search query to only retrieve a particular type of resource.</summary>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Type {
                get {
                    return this._type;
                }
                set {
                    this._type = value;
                }
            }
            
            /// <summary>The videoCaption parameter indicates whether the API should filter video search results based on whether they have captions.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoCaption", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoCaption> VideoCaption {
                get {
                    return this._videoCaption;
                }
                set {
                    this._videoCaption = value;
                }
            }
            
            /// <summary>The videoDefinition parameter lets you restrict a search to only include either high definition (HD) or standard definition (SD) videos. HD videos are available for playback in at least 720p, though higher resolutions, like 1080p, might also be available.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoDefinition", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoDefinition> VideoDefinition {
                get {
                    return this._videoDefinition;
                }
                set {
                    this._videoDefinition = value;
                }
            }
            
            /// <summary>The videoDimension parameter lets you restrict a search to only retrieve 2D or 3D videos.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoDimension", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoDimension> VideoDimension {
                get {
                    return this._videoDimension;
                }
                set {
                    this._videoDimension = value;
                }
            }
            
            /// <summary>The videoDuration parameter filters video search results based on their duration.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoDuration", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoDuration> VideoDuration {
                get {
                    return this._videoDuration;
                }
                set {
                    this._videoDuration = value;
                }
            }
            
            /// <summary>The videoLicense parameter filters search results to only include videos with a particular license. YouTube lets video uploaders choose to attach either the Creative Commons license or the standard YouTube license to each of their videos.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoLicense", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoLicense> VideoLicense {
                get {
                    return this._videoLicense;
                }
                set {
                    this._videoLicense = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "search";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class SubscriptionsResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "subscriptions";
        
        public SubscriptionsResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Deletes a subscription.</summary>
        /// <param name="id">Required - The id parameter specifies the YouTube subscription ID for the resource that is being deleted. In a subscription resource, the id property specifies the YouTube subscription ID.</param>
        public virtual DeleteRequest Delete(string id) {
            return new DeleteRequest(service, id);
        }
        
        /// <summary>Adds a subscription for the authenticated user&apos;s channel.</summary>
        /// <param name="part">Required - The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        ///
        ///The part names that you can include in the parameter value are snippet and contentDetails.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.Subscription body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Returns subscription resources that match the API request criteria.</summary>
        /// <param name="part">Required - The part parameter specifies a comma-separated list of one or more subscription resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails.
        ///
        ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a subscription resource, the snippet property contains other properties, such as a display title for the subscription. If you set part=snippet, the API response will also contain all of those nested properties.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        /// <summary>The order parameter specifies the method that will be used to sort resources in the API response.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Order {
            
            /// <summary>Sort alphabetically.</summary>
            [Google.Apis.Util.StringValueAttribute("alphabetical")]
            Alphabetical,
            
            /// <summary>Sort by relevance.</summary>
            [Google.Apis.Util.StringValueAttribute("relevance")]
            Relevance,
            
            /// <summary>Sort by order of activity.</summary>
            [Google.Apis.Util.StringValueAttribute("unread")]
            Unread,
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The id parameter specifies the YouTube subscription ID for the resource that is being deleted. In a subscription resource, the id property specifies the YouTube subscription ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "subscriptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Subscription> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Subscription _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Subscription body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
            ///
            ///The part names that you can include in the parameter value are snippet and contentDetails.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Subscription Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "subscriptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.SubscriptionListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _channelId;
            
            private string _forChannelId;
            
            private string _id;
            
            private System.Nullable<long> _maxResults;
            
            private System.Nullable<bool> _mine;
            
            private System.Nullable<Order> _order;
            
            private string _pageToken;
            
            private string _part;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The channelId parameter specifies a YouTube channel ID. The API will only return that channel's subscriptions.</summary>
            [Google.Apis.Util.RequestParameterAttribute("channelId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ChannelId {
                get {
                    return this._channelId;
                }
                set {
                    this._channelId = value;
                }
            }
            
            /// <summary>The forChannelId parameter specifies a comma-separated list of channel IDs. The API response will then only contain subscriptions matching those channels.</summary>
            [Google.Apis.Util.RequestParameterAttribute("forChannelId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ForChannelId {
                get {
                    return this._forChannelId;
                }
                set {
                    this._forChannelId = value;
                }
            }
            
            /// <summary>The id parameter specifies a comma-separated list of the YouTube subscription ID(s) for the resource(s) that are being retrieved. In a subscription resource, the id property specifies the YouTube subscription ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>USE_DESCRIPTION --- channels:list:maxResults</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Set this parameter's value to true to retrieve a feed of the authenticated user's subscriptions.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Mine {
                get {
                    return this._mine;
                }
                set {
                    this._mine = value;
                }
            }
            
            /// <summary>The order parameter specifies the method that will be used to sort resources in the API response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("order", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Order> Order {
                get {
                    return this._order;
                }
                set {
                    this._order = value;
                }
            }
            
            /// <summary>USE_DESCRIPTION --- channels:list:pageToken</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>The part parameter specifies a comma-separated list of one or more subscription resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails.
            ///
            ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a subscription resource, the snippet property contains other properties, such as a display title for the subscription. If you set part=snippet, the API response will also contain all of those nested properties.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "subscriptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class VideoCategoriesResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "videoCategories";
        
        public VideoCategoriesResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Returns a list of categories that can be associated with YouTube videos.</summary>
        /// <param name="part">Required - The part parameter specifies the videoCategory resource parts that the API response will include. Supported values are id and snippet.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.VideoCategoryListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _hl;
            
            private string _id;
            
            private string _part;
            
            private string _regionCode;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The hl parameter specifies the language that should be used for text values in the API response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("hl", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Hl {
                get {
                    return this._hl;
                }
                set {
                    this._hl = value;
                }
            }
            
            /// <summary>The id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>The part parameter specifies the videoCategory resource parts that the API response will include. Supported values are id and snippet.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>The regionCode parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.</summary>
            [Google.Apis.Util.RequestParameterAttribute("regionCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RegionCode {
                get {
                    return this._regionCode;
                }
                set {
                    this._regionCode = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videoCategories";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class VideosResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "videos";
        
        public VideosResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Deletes a YouTube video.</summary>
        /// <param name="id">Required - The id parameter specifies the YouTube video ID for the resource that is being deleted. In a video resource, the id property specifies the video&apos;s ID.</param>
        public virtual DeleteRequest Delete(string id) {
            return new DeleteRequest(service, id);
        }
        
        /// <summary>Uploads a video to YouTube and optionally sets the video&apos;s metadata.</summary>
        /// <param name="part">Required - The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        ///
        ///The part names that you can include in the parameter value are snippet, contentDetails, player, statistics, status, and topicDetails. However, not all of those parts contain properties that can be set when setting or updating a video&apos;s metadata. For example, the statistics object encapsulates statistics that YouTube calculates for a video and does not contain values that you can set or modify. If the parameter value specifies a part that does not contain mutable values, that part will still be included in the API response.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.Video body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Uploads a video to YouTube and optionally sets the video&apos;s metadata.</summary>
        /// <param name="part">Required - The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        ///
        ///The part names that you can include in the parameter value are snippet, contentDetails, player, statistics, status, and topicDetails. However, not all of those parts contain properties that can be set when setting or updating a video&apos;s metadata. For example, the statistics object encapsulates statistics that YouTube calculates for a video and does not contain values that you can set or modify. If the parameter value specifies a part that does not contain mutable values, that part will still be included in the API response.</param>
        public virtual InsertMediaUpload Insert(Google.Apis.Youtube.v3.Data.Video body, string part, System.IO.Stream stream, string contentType) {
            return new InsertMediaUpload(service, body, part, stream, contentType);
        }
        
        /// <summary>Returns a list of videos that match the API request parameters.</summary>
        /// <param name="id">Required - The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a video resource, the id property specifies the video&apos;s ID.</param>
        /// <param name="part">Required - The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, player, statistics, status, and topicDetails.
        ///
        ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet, the API response will contain all of those properties.</param>
        public virtual ListRequest List(string id, string part) {
            return new ListRequest(service, id, part);
        }
        
        /// <summary>Updates a video&apos;s metadata.</summary>
        /// <param name="part">Required - The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
        ///
        ///The part names that you can include in the parameter value are snippet, contentDetails, player, statistics, status, and topicDetails.
        ///
        ///Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a video&apos;s privacy setting is contained in the status part. As such, if your request is updating a private video, and the request&apos;s part parameter value includes the status part, the video&apos;s privacy setting will be updated to whatever value the request body specifies. If the request body does not specify a value, the existing privacy setting will be removed and the video will revert to the default privacy setting.
        ///
        ///In addition, not all of those parts contain properties that can be set when setting or updating a video&apos;s metadata. For example, the statistics object encapsulates statistics that YouTube calculates for a video and does not contain values that you can set or modify. If the parameter value specifies a part that does not contain mutable values, that part will still be included in the API response.</param>
        public virtual UpdateRequest Update(Google.Apis.Youtube.v3.Data.Video body, string part) {
            return new UpdateRequest(service, body, part);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The id parameter specifies the YouTube video ID for the resource that is being deleted. In a video resource, the id property specifies the video's ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videos";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Video> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Video _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Video body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
            ///
            ///The part names that you can include in the parameter value are snippet, contentDetails, player, statistics, status, and topicDetails. However, not all of those parts contain properties that can be set when setting or updating a video's metadata. For example, the statistics object encapsulates statistics that YouTube calculates for a video and does not contain values that you can set or modify. If the parameter value specifies a part that does not contain mutable values, that part will still be included in the API response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Video Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videos";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class InsertMediaUpload : Google.Apis.Upload.ResumableUpload<Google.Apis.Youtube.v3.Data.Video, Google.Apis.Youtube.v3.Data.Video> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _part;
            
            public InsertMediaUpload(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Video body, string part, System.IO.Stream stream, string contentType) : 
                    base(service.BaseUri, "/upload/youtube/v3/videos", "POST", stream, contentType) {
                this.Body = body;
                this.Authenticator = service.Authenticator;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
            ///
            ///The part names that you can include in the parameter value are snippet, contentDetails, player, statistics, status, and topicDetails. However, not all of those parts contain properties that can be set when setting or updating a video's metadata. For example, the statistics object encapsulates statistics that YouTube calculates for a video and does not contain values that you can set or modify. If the parameter value specifies a part that does not contain mutable values, that part will still be included in the API response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.VideoListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            private string _part;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string id, string part) : 
                    base(service) {
                this._id = id;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a video resource, the id property specifies the video's ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            /// <summary>The part parameter specifies a comma-separated list of one or more video resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, contentDetails, player, statistics, status, and topicDetails.
            ///
            ///If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId, title, description, tags, and categoryId properties. As such, if you set part=snippet, the API response will contain all of those properties.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videos";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Video> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Video _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Video body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.
            ///
            ///The part names that you can include in the parameter value are snippet, contentDetails, player, statistics, status, and topicDetails.
            ///
            ///Note that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a video's privacy setting is contained in the status part. As such, if your request is updating a private video, and the request's part parameter value includes the status part, the video's privacy setting will be updated to whatever value the request body specifies. If the request body does not specify a value, the existing privacy setting will be removed and the video will revert to the default privacy setting.
            ///
            ///In addition, not all of those parts contain properties that can be set when setting or updating a video's metadata. For example, the statistics object encapsulates statistics that YouTube calculates for a video and does not contain values that you can set or modify. If the parameter value specifies a part that does not contain mutable values, that part will still be included in the API response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Video Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videos";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public partial class YoutubeService {
        
        private const string Resource = "";
        
        private ActivitiesResource _activities;
        
        private ChannelsResource _channels;
        
        private GuideCategoriesResource _guideCategories;
        
        private PlaylistItemsResource _playlistItems;
        
        private PlaylistsResource _playlists;
        
        private SearchResource _search;
        
        private SubscriptionsResource _subscriptions;
        
        private VideoCategoriesResource _videoCategories;
        
        private VideosResource _videos;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual ActivitiesResource Activities {
            get {
                return this._activities;
            }
        }
        
        public virtual ChannelsResource Channels {
            get {
                return this._channels;
            }
        }
        
        public virtual GuideCategoriesResource GuideCategories {
            get {
                return this._guideCategories;
            }
        }
        
        public virtual PlaylistItemsResource PlaylistItems {
            get {
                return this._playlistItems;
            }
        }
        
        public virtual PlaylistsResource Playlists {
            get {
                return this._playlists;
            }
        }
        
        public virtual SearchResource Search {
            get {
                return this._search;
            }
        }
        
        public virtual SubscriptionsResource Subscriptions {
            get {
                return this._subscriptions;
            }
        }
        
        public virtual VideoCategoriesResource VideoCategories {
            get {
                return this._videoCategories;
            }
        }
        
        public virtual VideosResource Videos {
            get {
                return this._videos;
            }
        }
    }
}
