//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4971
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Youtube.v3.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    /// <summary>JSON template for a YouTube activity.</summary>
    public class Activity : Google.Apis.Requests.IDirectResponseSchema {
        
        private ActivityContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private ActivitySnippet _snippet;
        
        /// <summary>JSON template for the contentDetails part of a activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual ActivityContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The eTag of the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique ID of the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>JSON template for the snippet part of a activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual ActivitySnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>JSON template for the contentDetails part of a activity.</summary>
    public class ActivityContentDetails {
        
        private ActivityContentDetails.BulletinData _bulletin;
        
        private ActivityContentDetails.CommentData _comment;
        
        private ActivityContentDetails.FavoriteData _favorite;
        
        private ActivityContentDetails.LikeData _like;
        
        private ActivityContentDetails.PlaylistItemData _playlistItem;
        
        private ActivityContentDetails.RecommendationData _recommendation;
        
        private ActivityContentDetails.SocialData _social;
        
        private ActivityContentDetails.SubscriptionData _subscription;
        
        private ActivityContentDetails.UploadData _upload;
        
        /// <summary>Only present if the type is &quot;bulletin&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bulletin")]
        public virtual ActivityContentDetails.BulletinData Bulletin {
            get {
                return this._bulletin;
            }
            set {
                this._bulletin = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;comment&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual ActivityContentDetails.CommentData Comment {
            get {
                return this._comment;
            }
            set {
                this._comment = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;favorite&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("favorite")]
        public virtual ActivityContentDetails.FavoriteData Favorite {
            get {
                return this._favorite;
            }
            set {
                this._favorite = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;like&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("like")]
        public virtual ActivityContentDetails.LikeData Like {
            get {
                return this._like;
            }
            set {
                this._like = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;playlistItem&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playlistItem")]
        public virtual ActivityContentDetails.PlaylistItemData PlaylistItem {
            get {
                return this._playlistItem;
            }
            set {
                this._playlistItem = value;
            }
        }
        
        /// <summary>Only set if the type is &quot;recommendation&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recommendation")]
        public virtual ActivityContentDetails.RecommendationData Recommendation {
            get {
                return this._recommendation;
            }
            set {
                this._recommendation = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;social&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("social")]
        public virtual ActivityContentDetails.SocialData Social {
            get {
                return this._social;
            }
            set {
                this._social = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;subscription&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subscription")]
        public virtual ActivityContentDetails.SubscriptionData Subscription {
            get {
                return this._subscription;
            }
            set {
                this._subscription = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;upload&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("upload")]
        public virtual ActivityContentDetails.UploadData Upload {
            get {
                return this._upload;
            }
            set {
                this._upload = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;bulletin&quot;.</summary>
        public class BulletinData {
            
            private ResourceId _resourceId;
            
            /// <summary>JSON template for a resource id.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;comment&quot;.</summary>
        public class CommentData {
            
            private ResourceId _resourceId;
            
            /// <summary>JSON template for a resource id.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;favorite&quot;.</summary>
        public class FavoriteData {
            
            private ResourceId _resourceId;
            
            /// <summary>JSON template for a resource id.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;like&quot;.</summary>
        public class LikeData {
            
            private ResourceId _resourceId;
            
            /// <summary>JSON template for a resource id.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;playlistItem&quot;.</summary>
        public class PlaylistItemData {
            
            private string _playlistId;
            
            private string _videoId;
            
            /// <summary>ID of the playlist the video was added to.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("playlistId")]
            public virtual string PlaylistId {
                get {
                    return this._playlistId;
                }
                set {
                    this._playlistId = value;
                }
            }
            
            /// <summary>ID of the video added to the playlist.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
            public virtual string VideoId {
                get {
                    return this._videoId;
                }
                set {
                    this._videoId = value;
                }
            }
        }
        
        /// <summary>Only set if the type is &quot;recommendation&quot;.</summary>
        public class RecommendationData {
            
            private string _reason;
            
            private ResourceId _resourceId;
            
            private ResourceId _seedResourceId;
            
            /// <summary>Reason for which the video was recommended.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("reason")]
            public virtual string Reason {
                get {
                    return this._reason;
                }
                set {
                    this._reason = value;
                }
            }
            
            /// <summary>JSON template for a resource id.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
            
            /// <summary>JSON template for a resource id.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("seedResourceId")]
            public virtual ResourceId SeedResourceId {
                get {
                    return this._seedResourceId;
                }
                set {
                    this._seedResourceId = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;social&quot;.</summary>
        public class SocialData {
            
            private string _author;
            
            private string _imageUrl;
            
            private string _referenceUrl;
            
            private ResourceId _resourceId;
            
            private string _type;
            
            /// <summary>Author of the post.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("author")]
            public virtual string Author {
                get {
                    return this._author;
                }
                set {
                    this._author = value;
                }
            }
            
            /// <summary>Image of the post author.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("imageUrl")]
            public virtual string ImageUrl {
                get {
                    return this._imageUrl;
                }
                set {
                    this._imageUrl = value;
                }
            }
            
            /// <summary>Url of the social post.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("referenceUrl")]
            public virtual string ReferenceUrl {
                get {
                    return this._referenceUrl;
                }
                set {
                    this._referenceUrl = value;
                }
            }
            
            /// <summary>JSON template for a resource id.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
            
            /// <summary>Type of the social network.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this._type;
                }
                set {
                    this._type = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;subscription&quot;.</summary>
        public class SubscriptionData {
            
            private ResourceId _resourceId;
            
            /// <summary>JSON template for a resource id.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;upload&quot;.</summary>
        public class UploadData {
            
            private string _videoId;
            
            /// <summary>ID of the uploaded video.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
            public virtual string VideoId {
                get {
                    return this._videoId;
                }
                set {
                    this._videoId = value;
                }
            }
        }
    }
    
    /// <summary>JSON template for a ActivityService.List() response.</summary>
    public class ActivityListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Activity> _activities;
        
        private string _etag;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>List of activities matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activities")]
        public virtual System.Collections.Generic.IList<Activity> Activities {
            get {
                return this._activities;
            }
            set {
                this._activities = value;
            }
        }
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token to the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>JSON template for a page info.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>Token to the previous page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>JSON template for the snippet part of a activity.</summary>
    public class ActivitySnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _groupId;
        
        private string _publishedAt;
        
        private ActivitySnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        private string _type;
        
        /// <summary>Channel publishing the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Id of the group that this activity is part of.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupId")]
        public virtual string GroupId {
            get {
                return this._groupId;
            }
            set {
                this._groupId = value;
            }
        }
        
        /// <summary>Date and time the activity was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>Activity thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual ActivitySnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Type of the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
        
        /// <summary>Activity thumbnails.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>JSON template for a YouTube Channel.</summary>
    public class Channel {
        
        private ChannelContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private ChannelSnippet _snippet;
        
        private ChannelStatistics _statistics;
        
        private ChannelTopicDetails _topicDetails;
        
        /// <summary>JSON template for the content details part of a channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual ChannelContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The eTag of the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique ID of the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>JSON template for the snippet part of a channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual ChannelSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
        
        /// <summary>JSON template for the statistics part of a channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statistics")]
        public virtual ChannelStatistics Statistics {
            get {
                return this._statistics;
            }
            set {
                this._statistics = value;
            }
        }
        
        /// <summary>JSON template for the topic details part of a channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topicDetails")]
        public virtual ChannelTopicDetails TopicDetails {
            get {
                return this._topicDetails;
            }
            set {
                this._topicDetails = value;
            }
        }
    }
    
    /// <summary>JSON template for a YouTube guide category.</summary>
    public class ChannelCategory {
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private GuideCategorySnippet _snippet;
        
        /// <summary>The eTag of the guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique ID of the guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>JSON template for the details part of a guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual GuideCategorySnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>JSON template for a GuideCategoryService.List() response.</summary>
    public class ChannelCategoryListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<ChannelCategory> _channelCategories;
        
        private string _etag;
        
        private string _kind;
        
        /// <summary>List of categories matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelCategories")]
        public virtual System.Collections.Generic.IList<ChannelCategory> ChannelCategories {
            get {
                return this._channelCategories;
            }
            set {
                this._channelCategories = value;
            }
        }
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
    }
    
    /// <summary>JSON template for the content details part of a channel.</summary>
    public class ChannelContentDetails {
        
        private string _privacyStatus;
        
        private string _uploads;
        
        /// <summary>Privacy status of the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privacyStatus")]
        public virtual string PrivacyStatus {
            get {
                return this._privacyStatus;
            }
            set {
                this._privacyStatus = value;
            }
        }
        
        /// <summary>The ID of the playlist containing the uploads of this channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uploads")]
        public virtual string Uploads {
            get {
                return this._uploads;
            }
            set {
                this._uploads = value;
            }
        }
    }
    
    /// <summary>JSON template for a ChannelService.List() response.</summary>
    public class ChannelListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Channel> _channels;
        
        private string _etag;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>List of channels matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channels")]
        public virtual System.Collections.Generic.IList<Channel> Channels {
            get {
                return this._channels;
            }
            set {
                this._channels = value;
            }
        }
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token to the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>JSON template for a page info.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>Token to the previous page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>JSON template for the snippet part of a channel.</summary>
    public class ChannelSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private ChannelSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>Id of the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Date and time the channel was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>Channel thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual ChannelSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Channel thumbnails.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>JSON template for the statistics part of a channel.</summary>
    public class ChannelStatistics {
        
        private string _commentCount;
        
        private string _subscriberCount;
        
        private string _videoCount;
        
        private string _viewCount;
        
        /// <summary>Number of comments for this channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commentCount")]
        public virtual string CommentCount {
            get {
                return this._commentCount;
            }
            set {
                this._commentCount = value;
            }
        }
        
        /// <summary>Number of subscribers to this channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subscriberCount")]
        public virtual string SubscriberCount {
            get {
                return this._subscriberCount;
            }
            set {
                this._subscriberCount = value;
            }
        }
        
        /// <summary>Number of videos in the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoCount")]
        public virtual string VideoCount {
            get {
                return this._videoCount;
            }
            set {
                this._videoCount = value;
            }
        }
        
        /// <summary>Number of times the channel has been viewed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("viewCount")]
        public virtual string ViewCount {
            get {
                return this._viewCount;
            }
            set {
                this._viewCount = value;
            }
        }
    }
    
    /// <summary>JSON template for the topic details part of a channel.</summary>
    public class ChannelTopicDetails {
        
        private System.Collections.Generic.IList<string> _topics;
        
        /// <summary>List of topic ids for this channel *</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topics")]
        public virtual System.Collections.Generic.IList<string> Topics {
            get {
                return this._topics;
            }
            set {
                this._topics = value;
            }
        }
    }
    
    /// <summary>JSON template for the details part of a guide category.</summary>
    public class GuideCategorySnippet {
        
        private string _channelId;
        
        private string _title;
        
        /// <summary>Channel publishing the guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Title of the guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
    }
    
    /// <summary>JSON template for a page info.</summary>
    public class PageInfo {
        
        private System.Nullable<long> _resultPerPage;
        
        private System.Nullable<long> _totalResults;
        
        /// <summary>The number of results to display for each page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resultPerPage")]
        public virtual System.Nullable<long> ResultPerPage {
            get {
                return this._resultPerPage;
            }
            set {
                this._resultPerPage = value;
            }
        }
        
        /// <summary>The total number of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalResults")]
        public virtual System.Nullable<long> TotalResults {
            get {
                return this._totalResults;
            }
            set {
                this._totalResults = value;
            }
        }
    }
    
    /// <summary>JSON template for a YouTube Playlist.</summary>
    public class Playlist : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private PlaylistSnippet _snippet;
        
        private PlaylistStatus _status;
        
        /// <summary>The eTag of the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique id of the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>JSON template for the snippet part of a playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual PlaylistSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
        
        /// <summary>JSON template for the status part of a playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual PlaylistStatus Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
    }
    
    /// <summary>JSON template for a YouTube Playlist item.</summary>
    public class PlaylistItem : Google.Apis.Requests.IDirectResponseSchema {
        
        private PlaylistItemContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private PlaylistItemSnippet _snippet;
        
        /// <summary>JSON template for the content details part of a playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual PlaylistItemContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The eTag of the playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique id of the playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>JSON template for the snippet part of a playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual PlaylistItemSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>JSON template for the content details part of a playlist item.</summary>
    public class PlaylistItemContentDetails {
        
        private string _endAt;
        
        private string _note;
        
        private string _startAt;
        
        private string _videoId;
        
        /// <summary>The time video playback ends.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endAt")]
        public virtual string EndAt {
            get {
                return this._endAt;
            }
            set {
                this._endAt = value;
            }
        }
        
        /// <summary>The user-generated note for this item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("note")]
        public virtual string Note {
            get {
                return this._note;
            }
            set {
                this._note = value;
            }
        }
        
        /// <summary>The time video playback begins.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startAt")]
        public virtual string StartAt {
            get {
                return this._startAt;
            }
            set {
                this._startAt = value;
            }
        }
        
        /// <summary>ID of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
        public virtual string VideoId {
            get {
                return this._videoId;
            }
            set {
                this._videoId = value;
            }
        }
    }
    
    /// <summary>JSON template for a PlaylistItemService.List() response.</summary>
    public class PlaylistItemListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private System.Collections.Generic.IList<PlaylistItem> _playlistItems;
        
        private string _prevPageToken;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token to the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>JSON template for a page info.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>List of playlist items matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playlistItems")]
        public virtual System.Collections.Generic.IList<PlaylistItem> PlaylistItems {
            get {
                return this._playlistItems;
            }
            set {
                this._playlistItems = value;
            }
        }
        
        /// <summary>Token to the previous page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>JSON template for the snippet part of a playlist item.</summary>
    public class PlaylistItemSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _playlistId;
        
        private System.Nullable<long> _position;
        
        private string _publishedAt;
        
        private ResourceId _resourceId;
        
        private PlaylistItemSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>Channel publishing the playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>The playlist the item is part of.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playlistId")]
        public virtual string PlaylistId {
            get {
                return this._playlistId;
            }
            set {
                this._playlistId = value;
            }
        }
        
        /// <summary>The position of the item within the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("position")]
        public virtual System.Nullable<long> Position {
            get {
                return this._position;
            }
            set {
                this._position = value;
            }
        }
        
        /// <summary>Date and time the playlist item was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>JSON template for a resource id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
        public virtual ResourceId ResourceId {
            get {
                return this._resourceId;
            }
            set {
                this._resourceId = value;
            }
        }
        
        /// <summary>Playlist item thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual PlaylistItemSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Playlist item thumbnails.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>JSON template for a PlaylistService.List() response.</summary>
    public class PlaylistListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private System.Collections.Generic.IList<Playlist> _playlists;
        
        private string _prevPageToken;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token to the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>JSON template for a page info.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>List of playlists matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playlists")]
        public virtual System.Collections.Generic.IList<Playlist> Playlists {
            get {
                return this._playlists;
            }
            set {
                this._playlists = value;
            }
        }
        
        /// <summary>Token to the previous page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>JSON template for the snippet part of a playlist.</summary>
    public class PlaylistSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private PlaylistSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>Channel publishing the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Date and time the playlist was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>Playlist thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual PlaylistSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Playlist thumbnails.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>JSON template for the status part of a playlist.</summary>
    public class PlaylistStatus {
        
        private string _privacyStatus;
        
        /// <summary>Privacy of the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privacyStatus")]
        public virtual string PrivacyStatus {
            get {
                return this._privacyStatus;
            }
            set {
                this._privacyStatus = value;
            }
        }
    }
    
    /// <summary>JSON template for a resource id.</summary>
    public class ResourceId {
        
        private string _channelId;
        
        private string _kind;
        
        private string _playlistId;
        
        private string _videoId;
        
        /// <summary>ID of the referred channel. Present only when type is &quot;CHANNEL&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>The kind of the referred resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>ID of the referred playlist. Present only when type is &quot;PLAYLIST&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playlistId")]
        public virtual string PlaylistId {
            get {
                return this._playlistId;
            }
            set {
                this._playlistId = value;
            }
        }
        
        /// <summary>ID of the referred video. Present only when type is &quot;VIDEO&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
        public virtual string VideoId {
            get {
                return this._videoId;
            }
            set {
                this._videoId = value;
            }
        }
    }
    
    /// <summary>JSON template for a SearchService.List() response.</summary>
    public class SearchListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        private System.Collections.Generic.IList<SearchResult> _searchResults;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token to the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>JSON template for a page info.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>Token to the previous page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
        
        /// <summary>List of results matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResults")]
        public virtual System.Collections.Generic.IList<SearchResult> SearchResults {
            get {
                return this._searchResults;
            }
            set {
                this._searchResults = value;
            }
        }
    }
    
    /// <summary>JSON template for a YouTube Search result.</summary>
    public class SearchResult {
        
        private string _etag;
        
        private ResourceId _id;
        
        private string _kind;
        
        private SearchResultSnippet _snippet;
        
        /// <summary>The eTag of the search result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>JSON template for a resource id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual ResourceId Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>JSON template for the snippet part of a search result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual SearchResultSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>JSON template for the snippet part of a search result.</summary>
    public class SearchResultSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private SearchResultSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>Channel publishing the found resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the found resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Date and time the found resource was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>Thumbnails for the found resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual SearchResultSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the found resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Thumbnails for the found resource.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>JSON template for a YouTube Subscription.</summary>
    public class Subscription : Google.Apis.Requests.IDirectResponseSchema {
        
        private SubscriptionStatistics _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private SubscriptionSnippet _snippet;
        
        /// <summary>JSON template for the contect details part of a subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual SubscriptionStatistics ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The eTag of the subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique id of the subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>JSON template for the snippet part of a subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual SubscriptionSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>JSON template for a SubscriptionService.List() response.</summary>
    public class SubscriptionListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        private System.Collections.Generic.IList<Subscription> _subscriptions;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token to the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>JSON template for a page info.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>Token to the previous page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
        
        /// <summary>List of subscriptions matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subscriptions")]
        public virtual System.Collections.Generic.IList<Subscription> Subscriptions {
            get {
                return this._subscriptions;
            }
            set {
                this._subscriptions = value;
            }
        }
    }
    
    /// <summary>JSON template for the snippet part of a subscription.</summary>
    public class SubscriptionSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private ResourceId _resourceId;
        
        private SubscriptionSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>Channel publishing the subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Date and time the subscription was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>JSON template for a resource id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
        public virtual ResourceId ResourceId {
            get {
                return this._resourceId;
            }
            set {
                this._resourceId = value;
            }
        }
        
        /// <summary>Subscription thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual SubscriptionSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Subscription thumbnails.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>JSON template for the contect details part of a subscription.</summary>
    public class SubscriptionStatistics {
        
        private System.Nullable<long> _countHint;
        
        private System.Nullable<long> _unreadCount;
        
        /// <summary>Approximate number of videos in the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countHint")]
        public virtual System.Nullable<long> CountHint {
            get {
                return this._countHint;
            }
            set {
                this._countHint = value;
            }
        }
        
        /// <summary>Number of unread activities in the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unreadCount")]
        public virtual System.Nullable<long> UnreadCount {
            get {
                return this._unreadCount;
            }
            set {
                this._unreadCount = value;
            }
        }
    }
    
    /// <summary>JSON template for a thumbnail.</summary>
    public class Thumbnail {
        
        private string _url;
        
        /// <summary>The URL for the thumbnail.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this._url;
            }
            set {
                this._url = value;
            }
        }
    }
    
    /// <summary>JSON template for a YouTube Video.</summary>
    public class Video : Google.Apis.Requests.IDirectResponseSchema {
        
        private VideoContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private VideoPlayer _player;
        
        private VideoSnippet _snippet;
        
        private VideoStatistics _statistics;
        
        private VideoStatus _status;
        
        /// <summary>JSON template for the content details part of a video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual VideoContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The eTag of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique id of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>JSON template for the player part of a video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("player")]
        public virtual VideoPlayer Player {
            get {
                return this._player;
            }
            set {
                this._player = value;
            }
        }
        
        /// <summary>JSON template for the snippet part of a video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual VideoSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
        
        /// <summary>JSON template for the statistics part of a video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statistics")]
        public virtual VideoStatistics Statistics {
            get {
                return this._statistics;
            }
            set {
                this._statistics = value;
            }
        }
        
        /// <summary>JSON template for the status part of a video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual VideoStatus Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
    }
    
    /// <summary>JSON template for a YouTube Video Category.</summary>
    public class VideoCategory {
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private VideoCategorySnippet _snippet;
        
        /// <summary>The eTag of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique id of the video category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>JSON template for the snippet part of a video category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual VideoCategorySnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>JSON template for a VideoCategoryService.List() response.</summary>
    public class VideoCategoryListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private string _kind;
        
        private System.Collections.Generic.IList<VideoCategory> _videoCategories;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>List of video categories matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoCategories")]
        public virtual System.Collections.Generic.IList<VideoCategory> VideoCategories {
            get {
                return this._videoCategories;
            }
            set {
                this._videoCategories = value;
            }
        }
    }
    
    /// <summary>JSON template for the snippet part of a video category.</summary>
    public class VideoCategorySnippet {
        
        private string _channelId;
        
        private string _title;
        
        /// <summary>Channel publishing the video category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Title of the video category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
    }
    
    /// <summary>JSON template for the content details part of a video.</summary>
    public class VideoContentDetails {
        
        private string _aspectRatio;
        
        private string _duration;
        
        /// <summary>The aspect ratio of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("aspectRatio")]
        public virtual string AspectRatio {
            get {
                return this._aspectRatio;
            }
            set {
                this._aspectRatio = value;
            }
        }
        
        /// <summary>Duration of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duration")]
        public virtual string Duration {
            get {
                return this._duration;
            }
            set {
                this._duration = value;
            }
        }
    }
    
    /// <summary>JSON template for a VideoService.List() response.</summary>
    public class VideoListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private string _kind;
        
        private System.Collections.Generic.IList<Video> _videos;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>List of videos matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videos")]
        public virtual System.Collections.Generic.IList<Video> Videos {
            get {
                return this._videos;
            }
            set {
                this._videos = value;
            }
        }
    }
    
    /// <summary>JSON template for the player part of a video.</summary>
    public class VideoPlayer {
        
        private string _embedHtml;
        
        /// <summary>Iframe embed for the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("embedHtml")]
        public virtual string EmbedHtml {
            get {
                return this._embedHtml;
            }
            set {
                this._embedHtml = value;
            }
        }
    }
    
    /// <summary>JSON template for the snippet part of a video.</summary>
    public class VideoSnippet {
        
        private string _categoryId;
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private System.Collections.Generic.IList<string> _tags;
        
        private VideoSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>Video category the video belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("categoryId")]
        public virtual string CategoryId {
            get {
                return this._categoryId;
            }
            set {
                this._categoryId = value;
            }
        }
        
        /// <summary>Channel publishing the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Date and time the video was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>Textual tags associated with the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags {
            get {
                return this._tags;
            }
            set {
                this._tags = value;
            }
        }
        
        /// <summary>Video thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual VideoSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Video thumbnails.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>JSON template for the statistics part of a video.</summary>
    public class VideoStatistics {
        
        private string _commentCount;
        
        private string _dislikeCount;
        
        private string _favoriteCount;
        
        private string _likeCount;
        
        private string _viewCount;
        
        /// <summary>Number of comments for this video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commentCount")]
        public virtual string CommentCount {
            get {
                return this._commentCount;
            }
            set {
                this._commentCount = value;
            }
        }
        
        /// <summary>Number of times the video was disliked.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dislikeCount")]
        public virtual string DislikeCount {
            get {
                return this._dislikeCount;
            }
            set {
                this._dislikeCount = value;
            }
        }
        
        /// <summary>Number of times the video was added to a user&apos;s favorites list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("favoriteCount")]
        public virtual string FavoriteCount {
            get {
                return this._favoriteCount;
            }
            set {
                this._favoriteCount = value;
            }
        }
        
        /// <summary>Number of times the video was liked.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("likeCount")]
        public virtual string LikeCount {
            get {
                return this._likeCount;
            }
            set {
                this._likeCount = value;
            }
        }
        
        /// <summary>Number of times the video was viewed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("viewCount")]
        public virtual string ViewCount {
            get {
                return this._viewCount;
            }
            set {
                this._viewCount = value;
            }
        }
    }
    
    /// <summary>JSON template for the status part of a video.</summary>
    public class VideoStatus {
        
        private string _failureReason;
        
        private string _privacyStatus;
        
        private string _rejectionReason;
        
        private string _uploadStatus;
        
        /// <summary>Present only if the uploadStatus indicates a failed upload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureReason")]
        public virtual string FailureReason {
            get {
                return this._failureReason;
            }
            set {
                this._failureReason = value;
            }
        }
        
        /// <summary>Privacy of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privacyStatus")]
        public virtual string PrivacyStatus {
            get {
                return this._privacyStatus;
            }
            set {
                this._privacyStatus = value;
            }
        }
        
        /// <summary>Present only if the uploadStatus indicates a rejected upload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rejectionReason")]
        public virtual string RejectionReason {
            get {
                return this._rejectionReason;
            }
            set {
                this._rejectionReason = value;
            }
        }
        
        /// <summary>Status of the video upload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uploadStatus")]
        public virtual string UploadStatus {
            get {
                return this._uploadStatus;
            }
            set {
                this._uploadStatus = value;
            }
        }
    }
}
namespace Google.Apis.Youtube.v3 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class YoutubeService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService _service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"discoveryVersion\":\"v1\",\"id\":\"youtube:v3\",\"na" +
            "me\":\"youtube\",\"canonicalName\":\"YouTube\",\"version\":\"v3\",\"revision\":\"20120831\",\"ti" +
            "tle\":\"YouTube API\",\"description\":\"Programmatic access to YouTube features.\",\"ico" +
            "ns\":{\"x16\":\"http://www.google.com/images/icons/product/youtube-16.png\",\"x32\":\"ht" +
            "tp://www.google.com/images/icons/product/youtube-32.png\"},\"documentationLink\":\"h" +
            "ttps://developers.google.com/youtube\",\"protocol\":\"rest\",\"baseUrl\":\"https://www.g" +
            "oogleapis.com/youtube/v3/\",\"basePath\":\"/youtube/v3/\",\"rootUrl\":\"https://www.goog" +
            "leapis.com/\",\"servicePath\":\"youtube/v3/\",\"batchPath\":\"batch\",\"parameters\":{\"alt\"" +
            ":{\"type\":\"string\",\"description\":\"Data format for the response.\",\"default\":\"json\"" +
            ",\"enum\":[\"json\"],\"enumDescriptions\":[\"Responses with Content-Type of application" +
            "/json\"],\"location\":\"query\"},\"fields\":{\"type\":\"string\",\"description\":\"Selector sp" +
            "ecifying which fields to include in a partial response.\",\"location\":\"query\"},\"ke" +
            "y\":{\"type\":\"string\",\"description\":\"API key. Your API key identifies your project" +
            " and provides you with API access, quota, and reports. Required unless you provi" +
            "de an OAuth 2.0 token.\",\"location\":\"query\"},\"oauth_token\":{\"type\":\"string\",\"desc" +
            "ription\":\"OAuth 2.0 token for the current user.\",\"location\":\"query\"},\"prettyPrin" +
            "t\":{\"type\":\"boolean\",\"description\":\"Returns response with indentations and line " +
            "breaks.\",\"default\":\"true\",\"location\":\"query\"},\"quotaUser\":{\"type\":\"string\",\"desc" +
            "ription\":\"Available to use for quota purposes for server-side applications. Can " +
            "be any arbitrary string assigned to a user, but should not exceed 40 characters." +
            " Overrides userIp if both are provided.\",\"location\":\"query\"},\"userIp\":{\"type\":\"s" +
            "tring\",\"description\":\"IP address of the site where the request originates. Use t" +
            "his if you want to enforce per-user limits.\",\"location\":\"query\"}},\"auth\":{\"oauth" +
            "2\":{\"scopes\":{\"https://www.googleapis.com/auth/youtube\":{\"description\":\"Manage y" +
            "our YouTube account\"},\"https://www.googleapis.com/auth/youtube.readonly\":{\"descr" +
            "iption\":\"View your YouTube account\"},\"https://www.googleapis.com/auth/youtube.up" +
            "load\":{\"description\":\"Manage your YouTube videos\"},\"https://www.googleapis.com/a" +
            "uth/youtubepartner\":{\"description\":\"View and manage your assets and associated c" +
            "ontent on YouTube\"}}}},\"schemas\":{\"Activity\":{\"id\":\"Activity\",\"type\":\"object\",\"d" +
            "escription\":\"JSON template for a YouTube activity.\",\"properties\":{\"contentDetail" +
            "s\":{\"$ref\":\"ActivityContentDetails\",\"description\":\"Type specific information abo" +
            "ut the activity.\"},\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the activi" +
            "ty.\"},\"id\":{\"type\":\"string\",\"description\":\"The unique ID of the activity.\"},\"kin" +
            "d\":{\"type\":\"string\",\"description\":\"The type of this API response.\",\"default\":\"yo" +
            "utube#activity\"},\"snippet\":{\"$ref\":\"ActivitySnippet\",\"description\":\"Basic detail" +
            "s about the activity: title, description, thumbnails.\"}}},\"ActivityContentDetail" +
            "s\":{\"id\":\"ActivityContentDetails\",\"type\":\"object\",\"description\":\"JSON template f" +
            "or the contentDetails part of a activity.\",\"properties\":{\"bulletin\":{\"type\":\"obj" +
            "ect\",\"description\":\"Only present if the type is \\\"bulletin\\\".\",\"properties\":{\"re" +
            "sourceId\":{\"$ref\":\"ResourceId\",\"description\":\"ID of the resource this bulletin i" +
            "s about.\"}}},\"comment\":{\"type\":\"object\",\"description\":\"Only present if the type " +
            "is \\\"comment\\\".\",\"properties\":{\"resourceId\":{\"$ref\":\"ResourceId\",\"description\":\"" +
            "ID of the commented resource.\"}}},\"favorite\":{\"type\":\"object\",\"description\":\"Onl" +
            "y present if the type is \\\"favorite\\\".\",\"properties\":{\"resourceId\":{\"$ref\":\"Reso" +
            "urceId\",\"description\":\"ID of the favorited resource.\"}}},\"like\":{\"type\":\"object\"" +
            ",\"description\":\"Only present if the type is \\\"like\\\".\",\"properties\":{\"resourceId" +
            "\":{\"$ref\":\"ResourceId\",\"description\":\"ID of the rated resource.\"}}},\"playlistIte" +
            "m\":{\"type\":\"object\",\"description\":\"Only present if the type is \\\"playlistItem\\\"." +
            "\",\"properties\":{\"playlistId\":{\"type\":\"string\",\"description\":\"ID of the playlist " +
            "the video was added to.\"},\"videoId\":{\"type\":\"string\",\"description\":\"ID of the vi" +
            "deo added to the playlist.\"}}},\"recommendation\":{\"type\":\"object\",\"description\":\"" +
            "Only set if the type is \\\"recommendation\\\".\",\"properties\":{\"reason\":{\"type\":\"str" +
            "ing\",\"description\":\"Reason for which the video was recommended.\"},\"resourceId\":{" +
            "\"$ref\":\"ResourceId\",\"description\":\"ID of the recommended resource.\"},\"seedResour" +
            "ceId\":{\"$ref\":\"ResourceId\",\"description\":\"ID of the video that caused this recom" +
            "mendation.\"}}},\"social\":{\"type\":\"object\",\"description\":\"Only present if the type" +
            " is \\\"social\\\".\",\"properties\":{\"author\":{\"type\":\"string\",\"description\":\"Author o" +
            "f the post.\"},\"imageUrl\":{\"type\":\"string\",\"description\":\"Image of the post autho" +
            "r.\"},\"referenceUrl\":{\"type\":\"string\",\"description\":\"Url of the social post.\"},\"r" +
            "esourceId\":{\"$ref\":\"ResourceId\",\"description\":\"ID of the resource this social ac" +
            "tivity is about.\"},\"type\":{\"type\":\"string\",\"description\":\"Type of the social net" +
            "work.\"}}},\"subscription\":{\"type\":\"object\",\"description\":\"Only present if the typ" +
            "e is \\\"subscription\\\".\",\"properties\":{\"resourceId\":{\"$ref\":\"ResourceId\",\"descrip" +
            "tion\":\"ID of the resource subscribed to.\"}}},\"upload\":{\"type\":\"object\",\"descript" +
            "ion\":\"Only present if the type is \\\"upload\\\".\",\"properties\":{\"videoId\":{\"type\":\"" +
            "string\",\"description\":\"ID of the uploaded video.\"}}}}},\"ActivityListResponse\":{\"" +
            "id\":\"ActivityListResponse\",\"type\":\"object\",\"description\":\"JSON template for a Ac" +
            "tivityService.List() response.\",\"properties\":{\"activities\":{\"type\":\"array\",\"desc" +
            "ription\":\"List of activities matching the request criteria.\",\"items\":{\"$ref\":\"Ac" +
            "tivity\"}},\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the response.\"},\"ki" +
            "nd\":{\"type\":\"string\",\"description\":\"The type of this API response.\",\"default\":\"y" +
            "outube#activityListResponse\"},\"nextPageToken\":{\"type\":\"string\",\"description\":\"To" +
            "ken to the next page.\"},\"pageInfo\":{\"$ref\":\"PageInfo\",\"description\":\"Paging info" +
            "rmation for the list result.\"},\"prevPageToken\":{\"type\":\"string\",\"description\":\"T" +
            "oken to the previous page.\"}}},\"ActivitySnippet\":{\"id\":\"ActivitySnippet\",\"type\":" +
            "\"object\",\"description\":\"JSON template for the snippet part of a activity.\",\"prop" +
            "erties\":{\"channelId\":{\"type\":\"string\",\"description\":\"Channel publishing the acti" +
            "vity.\"},\"description\":{\"type\":\"string\",\"description\":\"Description of the activit" +
            "y.\"},\"groupId\":{\"type\":\"string\",\"description\":\"Id of the group that this activit" +
            "y is part of.\"},\"publishedAt\":{\"type\":\"string\",\"description\":\"Date and time the " +
            "activity was published at.\",\"format\":\"date-time\"},\"thumbnails\":{\"type\":\"object\"," +
            "\"description\":\"Activity thumbnails.\",\"additionalProperties\":{\"$ref\":\"Thumbnail\"," +
            "\"description\":\"A map of thumbnails by their name.\"}},\"title\":{\"type\":\"string\",\"d" +
            "escription\":\"Title of the activity.\"},\"type\":{\"type\":\"string\",\"description\":\"Typ" +
            "e of the activity.\"}}},\"Channel\":{\"id\":\"Channel\",\"type\":\"object\",\"description\":\"" +
            "JSON template for a YouTube Channel.\",\"properties\":{\"contentDetails\":{\"$ref\":\"Ch" +
            "annelContentDetails\",\"description\":\"Information about the channel content: uploa" +
            "d playlist id, privacy status.\"},\"etag\":{\"type\":\"string\",\"description\":\"The eTag" +
            " of the channel.\"},\"id\":{\"type\":\"string\",\"description\":\"The unique ID of the cha" +
            "nnel.\"},\"kind\":{\"type\":\"string\",\"description\":\"The type of this API resource.\",\"" +
            "default\":\"youtube#channel\"},\"snippet\":{\"$ref\":\"ChannelSnippet\",\"description\":\"Ba" +
            "sic details about the channel: title, description, and thumbnails.\"},\"statistics" +
            "\":{\"$ref\":\"ChannelStatistics\",\"description\":\"Statistics about the channel: numbe" +
            "r of subscribers, views, and comments.\"},\"topicDetails\":{\"$ref\":\"ChannelTopicDet" +
            "ails\",\"description\":\"Information about channel topics\"}}},\"ChannelCategory\":{\"id" +
            "\":\"ChannelCategory\",\"type\":\"object\",\"description\":\"JSON template for a YouTube g" +
            "uide category.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The eTag of" +
            " the guide category.\"},\"id\":{\"type\":\"string\",\"description\":\"The unique ID of the" +
            " guide category.\"},\"kind\":{\"type\":\"string\",\"description\":\"The type of this API r" +
            "esource.\",\"default\":\"youtube#channelCategory\"},\"snippet\":{\"$ref\":\"GuideCategoryS" +
            "nippet\",\"description\":\"Basic details about the category: title.\"}}},\"ChannelCate" +
            "goryListResponse\":{\"id\":\"ChannelCategoryListResponse\",\"type\":\"object\",\"descripti" +
            "on\":\"JSON template for a GuideCategoryService.List() response.\",\"properties\":{\"c" +
            "hannelCategories\":{\"type\":\"array\",\"description\":\"List of categories matching the" +
            " request criteria.\",\"items\":{\"$ref\":\"ChannelCategory\"}},\"etag\":{\"type\":\"string\"," +
            "\"description\":\"The eTag of the response.\"},\"kind\":{\"type\":\"string\",\"description\"" +
            ":\"The type of this API response.\",\"default\":\"youtube#channelCategoryListResponse" +
            "\"}}},\"ChannelContentDetails\":{\"id\":\"ChannelContentDetails\",\"type\":\"object\",\"desc" +
            "ription\":\"JSON template for the content details part of a channel.\",\"properties\"" +
            ":{\"privacyStatus\":{\"type\":\"string\",\"description\":\"Privacy status of the channel." +
            "\"},\"uploads\":{\"type\":\"string\",\"description\":\"The ID of the playlist containing t" +
            "he uploads of this channel.\"}}},\"ChannelListResponse\":{\"id\":\"ChannelListResponse" +
            "\",\"type\":\"object\",\"description\":\"JSON template for a ChannelService.List() respo" +
            "nse.\",\"properties\":{\"channels\":{\"type\":\"array\",\"description\":\"List of channels m" +
            "atching the request criteria.\",\"items\":{\"$ref\":\"Channel\"}},\"etag\":{\"type\":\"strin" +
            "g\",\"description\":\"The eTag of the response.\"},\"kind\":{\"type\":\"string\",\"descripti" +
            "on\":\"The type of this API response.\",\"default\":\"youtube#channelListResponse\"},\"n" +
            "extPageToken\":{\"type\":\"string\",\"description\":\"Token to the next page.\"},\"pageInf" +
            "o\":{\"$ref\":\"PageInfo\",\"description\":\"Paging information for the list result.\"},\"" +
            "prevPageToken\":{\"type\":\"string\",\"description\":\"Token to the previous page.\"}}},\"" +
            "ChannelSnippet\":{\"id\":\"ChannelSnippet\",\"type\":\"object\",\"description\":\"JSON templ" +
            "ate for the snippet part of a channel.\",\"properties\":{\"channelId\":{\"type\":\"strin" +
            "g\",\"description\":\"Id of the channel.\"},\"description\":{\"type\":\"string\",\"descripti" +
            "on\":\"Description of the channel.\"},\"publishedAt\":{\"type\":\"string\",\"description\":" +
            "\"Date and time the channel was published at.\",\"format\":\"date-time\"},\"thumbnails\"" +
            ":{\"type\":\"object\",\"description\":\"Channel thumbnails.\",\"additionalProperties\":{\"$" +
            "ref\":\"Thumbnail\",\"description\":\"A map of thumbnails by their name.\"}},\"title\":{\"" +
            "type\":\"string\",\"description\":\"Title of the channel.\"}}},\"ChannelStatistics\":{\"id" +
            "\":\"ChannelStatistics\",\"type\":\"object\",\"description\":\"JSON template for the stati" +
            "stics part of a channel.\",\"properties\":{\"commentCount\":{\"type\":\"string\",\"descrip" +
            "tion\":\"Number of comments for this channel.\",\"format\":\"uint64\"},\"subscriberCount" +
            "\":{\"type\":\"string\",\"description\":\"Number of subscribers to this channel.\",\"forma" +
            "t\":\"uint64\"},\"videoCount\":{\"type\":\"string\",\"description\":\"Number of videos in th" +
            "e channel.\",\"format\":\"uint64\"},\"viewCount\":{\"type\":\"string\",\"description\":\"Numbe" +
            "r of times the channel has been viewed.\",\"format\":\"uint64\"}}},\"ChannelTopicDetai" +
            "ls\":{\"id\":\"ChannelTopicDetails\",\"type\":\"object\",\"description\":\"JSON template for" +
            " the topic details part of a channel.\",\"properties\":{\"topics\":{\"type\":\"array\",\"d" +
            "escription\":\"List of topic ids for this channel *\",\"items\":{\"type\":\"string\"}}}}," +
            "\"GuideCategorySnippet\":{\"id\":\"GuideCategorySnippet\",\"type\":\"object\",\"description" +
            "\":\"JSON template for the details part of a guide category.\",\"properties\":{\"chann" +
            "elId\":{\"type\":\"string\",\"description\":\"Channel publishing the guide category.\",\"d" +
            "efault\":\"UCBR8-60-B28hp2BmDPdntcQ\"},\"title\":{\"type\":\"string\",\"description\":\"Titl" +
            "e of the guide category.\"}}},\"PageInfo\":{\"id\":\"PageInfo\",\"type\":\"object\",\"descri" +
            "ption\":\"JSON template for a page info.\",\"properties\":{\"resultPerPage\":{\"type\":\"i" +
            "nteger\",\"description\":\"The number of results to display for each page.\",\"format\"" +
            ":\"int32\"},\"totalResults\":{\"type\":\"integer\",\"description\":\"The total number of re" +
            "sults.\",\"format\":\"int32\"}}},\"Playlist\":{\"id\":\"Playlist\",\"type\":\"object\",\"descrip" +
            "tion\":\"JSON template for a YouTube Playlist.\",\"properties\":{\"etag\":{\"type\":\"stri" +
            "ng\",\"description\":\"The eTag of the playlist.\"},\"id\":{\"type\":\"string\",\"descriptio" +
            "n\":\"The unique id of the playlist.\"},\"kind\":{\"type\":\"string\",\"description\":\"The " +
            "type of this API resource.\",\"default\":\"youtube#playlist\"},\"snippet\":{\"$ref\":\"Pla" +
            "ylistSnippet\",\"description\":\"Basic details about the playlist: title, descriptio" +
            "n, thumbnails.\"},\"status\":{\"$ref\":\"PlaylistStatus\",\"description\":\"Status of the " +
            "playlist: only privacy_status for now.\"}}},\"PlaylistItem\":{\"id\":\"PlaylistItem\",\"" +
            "type\":\"object\",\"description\":\"JSON template for a YouTube Playlist item.\",\"prope" +
            "rties\":{\"contentDetails\":{\"$ref\":\"PlaylistItemContentDetails\",\"description\":\"Con" +
            "tent details about the playlist item: start and end clipping time.\"},\"etag\":{\"ty" +
            "pe\":\"string\",\"description\":\"The eTag of the playlist item.\"},\"id\":{\"type\":\"strin" +
            "g\",\"description\":\"The unique id of the playlist item.\"},\"kind\":{\"type\":\"string\"," +
            "\"description\":\"The type of this API resource.\",\"default\":\"youtube#playlistItem\"}" +
            ",\"snippet\":{\"$ref\":\"PlaylistItemSnippet\",\"description\":\"Basic details about the " +
            "playlist item: title, description, thumbnails.\"}}},\"PlaylistItemContentDetails\":" +
            "{\"id\":\"PlaylistItemContentDetails\",\"type\":\"object\",\"description\":\"JSON template " +
            "for the content details part of a playlist item.\",\"properties\":{\"endAt\":{\"type\":" +
            "\"string\",\"description\":\"The time video playback ends.\"},\"note\":{\"type\":\"string\"," +
            "\"description\":\"The user-generated note for this item.\"},\"startAt\":{\"type\":\"strin" +
            "g\",\"description\":\"The time video playback begins.\"},\"videoId\":{\"type\":\"string\",\"" +
            "description\":\"ID of the video.\"}}},\"PlaylistItemListResponse\":{\"id\":\"PlaylistIte" +
            "mListResponse\",\"type\":\"object\",\"description\":\"JSON template for a PlaylistItemSe" +
            "rvice.List() response.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The" +
            " eTag of the response.\"},\"kind\":{\"type\":\"string\",\"description\":\"The type of this" +
            " API response.\",\"default\":\"youtube#playlistItemListResponse\"},\"nextPageToken\":{\"" +
            "type\":\"string\",\"description\":\"Token to the next page.\"},\"pageInfo\":{\"$ref\":\"Page" +
            "Info\",\"description\":\"Paging information for the list result.\"},\"playlistItems\":{" +
            "\"type\":\"array\",\"description\":\"List of playlist items matching the request criter" +
            "ia.\",\"items\":{\"$ref\":\"PlaylistItem\"}},\"prevPageToken\":{\"type\":\"string\",\"descript" +
            "ion\":\"Token to the previous page.\"}}},\"PlaylistItemSnippet\":{\"id\":\"PlaylistItemS" +
            "nippet\",\"type\":\"object\",\"description\":\"JSON template for the snippet part of a p" +
            "laylist item.\",\"properties\":{\"channelId\":{\"type\":\"string\",\"description\":\"Channel" +
            " publishing the playlist item.\"},\"description\":{\"type\":\"string\",\"description\":\"D" +
            "escription of the playlist item.\"},\"playlistId\":{\"type\":\"string\",\"description\":\"" +
            "The playlist the item is part of.\"},\"position\":{\"type\":\"integer\",\"description\":\"" +
            "The position of the item within the playlist.\",\"format\":\"uint32\"},\"publishedAt\":" +
            "{\"type\":\"string\",\"description\":\"Date and time the playlist item was published at" +
            ".\",\"format\":\"date-time\"},\"resourceId\":{\"$ref\":\"ResourceId\",\"description\":\"The ID" +
            " of the resource referenced by the playlist item.\"},\"thumbnails\":{\"type\":\"object" +
            "\",\"description\":\"Playlist item thumbnails.\",\"additionalProperties\":{\"$ref\":\"Thum" +
            "bnail\",\"description\":\"A map of thumbnails by their name.\"}},\"title\":{\"type\":\"str" +
            "ing\",\"description\":\"Title of the playlist item.\"}}},\"PlaylistListResponse\":{\"id\"" +
            ":\"PlaylistListResponse\",\"type\":\"object\",\"description\":\"JSON template for a Playl" +
            "istService.List() response.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\"" +
            ":\"The eTag of the response.\"},\"kind\":{\"type\":\"string\",\"description\":\"The type of" +
            " this API response.\",\"default\":\"youtube#playlistListResponse\"},\"nextPageToken\":{" +
            "\"type\":\"string\",\"description\":\"Token to the next page.\"},\"pageInfo\":{\"$ref\":\"Pag" +
            "eInfo\",\"description\":\"Paging information for the list result.\"},\"playlists\":{\"ty" +
            "pe\":\"array\",\"description\":\"List of playlists matching the request criteria.\",\"it" +
            "ems\":{\"$ref\":\"Playlist\"}},\"prevPageToken\":{\"type\":\"string\",\"description\":\"Token " +
            "to the previous page.\"}}},\"PlaylistSnippet\":{\"id\":\"PlaylistSnippet\",\"type\":\"obje" +
            "ct\",\"description\":\"JSON template for the snippet part of a playlist.\",\"propertie" +
            "s\":{\"channelId\":{\"type\":\"string\",\"description\":\"Channel publishing the playlist." +
            "\"},\"description\":{\"type\":\"string\",\"description\":\"Description of the playlist.\"}," +
            "\"publishedAt\":{\"type\":\"string\",\"description\":\"Date and time the playlist was pub" +
            "lished at.\",\"format\":\"date-time\"},\"thumbnails\":{\"type\":\"object\",\"description\":\"P" +
            "laylist thumbnails.\",\"additionalProperties\":{\"$ref\":\"Thumbnail\",\"description\":\"A" +
            " map of thumbnails by their name.\"}},\"title\":{\"type\":\"string\",\"description\":\"Tit" +
            "le of the playlist.\"}}},\"PlaylistStatus\":{\"id\":\"PlaylistStatus\",\"type\":\"object\"," +
            "\"description\":\"JSON template for the status part of a playlist.\",\"properties\":{\"" +
            "privacyStatus\":{\"type\":\"string\",\"description\":\"Privacy of the playlist.\"}}},\"Res" +
            "ourceId\":{\"id\":\"ResourceId\",\"type\":\"object\",\"description\":\"JSON template for a r" +
            "esource id.\",\"properties\":{\"channelId\":{\"type\":\"string\",\"description\":\"ID of the" +
            " referred channel. Present only when type is \\\"CHANNEL\\\".\"},\"kind\":{\"type\":\"stri" +
            "ng\",\"description\":\"The kind of the referred resource.\"},\"playlistId\":{\"type\":\"st" +
            "ring\",\"description\":\"ID of the referred playlist. Present only when type is \\\"PL" +
            "AYLIST\\\".\"},\"videoId\":{\"type\":\"string\",\"description\":\"ID of the referred video. " +
            "Present only when type is \\\"VIDEO\\\".\"}}},\"SearchListResponse\":{\"id\":\"SearchListR" +
            "esponse\",\"type\":\"object\",\"description\":\"JSON template for a SearchService.List()" +
            " response.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the" +
            " response.\"},\"kind\":{\"type\":\"string\",\"description\":\"The type of this API respons" +
            "e.\",\"default\":\"youtube#searchListResponse\"},\"nextPageToken\":{\"type\":\"string\",\"de" +
            "scription\":\"Token to the next page.\"},\"pageInfo\":{\"$ref\":\"PageInfo\",\"description" +
            "\":\"Paging information for the search result.\"},\"prevPageToken\":{\"type\":\"string\"," +
            "\"description\":\"Token to the previous page.\"},\"searchResults\":{\"type\":\"array\",\"de" +
            "scription\":\"List of results matching the request criteria.\",\"items\":{\"$ref\":\"Sea" +
            "rchResult\"}}}},\"SearchResult\":{\"id\":\"SearchResult\",\"type\":\"object\",\"description\"" +
            ":\"JSON template for a YouTube Search result.\",\"properties\":{\"etag\":{\"type\":\"stri" +
            "ng\",\"description\":\"The eTag of the search result.\"},\"id\":{\"$ref\":\"ResourceId\",\"d" +
            "escription\":\"The id of the resource.\"},\"kind\":{\"type\":\"string\",\"description\":\"Th" +
            "e type of this API resource.\",\"default\":\"youtube#searchResult\"},\"snippet\":{\"$ref" +
            "\":\"SearchResultSnippet\",\"description\":\"Basic details about the search result: ti" +
            "tle, description, author.\"}}},\"SearchResultSnippet\":{\"id\":\"SearchResultSnippet\"," +
            "\"type\":\"object\",\"description\":\"JSON template for the snippet part of a search re" +
            "sult.\",\"properties\":{\"channelId\":{\"type\":\"string\",\"description\":\"Channel publish" +
            "ing the found resource.\"},\"description\":{\"type\":\"string\",\"description\":\"Descript" +
            "ion of the found resource.\"},\"publishedAt\":{\"type\":\"string\",\"description\":\"Date " +
            "and time the found resource was published at.\",\"format\":\"date-time\"},\"thumbnails" +
            "\":{\"type\":\"object\",\"description\":\"Thumbnails for the found resource.\",\"additiona" +
            "lProperties\":{\"$ref\":\"Thumbnail\",\"description\":\"A map of thumbnails by their nam" +
            "e.\"}},\"title\":{\"type\":\"string\",\"description\":\"Title of the found resource.\"}}},\"" +
            "Subscription\":{\"id\":\"Subscription\",\"type\":\"object\",\"description\":\"JSON template " +
            "for a YouTube Subscription.\",\"properties\":{\"contentDetails\":{\"$ref\":\"Subscriptio" +
            "nStatistics\",\"description\":\"Basic statistics about the subscription\"},\"etag\":{\"t" +
            "ype\":\"string\",\"description\":\"The eTag of the subscription.\"},\"id\":{\"type\":\"strin" +
            "g\",\"description\":\"The unique id of the subscription.\"},\"kind\":{\"type\":\"string\",\"" +
            "description\":\"The type of this API resource.\",\"default\":\"youtube#subscription\"}," +
            "\"snippet\":{\"$ref\":\"SubscriptionSnippet\",\"description\":\"Basic details about the s" +
            "ubscription\"}}},\"SubscriptionListResponse\":{\"id\":\"SubscriptionListResponse\",\"typ" +
            "e\":\"object\",\"description\":\"JSON template for a SubscriptionService.List() respon" +
            "se.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the respon" +
            "se.\"},\"kind\":{\"type\":\"string\",\"description\":\"The type of this API response.\",\"de" +
            "fault\":\"youtube#subscriptionListResponse\"},\"nextPageToken\":{\"type\":\"string\",\"des" +
            "cription\":\"Token to the next page.\"},\"pageInfo\":{\"$ref\":\"PageInfo\",\"description\"" +
            ":\"Paging information for the list result.\"},\"prevPageToken\":{\"type\":\"string\",\"de" +
            "scription\":\"Token to the previous page.\"},\"subscriptions\":{\"type\":\"array\",\"descr" +
            "iption\":\"List of subscriptions matching the request criteria.\",\"items\":{\"$ref\":\"" +
            "Subscription\"}}}},\"SubscriptionSnippet\":{\"id\":\"SubscriptionSnippet\",\"type\":\"obje" +
            "ct\",\"description\":\"JSON template for the snippet part of a subscription.\",\"prope" +
            "rties\":{\"channelId\":{\"type\":\"string\",\"description\":\"Channel publishing the subsc" +
            "ription.\"},\"description\":{\"type\":\"string\",\"description\":\"Description of the subs" +
            "cription.\"},\"publishedAt\":{\"type\":\"string\",\"description\":\"Date and time the subs" +
            "cription was published at.\",\"format\":\"date-time\"},\"resourceId\":{\"$ref\":\"Resource" +
            "Id\",\"description\":\"The resource subscribed to.\"},\"thumbnails\":{\"type\":\"object\",\"" +
            "description\":\"Subscription thumbnails.\",\"additionalProperties\":{\"$ref\":\"Thumbnai" +
            "l\",\"description\":\"A map of thumbnails by their name.\"}},\"title\":{\"type\":\"string\"" +
            ",\"description\":\"Title of the subscription.\"}}},\"SubscriptionStatistics\":{\"id\":\"S" +
            "ubscriptionStatistics\",\"type\":\"object\",\"description\":\"JSON template for the cont" +
            "ect details part of a subscription.\",\"properties\":{\"countHint\":{\"type\":\"integer\"" +
            ",\"description\":\"Approximate number of videos in the channel.\",\"format\":\"uint32\"}" +
            ",\"unreadCount\":{\"type\":\"integer\",\"description\":\"Number of unread activities in t" +
            "he channel.\",\"format\":\"uint32\"}}},\"Thumbnail\":{\"id\":\"Thumbnail\",\"type\":\"object\"," +
            "\"description\":\"JSON template for a thumbnail.\",\"properties\":{\"url\":{\"type\":\"stri" +
            "ng\",\"description\":\"The URL for the thumbnail.\"}}},\"Video\":{\"id\":\"Video\",\"type\":\"" +
            "object\",\"description\":\"JSON template for a YouTube Video.\",\"properties\":{\"conten" +
            "tDetails\":{\"$ref\":\"VideoContentDetails\",\"description\":\"Information about the vid" +
            "eo content, media file.\"},\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the" +
            " video.\"},\"id\":{\"type\":\"string\",\"description\":\"The unique id of the video.\"},\"ki" +
            "nd\":{\"type\":\"string\",\"description\":\"The type of this API resource.\",\"default\":\"y" +
            "outube#video\"},\"player\":{\"$ref\":\"VideoPlayer\",\"description\":\"Information used to" +
            " play the video.\"},\"snippet\":{\"$ref\":\"VideoSnippet\",\"description\":\"Basic details" +
            " about the video: title, description, thumbnails.\"},\"statistics\":{\"$ref\":\"VideoS" +
            "tatistics\",\"description\":\"Statistics about the video: number of views, ratings.\"" +
            "},\"status\":{\"$ref\":\"VideoStatus\",\"description\":\"Status of the video upload, priv" +
            "acy status.\"}}},\"VideoCategory\":{\"id\":\"VideoCategory\",\"type\":\"object\",\"descripti" +
            "on\":\"JSON template for a YouTube Video Category.\",\"properties\":{\"etag\":{\"type\":\"" +
            "string\",\"description\":\"The eTag of the video.\"},\"id\":{\"type\":\"string\",\"descripti" +
            "on\":\"The unique id of the video category.\"},\"kind\":{\"type\":\"string\",\"description" +
            "\":\"The type of this API resource.\",\"default\":\"youtube#videoCategory\"},\"snippet\":" +
            "{\"$ref\":\"VideoCategorySnippet\",\"description\":\"Basic details about the video cate" +
            "gory.\"}}},\"VideoCategoryListResponse\":{\"id\":\"VideoCategoryListResponse\",\"type\":\"" +
            "object\",\"description\":\"JSON template for a VideoCategoryService.List() response." +
            "\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the response." +
            "\"},\"kind\":{\"type\":\"string\",\"description\":\"The type of this API response.\",\"defau" +
            "lt\":\"youtube#videoCategoryListResponse\"},\"videoCategories\":{\"type\":\"array\",\"desc" +
            "ription\":\"List of video categories matching the request criteria.\",\"items\":{\"$re" +
            "f\":\"VideoCategory\"}}}},\"VideoCategorySnippet\":{\"id\":\"VideoCategorySnippet\",\"type" +
            "\":\"object\",\"description\":\"JSON template for the snippet part of a video category" +
            ".\",\"properties\":{\"channelId\":{\"type\":\"string\",\"description\":\"Channel publishing " +
            "the video category.\",\"default\":\"UCBR8-60-B28hp2BmDPdntcQ\"},\"title\":{\"type\":\"stri" +
            "ng\",\"description\":\"Title of the video category.\"}}},\"VideoContentDetails\":{\"id\":" +
            "\"VideoContentDetails\",\"type\":\"object\",\"description\":\"JSON template for the conte" +
            "nt details part of a video.\",\"properties\":{\"aspectRatio\":{\"type\":\"string\",\"descr" +
            "iption\":\"The aspect ratio of the video.\"},\"duration\":{\"type\":\"string\",\"descripti" +
            "on\":\"Duration of the video.\"}}},\"VideoListResponse\":{\"id\":\"VideoListResponse\",\"t" +
            "ype\":\"object\",\"description\":\"JSON template for a VideoService.List() response.\"," +
            "\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the response.\"}" +
            ",\"kind\":{\"type\":\"string\",\"description\":\"The type of this API response.\",\"default" +
            "\":\"youtube#videoListResponse\"},\"videos\":{\"type\":\"array\",\"description\":\"List of v" +
            "ideos matching the request criteria.\",\"items\":{\"$ref\":\"Video\"}}}},\"VideoPlayer\":" +
            "{\"id\":\"VideoPlayer\",\"type\":\"object\",\"description\":\"JSON template for the player " +
            "part of a video.\",\"properties\":{\"embedHtml\":{\"type\":\"string\",\"description\":\"Ifra" +
            "me embed for the video.\"}}},\"VideoSnippet\":{\"id\":\"VideoSnippet\",\"type\":\"object\"," +
            "\"description\":\"JSON template for the snippet part of a video.\",\"properties\":{\"ca" +
            "tegoryId\":{\"type\":\"string\",\"description\":\"Video category the video belongs to.\"}" +
            ",\"channelId\":{\"type\":\"string\",\"description\":\"Channel publishing the video.\"},\"de" +
            "scription\":{\"type\":\"string\",\"description\":\"Description of the video.\"},\"publishe" +
            "dAt\":{\"type\":\"string\",\"description\":\"Date and time the video was published at.\"," +
            "\"format\":\"date-time\"},\"tags\":{\"type\":\"array\",\"description\":\"Textual tags associa" +
            "ted with the video.\",\"items\":{\"type\":\"string\"}},\"thumbnails\":{\"type\":\"object\",\"d" +
            "escription\":\"Video thumbnails.\",\"additionalProperties\":{\"$ref\":\"Thumbnail\",\"desc" +
            "ription\":\"A map of thumbnails by their name.\"}},\"title\":{\"type\":\"string\",\"descri" +
            "ption\":\"Title of the video.\"}}},\"VideoStatistics\":{\"id\":\"VideoStatistics\",\"type\"" +
            ":\"object\",\"description\":\"JSON template for the statistics part of a video.\",\"pro" +
            "perties\":{\"commentCount\":{\"type\":\"string\",\"description\":\"Number of comments for " +
            "this video.\",\"format\":\"uint64\"},\"dislikeCount\":{\"type\":\"string\",\"description\":\"N" +
            "umber of times the video was disliked.\",\"format\":\"uint64\"},\"favoriteCount\":{\"typ" +
            "e\":\"string\",\"description\":\"Number of times the video was added to a user\'s favor" +
            "ites list.\",\"format\":\"uint64\"},\"likeCount\":{\"type\":\"string\",\"description\":\"Numbe" +
            "r of times the video was liked.\",\"format\":\"uint64\"},\"viewCount\":{\"type\":\"string\"" +
            ",\"description\":\"Number of times the video was viewed.\",\"format\":\"uint64\"}}},\"Vid" +
            "eoStatus\":{\"id\":\"VideoStatus\",\"type\":\"object\",\"description\":\"JSON template for t" +
            "he status part of a video.\",\"properties\":{\"failureReason\":{\"type\":\"string\",\"desc" +
            "ription\":\"Present only if the uploadStatus indicates a failed upload.\"},\"privacy" +
            "Status\":{\"type\":\"string\",\"description\":\"Privacy of the video.\"},\"rejectionReason" +
            "\":{\"type\":\"string\",\"description\":\"Present only if the uploadStatus indicates a r" +
            "ejected upload.\"},\"uploadStatus\":{\"type\":\"string\",\"description\":\"Status of the v" +
            "ideo upload.\"}}}},\"resources\":{\"activities\":{\"methods\":{\"insert\":{\"id\":\"youtube." +
            "activities.insert\",\"path\":\"activities\",\"httpMethod\":\"POST\",\"description\":\"Post a" +
            " channel bulletin.\",\"parameters\":{\"contentOwnerId\":{\"type\":\"string\",\"description" +
            "\":\"The authenticated user acts on behalf of this content owner.\",\"location\":\"que" +
            "ry\"},\"part\":{\"type\":\"string\",\"description\":\"One or more parts to return on the c" +
            "urrent request.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder\":[\"part\"]," +
            "\"request\":{\"$ref\":\"Activity\"},\"response\":{\"$ref\":\"Activity\"},\"scopes\":[\"https://" +
            "www.googleapis.com/auth/youtube\"]},\"list\":{\"id\":\"youtube.activities.list\",\"path\"" +
            ":\"activities\",\"httpMethod\":\"GET\",\"description\":\"Browse the YouTube channel activ" +
            "ity collection.\",\"parameters\":{\"channelId\":{\"type\":\"string\",\"description\":\"YouTu" +
            "be ID of the channel.\",\"location\":\"query\"},\"contentOwnerId\":{\"type\":\"string\",\"de" +
            "scription\":\"The authenticated user acts on behalf of this content owner.\",\"locat" +
            "ion\":\"query\"},\"home\":{\"type\":\"string\",\"description\":\"Flag indicating to return u" +
            "ser\'s homepage feed.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"descri" +
            "ption\":\"Maximum number of results to return\",\"default\":\"5\",\"format\":\"uint32\",\"mi" +
            "nimum\":\"0\",\"maximum\":\"50\",\"location\":\"query\"},\"mine\":{\"type\":\"string\",\"descripti" +
            "on\":\"Flag indicating to return user\'s activities.\",\"location\":\"query\"},\"pageToke" +
            "n\":{\"type\":\"string\",\"description\":\"Token for the page selection.\",\"location\":\"qu" +
            "ery\"},\"part\":{\"type\":\"string\",\"description\":\"One or more parts to return on the " +
            "current request.\",\"required\":true,\"location\":\"query\"},\"publishedAfter\":{\"type\":\"" +
            "string\",\"description\":\"Only return activities published after given date (inclus" +
            "ive).\",\"format\":\"date-time\",\"location\":\"query\"},\"publishedBefore\":{\"type\":\"strin" +
            "g\",\"description\":\"Only return activities published before given date (exclusive)" +
            ".\",\"format\":\"date-time\",\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"response" +
            "\":{\"$ref\":\"ActivityListResponse\"},\"scopes\":[\"https://www.googleapis.com/auth/you" +
            "tube\",\"https://www.googleapis.com/auth/youtube.readonly\"]}}},\"channelCategories\"" +
            ":{\"methods\":{\"list\":{\"id\":\"youtube.channelCategories.list\",\"path\":\"channelCatego" +
            "ries\",\"httpMethod\":\"GET\",\"description\":\"Browse the YouTube guide category collec" +
            "tion.\",\"parameters\":{\"contentOwnerId\":{\"type\":\"string\",\"description\":\"The authen" +
            "ticated user acts on behalf of this content owner.\",\"location\":\"query\"},\"hl\":{\"t" +
            "ype\":\"string\",\"description\":\"Language for the returned channelCategories.\",\"defa" +
            "ult\":\"en-US\",\"location\":\"query\"},\"id\":{\"type\":\"string\",\"description\":\"Comma-sepa" +
            "rated YouTube IDs of the channelCategories to be returned.\",\"location\":\"query\"}," +
            "\"part\":{\"type\":\"string\",\"description\":\"One or more parts to return on the curren" +
            "t request.\",\"required\":true,\"location\":\"query\"},\"regionCode\":{\"type\":\"string\",\"d" +
            "escription\":\"Return the channelCategories in the given region code.\",\"location\":" +
            "\"query\"}},\"parameterOrder\":[\"part\"],\"response\":{\"$ref\":\"ChannelCategoryListRespo" +
            "nse\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapi" +
            "s.com/auth/youtube.readonly\",\"https://www.googleapis.com/auth/youtubepartner\"]}}" +
            "},\"channels\":{\"methods\":{\"list\":{\"id\":\"youtube.channels.list\",\"path\":\"channels\"," +
            "\"httpMethod\":\"GET\",\"description\":\"Browse the YouTube channel collection. Either " +
            "the \'id\' or \'mine\' parameter must be set.\",\"parameters\":{\"categoryId\":{\"type\":\"s" +
            "tring\",\"description\":\"Filter to retrieve the channels within the given category " +
            "ID.\",\"location\":\"query\"},\"contentOwnerId\":{\"type\":\"string\",\"description\":\"The au" +
            "thenticated user acts on behalf of this content owner.\",\"location\":\"query\"},\"id\"" +
            ":{\"type\":\"string\",\"description\":\"YouTube IDs of the channels to be returned.\",\"l" +
            "ocation\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"description\":\"Maximum number o" +
            "f results to return\",\"default\":\"5\",\"format\":\"uint32\",\"minimum\":\"0\",\"maximum\":\"50" +
            "\",\"location\":\"query\"},\"mine\":{\"type\":\"string\",\"description\":\"Filter to only chan" +
            "nels owned by authenticated user.\",\"location\":\"query\"},\"mySubscribers\":{\"type\":\"" +
            "string\",\"description\":\"Filter to channels that subscribed to the channel of the " +
            "authenticated user.\",\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"descripti" +
            "on\":\"Token for the page selection.\",\"location\":\"query\"},\"part\":{\"type\":\"string\"," +
            "\"description\":\"One or more parts to return on the current request.\",\"required\":t" +
            "rue,\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"response\":{\"$ref\":\"ChannelLi" +
            "stResponse\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.go" +
            "ogleapis.com/auth/youtube.readonly\",\"https://www.googleapis.com/auth/youtubepart" +
            "ner\"]}}},\"playlistItems\":{\"methods\":{\"delete\":{\"id\":\"youtube.playlistItems.delet" +
            "e\",\"path\":\"playlistItems\",\"httpMethod\":\"DELETE\",\"description\":\"Deletes playlist " +
            "items by IDs.\",\"parameters\":{\"contentOwnerId\":{\"type\":\"string\",\"description\":\"Th" +
            "e authenticated user acts on behalf of this content owner.\",\"location\":\"query\"}," +
            "\"id\":{\"type\":\"string\",\"description\":\"YouTube IDs of the playlist items to be del" +
            "eted.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder\":[\"id\"],\"scopes\":[\"h" +
            "ttps://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtube" +
            "partner\"]},\"insert\":{\"id\":\"youtube.playlistItems.insert\",\"path\":\"playlistItems\"," +
            "\"httpMethod\":\"POST\",\"description\":\"Insert a resource into a playlist.\",\"paramete" +
            "rs\":{\"contentOwnerId\":{\"type\":\"string\",\"description\":\"The authenticated user act" +
            "s on behalf of this content owner.\",\"location\":\"query\"},\"part\":{\"type\":\"string\"," +
            "\"description\":\"One or more parts to return on the current request.\",\"required\":t" +
            "rue,\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"request\":{\"$ref\":\"PlaylistIt" +
            "em\"},\"response\":{\"$ref\":\"PlaylistItem\"},\"scopes\":[\"https://www.googleapis.com/au" +
            "th/youtube\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"list\":{\"id\":\"you" +
            "tube.playlistItems.list\",\"path\":\"playlistItems\",\"httpMethod\":\"GET\",\"description\"" +
            ":\"Browse the YouTube playlist collection.\",\"parameters\":{\"contentOwnerId\":{\"type" +
            "\":\"string\",\"description\":\"The authenticated user acts on behalf of this content " +
            "owner.\",\"location\":\"query\"},\"id\":{\"type\":\"string\",\"description\":\"YouTube IDs of " +
            "the playlist items to be returned.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"in" +
            "teger\",\"description\":\"Maximum number of results to return\",\"default\":\"5\",\"format" +
            "\":\"uint32\",\"minimum\":\"0\",\"maximum\":\"50\",\"location\":\"query\"},\"pageToken\":{\"type\":" +
            "\"string\",\"description\":\"Token for the page selection.\",\"location\":\"query\"},\"part" +
            "\":{\"type\":\"string\",\"description\":\"One or more parts to return on the current req" +
            "uest.\",\"required\":true,\"location\":\"query\"},\"playlistId\":{\"type\":\"string\",\"descri" +
            "ption\":\"Retrieves playlist items from the given playlist id.\",\"location\":\"query\"" +
            "}},\"parameterOrder\":[\"part\"],\"response\":{\"$ref\":\"PlaylistItemListResponse\"},\"sco" +
            "pes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth" +
            "/youtube.readonly\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"update\":{" +
            "\"id\":\"youtube.playlistItems.update\",\"path\":\"playlistItems\",\"httpMethod\":\"PUT\",\"d" +
            "escription\":\"Update a playlist item.\",\"parameters\":{\"contentOwnerId\":{\"type\":\"st" +
            "ring\",\"description\":\"The authenticated user acts on behalf of this content owner" +
            ".\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"One or more parts " +
            "to return on the current request.\",\"required\":true,\"location\":\"query\"}},\"paramet" +
            "erOrder\":[\"part\"],\"request\":{\"$ref\":\"PlaylistItem\"},\"response\":{\"$ref\":\"Playlist" +
            "Item\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleap" +
            "is.com/auth/youtubepartner\"]}}},\"playlists\":{\"methods\":{\"delete\":{\"id\":\"youtube." +
            "playlists.delete\",\"path\":\"playlists\",\"httpMethod\":\"DELETE\",\"description\":\"Delete" +
            "s playlists by IDs.\",\"parameters\":{\"contentOwnerId\":{\"type\":\"string\",\"descriptio" +
            "n\":\"The authenticated user acts on behalf of this content owner.\",\"location\":\"qu" +
            "ery\"},\"id\":{\"type\":\"string\",\"description\":\"YouTube IDs of the playlists to be de" +
            "leted.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder\":[\"id\"],\"scopes\":[\"" +
            "https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtub" +
            "epartner\"]},\"insert\":{\"id\":\"youtube.playlists.insert\",\"path\":\"playlists\",\"httpMe" +
            "thod\":\"POST\",\"description\":\"Create a playlist.\",\"parameters\":{\"contentOwnerId\":{" +
            "\"type\":\"string\",\"description\":\"The authenticated user acts on behalf of this con" +
            "tent owner.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"One or m" +
            "ore parts to return on the current request.\",\"required\":true,\"location\":\"query\"}" +
            "},\"parameterOrder\":[\"part\"],\"request\":{\"$ref\":\"Playlist\"},\"response\":{\"$ref\":\"Pl" +
            "aylist\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.google" +
            "apis.com/auth/youtubepartner\"]},\"list\":{\"id\":\"youtube.playlists.list\",\"path\":\"pl" +
            "aylists\",\"httpMethod\":\"GET\",\"description\":\"Browse the YouTube playlist collectio" +
            "n.\",\"parameters\":{\"contentOwnerId\":{\"type\":\"string\",\"description\":\"The authentic" +
            "ated user acts on behalf of this content owner.\",\"location\":\"query\"},\"id\":{\"type" +
            "\":\"string\",\"description\":\"Comma-separated YouTube IDs of the playlists to be ret" +
            "urned.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"description\":\"Maximu" +
            "m number of results to return\",\"default\":\"5\",\"format\":\"uint32\",\"minimum\":\"0\",\"ma" +
            "ximum\":\"50\",\"location\":\"query\"},\"mine\":{\"type\":\"string\",\"description\":\"Flag indi" +
            "cating only return the playlists of the authenticated user.\",\"location\":\"query\"}" +
            ",\"pageToken\":{\"type\":\"string\",\"description\":\"Token for the page selection.\",\"loc" +
            "ation\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"One or more parts to retu" +
            "rn on the current request.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder" +
            "\":[\"part\"],\"response\":{\"$ref\":\"PlaylistListResponse\"},\"scopes\":[\"https://www.goo" +
            "gleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtube.readonly\",\"ht" +
            "tps://www.googleapis.com/auth/youtubepartner\"]},\"update\":{\"id\":\"youtube.playlist" +
            "s.update\",\"path\":\"playlists\",\"httpMethod\":\"PUT\",\"description\":\"Update a playlist" +
            ".\",\"parameters\":{\"contentOwnerId\":{\"type\":\"string\",\"description\":\"The authentica" +
            "ted user acts on behalf of this content owner.\",\"location\":\"query\"},\"part\":{\"typ" +
            "e\":\"string\",\"description\":\"One or more parts to return on the current request.\"," +
            "\"required\":true,\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"request\":{\"$ref\"" +
            ":\"Playlist\"},\"response\":{\"$ref\":\"Playlist\"},\"scopes\":[\"https://www.googleapis.co" +
            "m/auth/youtube\",\"https://www.googleapis.com/auth/youtubepartner\"]}}},\"search\":{\"" +
            "methods\":{\"list\":{\"id\":\"youtube.search.list\",\"path\":\"search\",\"httpMethod\":\"GET\"," +
            "\"description\":\"Universal search for youtube.\",\"parameters\":{\"contentOwnerId\":{\"t" +
            "ype\":\"string\",\"description\":\"The authenticated user acts on behalf of this conte" +
            "nt owner.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"description\":\"Max" +
            "imum number of search results to return per page.\",\"default\":\"5\",\"format\":\"uint3" +
            "2\",\"minimum\":\"0\",\"maximum\":\"50\",\"location\":\"query\"},\"order\":{\"type\":\"string\",\"de" +
            "scription\":\"Sort order.\",\"default\":\"relevance\",\"enum\":[\"date\",\"rating\",\"relevanc" +
            "e\",\"view_count\"],\"enumDescriptions\":[\"Sort according to the date.\",\"Sort accordi" +
            "ng to the rating.\",\"Sort according to the relevance.\",\"Sort according to the vie" +
            "w count.\"],\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"description\":\"Token" +
            " for the page selection.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"descripti" +
            "on\":\"One or more parts to return on the current request.\",\"required\":true,\"locat" +
            "ion\":\"query\"},\"published\":{\"type\":\"string\",\"description\":\"Only search for resour" +
            "ces uploaded at a specific pediod\",\"enum\":[\"any\",\"thisWeek\",\"today\"],\"enumDescri" +
            "ptions\":[\"No filter on the release date\",\"Videos uploaded this month\",\"Videos up" +
            "loaded today\"],\"location\":\"query\"},\"q\":{\"type\":\"string\",\"description\":\"Query to " +
            "search in Youtube.\",\"location\":\"query\"},\"relatedToVideo\":{\"type\":\"string\",\"descr" +
            "iption\":\"Search for resources related to this video. Need to be used with type s" +
            "et to \'video\'\",\"location\":\"query\"},\"topicId\":{\"type\":\"string\",\"description\":\"Onl" +
            "y search for resources with the specified topic\",\"location\":\"query\"},\"type\":{\"ty" +
            "pe\":\"string\",\"description\":\"Type of resource to search.\",\"enum\":[\"channel\",\"play" +
            "list\",\"video\"],\"enumDescriptions\":[\"Search for channels.\",\"Search for playlists." +
            "\",\"Search for videos.\"],\"repeated\":true,\"location\":\"query\"},\"videoCaption\":{\"typ" +
            "e\":\"string\",\"description\":\"Add a filter on the the presence of captions on the v" +
            "ideos.\",\"enum\":[\"any\",\"closedCaption\",\"none\"],\"enumDescriptions\":[\"No filter on " +
            "the captions.\",\"Videos with closed captions.\",\"Videos without captions.\"],\"locat" +
            "ion\":\"query\"},\"videoDefinition\":{\"type\":\"string\",\"description\":\"Add a filter for" +
            " the definition of the videos.\",\"enum\":[\"any\",\"high\",\"standard\"],\"enumDescriptio" +
            "ns\":[\"No filter on the definition.\",\"Videos in high definition.\",\"Videos in stan" +
            "dard definition.\"],\"location\":\"query\"},\"videoDimension\":{\"type\":\"string\",\"descri" +
            "ption\":\"Add a filter for the number of dimensions in the videos.\",\"enum\":[\"2d\",\"" +
            "3d\",\"any\"],\"enumDescriptions\":[\"Videos in two dimensions.\",\"Videos in three dime" +
            "nsions.\",\"No filter on the dimension.\"],\"location\":\"query\"},\"videoDuration\":{\"ty" +
            "pe\":\"string\",\"description\":\"Add a filter on the duration of the videos.\",\"enum\":" +
            "[\"any\",\"long\",\"medium\",\"short\"],\"enumDescriptions\":[\"No filter on the duration.\"" +
            ",\"Videos with a duration longer than 20 minutes.\",\"Videos with a duration betwee" +
            "n 4 and 20 minutes.\",\"Videos with a duration under 4 minutes.\"],\"location\":\"quer" +
            "y\"},\"videoLicense\":{\"type\":\"string\",\"description\":\"Add a filter on the licensing" +
            " of the videos.\",\"enum\":[\"any\",\"creativeCommon\",\"youtube\"],\"enumDescriptions\":[\"" +
            "No filter on the license.\",\"Videos under the Creative Common license.\",\"Videos u" +
            "nder the YouTube license.\"],\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"resp" +
            "onse\":{\"$ref\":\"SearchListResponse\"},\"scopes\":[\"https://www.googleapis.com/auth/y" +
            "outube\",\"https://www.googleapis.com/auth/youtube.readonly\",\"https://www.googleap" +
            "is.com/auth/youtubepartner\"]}}},\"subscription\":{\"methods\":{\"delete\":{\"id\":\"youtu" +
            "be.subscription.delete\",\"path\":\"subscriptions\",\"httpMethod\":\"DELETE\",\"descriptio" +
            "n\":\"Deletes subscriptions by IDs.\",\"parameters\":{\"contentOwnerId\":{\"type\":\"strin" +
            "g\",\"description\":\"The authenticated user acts on behalf of this content owner.\"," +
            "\"location\":\"query\"},\"id\":{\"type\":\"string\",\"description\":\"YouTube IDs of the subs" +
            "cription to be deleted.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder\":[" +
            "\"id\"],\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapi" +
            "s.com/auth/youtubepartner\"]},\"insert\":{\"id\":\"youtube.subscription.insert\",\"path\"" +
            ":\"subscriptions\",\"httpMethod\":\"POST\",\"description\":\"Insert a subscription.\",\"par" +
            "ameters\":{\"contentOwnerId\":{\"type\":\"string\",\"description\":\"The authenticated use" +
            "r acts on behalf of this content owner.\",\"location\":\"query\"},\"part\":{\"type\":\"str" +
            "ing\",\"description\":\"One or more parts to return on the current request.\",\"requir" +
            "ed\":true,\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"request\":{\"$ref\":\"Subsc" +
            "ription\"},\"response\":{\"$ref\":\"Subscription\"},\"scopes\":[\"https://www.googleapis.c" +
            "om/auth/youtube\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"list\":{\"id\"" +
            ":\"youtube.subscription.list\",\"path\":\"subscriptions\",\"httpMethod\":\"GET\",\"descript" +
            "ion\":\"Browse user\'s subscription collection.\",\"parameters\":{\"channelId\":{\"type\":" +
            "\"string\",\"description\":\"Only return subscriptions to given channelId.\",\"location" +
            "\":\"query\"},\"contentOwnerId\":{\"type\":\"string\",\"description\":\"The authenticated us" +
            "er acts on behalf of this content owner.\",\"location\":\"query\"},\"forChannelId\":{\"t" +
            "ype\":\"string\",\"description\":\"Takes a comma separated list of channel IDs. Filter" +
            "s the returned list to only those matching these channels\",\"location\":\"query\"},\"" +
            "id\":{\"type\":\"string\",\"description\":\"YouTube IDs of the subscriptions to be retur" +
            "ned.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"description\":\"Maximum " +
            "number of search results to return per page.\",\"default\":\"5\",\"format\":\"uint32\",\"m" +
            "inimum\":\"0\",\"maximum\":\"50\",\"location\":\"query\"},\"mine\":{\"type\":\"string\",\"descript" +
            "ion\":\"Flag indicating only return the subscriptions of the authenticated user.\"," +
            "\"location\":\"query\"},\"order\":{\"type\":\"string\",\"description\":\"Sort order.\",\"defaul" +
            "t\":\"SUBSCRIPTION_ORDER_RELEVANCE\",\"enum\":[\"alphabetical\",\"relevance\",\"unread\"],\"" +
            "enumDescriptions\":[\"Sort alphabetically\",\"Sort by relevance.\",\"Sort by order of " +
            "activity.\"],\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"description\":\"Toke" +
            "n for the page selection.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"descript" +
            "ion\":\"One or more parts to return on the current request.\",\"required\":true,\"loca" +
            "tion\":\"query\"}},\"parameterOrder\":[\"part\"],\"response\":{\"$ref\":\"SubscriptionListRe" +
            "sponse\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.google" +
            "apis.com/auth/youtubepartner\"]}}},\"videocategory\":{\"methods\":{\"list\":{\"id\":\"yout" +
            "ube.videocategory.list\",\"path\":\"videoCategories\",\"httpMethod\":\"GET\",\"description" +
            "\":\"Browse list of video categories.\",\"parameters\":{\"contentOwnerId\":{\"type\":\"str" +
            "ing\",\"description\":\"The authenticated user acts on behalf of this content owner." +
            "\",\"location\":\"query\"},\"hl\":{\"type\":\"string\",\"description\":\"Language used for the" +
            " title of the categories.\",\"default\":\"en_US\",\"location\":\"query\"},\"id\":{\"type\":\"s" +
            "tring\",\"description\":\"IDs of the categories to be returned.\",\"location\":\"query\"}" +
            ",\"part\":{\"type\":\"string\",\"description\":\"One or more parts to return on the curre" +
            "nt request.\",\"required\":true,\"location\":\"query\"},\"regionCode\":{\"type\":\"string\",\"" +
            "description\":\"Return all the categories in this region.\",\"location\":\"query\"}},\"p" +
            "arameterOrder\":[\"part\"],\"response\":{\"$ref\":\"VideoCategoryListResponse\"},\"scopes\"" +
            ":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/you" +
            "tube.readonly\",\"https://www.googleapis.com/auth/youtubepartner\"]}}},\"videos\":{\"m" +
            "ethods\":{\"delete\":{\"id\":\"youtube.videos.delete\",\"path\":\"videos\",\"httpMethod\":\"DE" +
            "LETE\",\"description\":\"Delete a YouTube video.\",\"parameters\":{\"contentOwnerId\":{\"t" +
            "ype\":\"string\",\"description\":\"The authenticated user acts on behalf of this conte" +
            "nt owner.\",\"location\":\"query\"},\"id\":{\"type\":\"string\",\"description\":\"YouTube ID o" +
            "f the video to be deleted.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder" +
            "\":[\"id\"],\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.google" +
            "apis.com/auth/youtubepartner\"]},\"insert\":{\"id\":\"youtube.videos.insert\",\"path\":\"v" +
            "ideos\",\"httpMethod\":\"POST\",\"description\":\"Upload a video to YouTube.\",\"parameter" +
            "s\":{\"contentOwnerId\":{\"type\":\"string\",\"description\":\"The authenticated user acts" +
            " on behalf of this content owner.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"" +
            "description\":\"One or more parts to return on the current request.\",\"required\":tr" +
            "ue,\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"request\":{\"$ref\":\"Video\"},\"re" +
            "sponse\":{\"$ref\":\"Video\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"ht" +
            "tps://www.googleapis.com/auth/youtube.upload\"],\"supportsMediaUpload\":true,\"media" +
            "Upload\":{\"accept\":[\"application/octet-stream\",\"video/*\"],\"maxSize\":\"64GB\",\"proto" +
            "cols\":{\"simple\":{\"multipart\":true,\"path\":\"/upload/youtube/v3/videos\"},\"resumable" +
            "\":{\"multipart\":true,\"path\":\"/resumable/upload/youtube/v3/videos\"}}}},\"list\":{\"id" +
            "\":\"youtube.videos.list\",\"path\":\"videos\",\"httpMethod\":\"GET\",\"description\":\"Browse" +
            " the YouTube video collection.\",\"parameters\":{\"contentOwnerId\":{\"type\":\"string\"," +
            "\"description\":\"The authenticated user acts on behalf of this content owner.\",\"lo" +
            "cation\":\"query\"},\"id\":{\"type\":\"string\",\"description\":\"YouTube IDs of the videos " +
            "to be returned.\",\"required\":true,\"location\":\"query\"},\"part\":{\"type\":\"string\",\"de" +
            "scription\":\"One or more parts to return on the current request.\",\"required\":true" +
            ",\"location\":\"query\"}},\"parameterOrder\":[\"id\",\"part\"],\"response\":{\"$ref\":\"VideoLi" +
            "stResponse\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.go" +
            "ogleapis.com/auth/youtube.readonly\",\"https://www.googleapis.com/auth/youtubepart" +
            "ner\"]},\"update\":{\"id\":\"youtube.videos.update\",\"path\":\"videos\",\"httpMethod\":\"PUT\"" +
            ",\"description\":\"Update a video.\",\"parameters\":{\"contentOwnerId\":{\"type\":\"string\"" +
            ",\"description\":\"The authenticated user acts on behalf of this content owner.\",\"l" +
            "ocation\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"One or more parts to re" +
            "turn on the current request.\",\"required\":true,\"location\":\"query\"}},\"parameterOrd" +
            "er\":[\"part\"],\"request\":{\"$ref\":\"Video\"},\"response\":{\"$ref\":\"Video\"},\"scopes\":[\"h" +
            "ttps://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtube" +
            "partner\"]}}}}}";
        
        public const string Version = "v3";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string _Key;
        
        protected YoutubeService(Google.Apis.Discovery.IService _service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this._service = _service;
            this._authenticator = _authenticator;
            this._activities = new ActivitiesResource(this, _authenticator);
            this._channelCategories = new ChannelCategoriesResource(this, _authenticator);
            this._channels = new ChannelsResource(this, _authenticator);
            this._playlistItems = new PlaylistItemsResource(this, _authenticator);
            this._playlists = new PlaylistsResource(this, _authenticator);
            this._search = new SearchResource(this, _authenticator);
            this._subscription = new SubscriptionResource(this, _authenticator);
            this._videocategory = new VideocategoryResource(this, _authenticator);
            this._videos = new VideosResource(this, _authenticator);
        }
        
        public YoutubeService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public YoutubeService(Google.Apis.Authentication.IAuthenticator _authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(YoutubeService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameters(new System.Uri("https://www.googleapis.com/youtube/v3/"))), _authenticator) {
        }
        
        public Google.Apis.Authentication.IAuthenticator Authenticator {
            get {
                return this._authenticator;
            }
        }
        
        public virtual string Name {
            get {
                return "youtube";
            }
        }
        
        public virtual string BaseUri {
            get {
                return "https://www.googleapis.com/youtube/v3/";
            }
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this._Key;
            }
            set {
                this._Key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this._service.CreateRequest(resource, method);
            if ((string.IsNullOrEmpty(Key) == false)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(_authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            _service.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return _service.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return _service.DeserializeResponse<T>(response);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>Manage your YouTube account</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtube")]
            Youtube,
            
            /// <summary>View your YouTube account</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtube.readonly")]
            YoutubeReadonly,
            
            /// <summary>Manage your YouTube videos</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtube.upload")]
            YoutubeUpload,
            
            /// <summary>View and manage your assets and associated content on YouTube</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtubepartner")]
            Youtubepartner,
        }
    }
    
    public class ActivitiesResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "activities";
        
        public ActivitiesResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Post a channel bulletin.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.Activity body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Browse the YouTube channel activity collection.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Activity> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Activity _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Activity body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Activity Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activities";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.ActivityListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _channelId;
            
            private string _contentOwnerId;
            
            private string _home;
            
            private System.Nullable<long> _maxResults;
            
            private string _mine;
            
            private string _pageToken;
            
            private string _part;
            
            private string _publishedAfter;
            
            private string _publishedBefore;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>YouTube ID of the channel.</summary>
            [Google.Apis.Util.RequestParameterAttribute("channelId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ChannelId {
                get {
                    return this._channelId;
                }
                set {
                    this._channelId = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>Flag indicating to return user's homepage feed.</summary>
            [Google.Apis.Util.RequestParameterAttribute("home", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Home {
                get {
                    return this._home;
                }
                set {
                    this._home = value;
                }
            }
            
            /// <summary>Maximum number of results to return</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Flag indicating to return user's activities.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Mine {
                get {
                    return this._mine;
                }
                set {
                    this._mine = value;
                }
            }
            
            /// <summary>Token for the page selection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Only return activities published after given date (inclusive).</summary>
            [Google.Apis.Util.RequestParameterAttribute("publishedAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PublishedAfter {
                get {
                    return this._publishedAfter;
                }
                set {
                    this._publishedAfter = value;
                }
            }
            
            /// <summary>Only return activities published before given date (exclusive).</summary>
            [Google.Apis.Util.RequestParameterAttribute("publishedBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PublishedBefore {
                get {
                    return this._publishedBefore;
                }
                set {
                    this._publishedBefore = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activities";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class ChannelCategoriesResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "channelCategories";
        
        public ChannelCategoriesResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Browse the YouTube guide category collection.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.ChannelCategoryListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _hl;
            
            private string _id;
            
            private string _part;
            
            private string _regionCode;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>Language for the returned channelCategories.</summary>
            [Google.Apis.Util.RequestParameterAttribute("hl", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Hl {
                get {
                    return this._hl;
                }
                set {
                    this._hl = value;
                }
            }
            
            /// <summary>Comma-separated YouTube IDs of the channelCategories to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Return the channelCategories in the given region code.</summary>
            [Google.Apis.Util.RequestParameterAttribute("regionCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RegionCode {
                get {
                    return this._regionCode;
                }
                set {
                    this._regionCode = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "channelCategories";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class ChannelsResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "channels";
        
        public ChannelsResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Browse the YouTube channel collection. Either the &apos;id&apos; or &apos;mine&apos; parameter must be set.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.ChannelListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _categoryId;
            
            private string _contentOwnerId;
            
            private string _id;
            
            private System.Nullable<long> _maxResults;
            
            private string _mine;
            
            private string _mySubscribers;
            
            private string _pageToken;
            
            private string _part;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Filter to retrieve the channels within the given category ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("categoryId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CategoryId {
                get {
                    return this._categoryId;
                }
                set {
                    this._categoryId = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>YouTube IDs of the channels to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>Maximum number of results to return</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Filter to only channels owned by authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Mine {
                get {
                    return this._mine;
                }
                set {
                    this._mine = value;
                }
            }
            
            /// <summary>Filter to channels that subscribed to the channel of the authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mySubscribers", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MySubscribers {
                get {
                    return this._mySubscribers;
                }
                set {
                    this._mySubscribers = value;
                }
            }
            
            /// <summary>Token for the page selection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "channels";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class PlaylistItemsResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "playlistItems";
        
        public PlaylistItemsResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Deletes playlist items by IDs.</summary>
        /// <param name="id">Required - YouTube IDs of the playlist items to be deleted.</param>
        public virtual DeleteRequest Delete(string id) {
            return new DeleteRequest(service, id);
        }
        
        /// <summary>Insert a resource into a playlist.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.PlaylistItem body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Browse the YouTube playlist collection.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        /// <summary>Update a playlist item.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual UpdateRequest Update(Google.Apis.Youtube.v3.Data.PlaylistItem body, string part) {
            return new UpdateRequest(service, body, part);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _id;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>YouTube IDs of the playlist items to be deleted.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlistItems";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.PlaylistItem> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.PlaylistItem _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.PlaylistItem body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.PlaylistItem Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlistItems";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.PlaylistItemListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _id;
            
            private System.Nullable<long> _maxResults;
            
            private string _pageToken;
            
            private string _part;
            
            private string _playlistId;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>YouTube IDs of the playlist items to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>Maximum number of results to return</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Token for the page selection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Retrieves playlist items from the given playlist id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("playlistId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PlaylistId {
                get {
                    return this._playlistId;
                }
                set {
                    this._playlistId = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlistItems";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.PlaylistItem> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.PlaylistItem _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.PlaylistItem body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.PlaylistItem Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlistItems";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class PlaylistsResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "playlists";
        
        public PlaylistsResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Deletes playlists by IDs.</summary>
        /// <param name="id">Required - YouTube IDs of the playlists to be deleted.</param>
        public virtual DeleteRequest Delete(string id) {
            return new DeleteRequest(service, id);
        }
        
        /// <summary>Create a playlist.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.Playlist body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Browse the YouTube playlist collection.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        /// <summary>Update a playlist.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual UpdateRequest Update(Google.Apis.Youtube.v3.Data.Playlist body, string part) {
            return new UpdateRequest(service, body, part);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _id;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>YouTube IDs of the playlists to be deleted.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlists";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Playlist> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Playlist _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Playlist body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Playlist Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlists";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.PlaylistListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _id;
            
            private System.Nullable<long> _maxResults;
            
            private string _mine;
            
            private string _pageToken;
            
            private string _part;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>Comma-separated YouTube IDs of the playlists to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>Maximum number of results to return</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Flag indicating only return the playlists of the authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Mine {
                get {
                    return this._mine;
                }
                set {
                    this._mine = value;
                }
            }
            
            /// <summary>Token for the page selection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlists";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Playlist> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Playlist _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Playlist body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Playlist Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlists";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class SearchResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "search";
        
        public SearchResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Universal search for youtube.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        /// <summary>Sort order.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Order {
            
            /// <summary>Sort according to the date.</summary>
            [Google.Apis.Util.StringValueAttribute("date")]
            Date,
            
            /// <summary>Sort according to the rating.</summary>
            [Google.Apis.Util.StringValueAttribute("rating")]
            Rating,
            
            /// <summary>Sort according to the relevance.</summary>
            [Google.Apis.Util.StringValueAttribute("relevance")]
            Relevance,
            
            /// <summary>Sort according to the view count.</summary>
            [Google.Apis.Util.StringValueAttribute("view_count")]
            View_count,
        }
        
        /// <summary>Only search for resources uploaded at a specific pediod</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Published {
            
            /// <summary>No filter on the release date</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Videos uploaded this month</summary>
            [Google.Apis.Util.StringValueAttribute("thisWeek")]
            ThisWeek,
            
            /// <summary>Videos uploaded today</summary>
            [Google.Apis.Util.StringValueAttribute("today")]
            Today,
        }
        
        /// <summary>Type of resource to search.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Type {
            
            /// <summary>Search for channels.</summary>
            [Google.Apis.Util.StringValueAttribute("channel")]
            Channel,
            
            /// <summary>Search for playlists.</summary>
            [Google.Apis.Util.StringValueAttribute("playlist")]
            Playlist,
            
            /// <summary>Search for videos.</summary>
            [Google.Apis.Util.StringValueAttribute("video")]
            Video,
        }
        
        /// <summary>Add a filter on the the presence of captions on the videos.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoCaption {
            
            /// <summary>No filter on the captions.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Videos with closed captions.</summary>
            [Google.Apis.Util.StringValueAttribute("closedCaption")]
            ClosedCaption,
            
            /// <summary>Videos without captions.</summary>
            [Google.Apis.Util.StringValueAttribute("none")]
            None,
        }
        
        /// <summary>Add a filter for the definition of the videos.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoDefinition {
            
            /// <summary>No filter on the definition.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Videos in high definition.</summary>
            [Google.Apis.Util.StringValueAttribute("high")]
            High,
            
            /// <summary>Videos in standard definition.</summary>
            [Google.Apis.Util.StringValueAttribute("standard")]
            Standard,
        }
        
        /// <summary>Add a filter for the number of dimensions in the videos.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoDimension {
            
            /// <summary>Videos in two dimensions.</summary>
            [Google.Apis.Util.StringValueAttribute("2d")]
            D,
            
            /// <summary>Videos in three dimensions.</summary>
            [Google.Apis.Util.StringValueAttribute("3d")]
            DValue,
            
            /// <summary>No filter on the dimension.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
        }
        
        /// <summary>Add a filter on the duration of the videos.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoDuration {
            
            /// <summary>No filter on the duration.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Videos with a duration longer than 20 minutes.</summary>
            [Google.Apis.Util.StringValueAttribute("long")]
            Long,
            
            /// <summary>Videos with a duration between 4 and 20 minutes.</summary>
            [Google.Apis.Util.StringValueAttribute("medium")]
            Medium,
            
            /// <summary>Videos with a duration under 4 minutes.</summary>
            [Google.Apis.Util.StringValueAttribute("short")]
            Short,
        }
        
        /// <summary>Add a filter on the licensing of the videos.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoLicense {
            
            /// <summary>No filter on the license.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Videos under the Creative Common license.</summary>
            [Google.Apis.Util.StringValueAttribute("creativeCommon")]
            CreativeCommon,
            
            /// <summary>Videos under the YouTube license.</summary>
            [Google.Apis.Util.StringValueAttribute("youtube")]
            Youtube,
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.SearchListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private System.Nullable<long> _maxResults;
            
            private System.Nullable<Order> _order;
            
            private string _pageToken;
            
            private string _part;
            
            private System.Nullable<Published> _published;
            
            private string _q;
            
            private string _relatedToVideo;
            
            private string _topicId;
            
            private System.Nullable<Type> _type;
            
            private System.Nullable<VideoCaption> _videoCaption;
            
            private System.Nullable<VideoDefinition> _videoDefinition;
            
            private System.Nullable<VideoDimension> _videoDimension;
            
            private System.Nullable<VideoDuration> _videoDuration;
            
            private System.Nullable<VideoLicense> _videoLicense;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>Maximum number of search results to return per page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Sort order.</summary>
            [Google.Apis.Util.RequestParameterAttribute("order", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Order> Order {
                get {
                    return this._order;
                }
                set {
                    this._order = value;
                }
            }
            
            /// <summary>Token for the page selection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Only search for resources uploaded at a specific pediod</summary>
            [Google.Apis.Util.RequestParameterAttribute("published", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Published> Published {
                get {
                    return this._published;
                }
                set {
                    this._published = value;
                }
            }
            
            /// <summary>Query to search in Youtube.</summary>
            [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Q {
                get {
                    return this._q;
                }
                set {
                    this._q = value;
                }
            }
            
            /// <summary>Search for resources related to this video. Need to be used with type set to 'video'</summary>
            [Google.Apis.Util.RequestParameterAttribute("relatedToVideo", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RelatedToVideo {
                get {
                    return this._relatedToVideo;
                }
                set {
                    this._relatedToVideo = value;
                }
            }
            
            /// <summary>Only search for resources with the specified topic</summary>
            [Google.Apis.Util.RequestParameterAttribute("topicId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string TopicId {
                get {
                    return this._topicId;
                }
                set {
                    this._topicId = value;
                }
            }
            
            /// <summary>Type of resource to search.</summary>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Type> Type {
                get {
                    return this._type;
                }
                set {
                    this._type = value;
                }
            }
            
            /// <summary>Add a filter on the the presence of captions on the videos.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoCaption", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoCaption> VideoCaption {
                get {
                    return this._videoCaption;
                }
                set {
                    this._videoCaption = value;
                }
            }
            
            /// <summary>Add a filter for the definition of the videos.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoDefinition", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoDefinition> VideoDefinition {
                get {
                    return this._videoDefinition;
                }
                set {
                    this._videoDefinition = value;
                }
            }
            
            /// <summary>Add a filter for the number of dimensions in the videos.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoDimension", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoDimension> VideoDimension {
                get {
                    return this._videoDimension;
                }
                set {
                    this._videoDimension = value;
                }
            }
            
            /// <summary>Add a filter on the duration of the videos.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoDuration", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoDuration> VideoDuration {
                get {
                    return this._videoDuration;
                }
                set {
                    this._videoDuration = value;
                }
            }
            
            /// <summary>Add a filter on the licensing of the videos.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoLicense", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoLicense> VideoLicense {
                get {
                    return this._videoLicense;
                }
                set {
                    this._videoLicense = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "search";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class SubscriptionResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "subscription";
        
        public SubscriptionResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Deletes subscriptions by IDs.</summary>
        /// <param name="id">Required - YouTube IDs of the subscription to be deleted.</param>
        public virtual DeleteRequest Delete(string id) {
            return new DeleteRequest(service, id);
        }
        
        /// <summary>Insert a subscription.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.Subscription body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Browse user&apos;s subscription collection.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        /// <summary>Sort order.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Order {
            
            /// <summary>Sort alphabetically</summary>
            [Google.Apis.Util.StringValueAttribute("alphabetical")]
            Alphabetical,
            
            /// <summary>Sort by relevance.</summary>
            [Google.Apis.Util.StringValueAttribute("relevance")]
            Relevance,
            
            /// <summary>Sort by order of activity.</summary>
            [Google.Apis.Util.StringValueAttribute("unread")]
            Unread,
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _id;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>YouTube IDs of the subscription to be deleted.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "subscription";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Subscription> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Subscription _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Subscription body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Subscription Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "subscription";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.SubscriptionListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _channelId;
            
            private string _contentOwnerId;
            
            private string _forChannelId;
            
            private string _id;
            
            private System.Nullable<long> _maxResults;
            
            private string _mine;
            
            private System.Nullable<Order> _order;
            
            private string _pageToken;
            
            private string _part;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Only return subscriptions to given channelId.</summary>
            [Google.Apis.Util.RequestParameterAttribute("channelId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ChannelId {
                get {
                    return this._channelId;
                }
                set {
                    this._channelId = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>Takes a comma separated list of channel IDs. Filters the returned list to only those matching these channels</summary>
            [Google.Apis.Util.RequestParameterAttribute("forChannelId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ForChannelId {
                get {
                    return this._forChannelId;
                }
                set {
                    this._forChannelId = value;
                }
            }
            
            /// <summary>YouTube IDs of the subscriptions to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>Maximum number of search results to return per page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Flag indicating only return the subscriptions of the authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Mine {
                get {
                    return this._mine;
                }
                set {
                    this._mine = value;
                }
            }
            
            /// <summary>Sort order.</summary>
            [Google.Apis.Util.RequestParameterAttribute("order", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Order> Order {
                get {
                    return this._order;
                }
                set {
                    this._order = value;
                }
            }
            
            /// <summary>Token for the page selection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "subscription";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class VideocategoryResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "videocategory";
        
        public VideocategoryResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Browse list of video categories.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.VideoCategoryListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _hl;
            
            private string _id;
            
            private string _part;
            
            private string _regionCode;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>Language used for the title of the categories.</summary>
            [Google.Apis.Util.RequestParameterAttribute("hl", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Hl {
                get {
                    return this._hl;
                }
                set {
                    this._hl = value;
                }
            }
            
            /// <summary>IDs of the categories to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Return all the categories in this region.</summary>
            [Google.Apis.Util.RequestParameterAttribute("regionCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RegionCode {
                get {
                    return this._regionCode;
                }
                set {
                    this._regionCode = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videocategory";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class VideosResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "videos";
        
        public VideosResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Delete a YouTube video.</summary>
        /// <param name="id">Required - YouTube ID of the video to be deleted.</param>
        public virtual DeleteRequest Delete(string id) {
            return new DeleteRequest(service, id);
        }
        
        /// <summary>Upload a video to YouTube.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.Video body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Upload a video to YouTube.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual InsertMediaUpload Insert(Google.Apis.Youtube.v3.Data.Video body, string part, System.IO.Stream stream, string contentType) {
            return new InsertMediaUpload(service, body, part, stream, contentType);
        }
        
        /// <summary>Browse the YouTube video collection.</summary>
        /// <param name="id">Required - YouTube IDs of the videos to be returned.</param>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual ListRequest List(string id, string part) {
            return new ListRequest(service, id, part);
        }
        
        /// <summary>Update a video.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual UpdateRequest Update(Google.Apis.Youtube.v3.Data.Video body, string part) {
            return new UpdateRequest(service, body, part);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _id;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>YouTube ID of the video to be deleted.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videos";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Video> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Video _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Video body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Video Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videos";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class InsertMediaUpload : Google.Apis.Upload.ResumableUpload<Google.Apis.Youtube.v3.Data.Video, Google.Apis.Youtube.v3.Data.Video> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _part;
            
            public InsertMediaUpload(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Video body, string part, System.IO.Stream stream, string contentType) : 
                    base(service.BaseUri, "/upload/youtube/v3/videos", "POST", stream, contentType) {
                this.Body = body;
                this.Authenticator = service.Authenticator;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.VideoListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _id;
            
            private string _part;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string id, string part) : 
                    base(service) {
                this._id = id;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>YouTube IDs of the videos to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videos";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Video> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Video _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Video body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
                set {
                    this._contentOwnerId = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Video Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videos";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public partial class YoutubeService {
        
        private const string Resource = "";
        
        private ActivitiesResource _activities;
        
        private ChannelCategoriesResource _channelCategories;
        
        private ChannelsResource _channels;
        
        private PlaylistItemsResource _playlistItems;
        
        private PlaylistsResource _playlists;
        
        private SearchResource _search;
        
        private SubscriptionResource _subscription;
        
        private VideocategoryResource _videocategory;
        
        private VideosResource _videos;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual ActivitiesResource Activities {
            get {
                return this._activities;
            }
        }
        
        public virtual ChannelCategoriesResource ChannelCategories {
            get {
                return this._channelCategories;
            }
        }
        
        public virtual ChannelsResource Channels {
            get {
                return this._channels;
            }
        }
        
        public virtual PlaylistItemsResource PlaylistItems {
            get {
                return this._playlistItems;
            }
        }
        
        public virtual PlaylistsResource Playlists {
            get {
                return this._playlists;
            }
        }
        
        public virtual SearchResource Search {
            get {
                return this._search;
            }
        }
        
        public virtual SubscriptionResource Subscription {
            get {
                return this._subscription;
            }
        }
        
        public virtual VideocategoryResource Videocategory {
            get {
                return this._videocategory;
            }
        }
        
        public virtual VideosResource Videos {
            get {
                return this._videos;
            }
        }
    }
}
