//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Groupssettings.v1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    /// <summary>JSON template for Group resource</summary>
    public class Groups : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _allowExternalMembers;
        
        private string _allowGoogleCommunication;
        
        private string _allowWebPosting;
        
        private string _archiveOnly;
        
        private string _customReplyTo;
        
        private string _defaultMessageDenyNotificationText;
        
        private string _description;
        
        private string _email;
        
        private string _includeInGlobalAddressList;
        
        private string _isArchived;
        
        private string _kind;
        
        private System.Nullable<long> _maxMessageBytes;
        
        private string _membersCanPostAsTheGroup;
        
        private string _messageDisplayFont;
        
        private string _messageModerationLevel;
        
        private string _name;
        
        private string _primaryLanguage;
        
        private string _replyTo;
        
        private string _sendMessageDenyNotification;
        
        private string _showInGroupDirectory;
        
        private string _spamModerationLevel;
        
        private string _whoCanInvite;
        
        private string _whoCanJoin;
        
        private string _whoCanPostMessage;
        
        private string _whoCanViewGroup;
        
        private string _whoCanViewMembership;
        
        private string _ETag;
        
        /// <summary>Are external members allowed to join the group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowExternalMembers")]
        public virtual string AllowExternalMembers {
            get {
                return this._allowExternalMembers;
            }
            set {
                this._allowExternalMembers = value;
            }
        }
        
        /// <summary>Is google allowed to contact admins.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowGoogleCommunication")]
        public virtual string AllowGoogleCommunication {
            get {
                return this._allowGoogleCommunication;
            }
            set {
                this._allowGoogleCommunication = value;
            }
        }
        
        /// <summary>If posting from web is allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowWebPosting")]
        public virtual string AllowWebPosting {
            get {
                return this._allowWebPosting;
            }
            set {
                this._allowWebPosting = value;
            }
        }
        
        /// <summary>If the group is archive only</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archiveOnly")]
        public virtual string ArchiveOnly {
            get {
                return this._archiveOnly;
            }
            set {
                this._archiveOnly = value;
            }
        }
        
        /// <summary>Default email to which reply to any message should go.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customReplyTo")]
        public virtual string CustomReplyTo {
            get {
                return this._customReplyTo;
            }
            set {
                this._customReplyTo = value;
            }
        }
        
        /// <summary>Default message deny notification message</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultMessageDenyNotificationText")]
        public virtual string DefaultMessageDenyNotificationText {
            get {
                return this._defaultMessageDenyNotificationText;
            }
            set {
                this._defaultMessageDenyNotificationText = value;
            }
        }
        
        /// <summary>Description of the group</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Email id of the group</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email {
            get {
                return this._email;
            }
            set {
                this._email = value;
            }
        }
        
        /// <summary>If this groups should be included in global address list or not.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeInGlobalAddressList")]
        public virtual string IncludeInGlobalAddressList {
            get {
                return this._includeInGlobalAddressList;
            }
            set {
                this._includeInGlobalAddressList = value;
            }
        }
        
        /// <summary>If the contents of the group are archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isArchived")]
        public virtual string IsArchived {
            get {
                return this._isArchived;
            }
            set {
                this._isArchived = value;
            }
        }
        
        /// <summary>The type of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Maximum message size allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxMessageBytes")]
        public virtual System.Nullable<long> MaxMessageBytes {
            get {
                return this._maxMessageBytes;
            }
            set {
                this._maxMessageBytes = value;
            }
        }
        
        /// <summary>Can members post using the group email address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("membersCanPostAsTheGroup")]
        public virtual string MembersCanPostAsTheGroup {
            get {
                return this._membersCanPostAsTheGroup;
            }
            set {
                this._membersCanPostAsTheGroup = value;
            }
        }
        
        /// <summary>Default message display font. Possible values are: DEFAULT_FONT FIXED_WIDTH_FONT</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageDisplayFont")]
        public virtual string MessageDisplayFont {
            get {
                return this._messageDisplayFont;
            }
            set {
                this._messageDisplayFont = value;
            }
        }
        
        /// <summary>Moderation level for messages. Possible values are: MODERATE_ALL_MESSAGES MODERATE_NON_MEMBERS MODERATE_NEW_MEMBERS MODERATE_NONE</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageModerationLevel")]
        public virtual string MessageModerationLevel {
            get {
                return this._messageModerationLevel;
            }
            set {
                this._messageModerationLevel = value;
            }
        }
        
        /// <summary>Name of the Group</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        /// <summary>Primary language for the group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryLanguage")]
        public virtual string PrimaryLanguage {
            get {
                return this._primaryLanguage;
            }
            set {
                this._primaryLanguage = value;
            }
        }
        
        /// <summary>Whome should the default reply to a message go to. Possible values are: REPLY_TO_CUSTOM REPLY_TO_SENDER REPLY_TO_LIST REPLY_TO_OWNER REPLY_TO_IGNORE REPLY_TO_MANAGERS</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replyTo")]
        public virtual string ReplyTo {
            get {
                return this._replyTo;
            }
            set {
                this._replyTo = value;
            }
        }
        
        /// <summary>Should the member be notified if his message is denied by owner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sendMessageDenyNotification")]
        public virtual string SendMessageDenyNotification {
            get {
                return this._sendMessageDenyNotification;
            }
            set {
                this._sendMessageDenyNotification = value;
            }
        }
        
        /// <summary>Is the group listed in groups directory</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showInGroupDirectory")]
        public virtual string ShowInGroupDirectory {
            get {
                return this._showInGroupDirectory;
            }
            set {
                this._showInGroupDirectory = value;
            }
        }
        
        /// <summary>Moderation level for messages detected as spam. Possible values are: ALLOW MODERATE SILENTLY_MODERATE REJECT</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("spamModerationLevel")]
        public virtual string SpamModerationLevel {
            get {
                return this._spamModerationLevel;
            }
            set {
                this._spamModerationLevel = value;
            }
        }
        
        /// <summary>Permissions to invite members. Possbile values are: ALL_MEMBERS_CAN_INVITE ALL_MANAGERS_CAN_INVITE</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("whoCanInvite")]
        public virtual string WhoCanInvite {
            get {
                return this._whoCanInvite;
            }
            set {
                this._whoCanInvite = value;
            }
        }
        
        /// <summary>Permissions to join the group. Possible values are: ANYONE_CAN_JOIN ALL_IN_DOMAIN_CAN_JOIN INVITED_CAN_JOIN CAN_REQUEST_TO_JOIN</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("whoCanJoin")]
        public virtual string WhoCanJoin {
            get {
                return this._whoCanJoin;
            }
            set {
                this._whoCanJoin = value;
            }
        }
        
        /// <summary>Permissions to post messages to the group. Possible values are: NONE_CAN_POST ALL_MANAGERS_CAN_POST ALL_MEMBERS_CAN_POST ALL_IN_DOMAIN_CAN_POST ANYONE_CAN_POST</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("whoCanPostMessage")]
        public virtual string WhoCanPostMessage {
            get {
                return this._whoCanPostMessage;
            }
            set {
                this._whoCanPostMessage = value;
            }
        }
        
        /// <summary>Permissions to view group. Possbile values are: ANYONE_CAN_VIEW ALL_IN_DOMAIN_CAN_VIEW ALL_MEMBERS_CAN_VIEW ALL_MANAGERS_CAN_VIEW</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("whoCanViewGroup")]
        public virtual string WhoCanViewGroup {
            get {
                return this._whoCanViewGroup;
            }
            set {
                this._whoCanViewGroup = value;
            }
        }
        
        /// <summary>Permissions to view membership. Possbile values are: ALL_IN_DOMAIN_CAN_VIEW ALL_MEMBERS_CAN_VIEW ALL_MANAGERS_CAN_VIEW</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("whoCanViewMembership")]
        public virtual string WhoCanViewMembership {
            get {
                return this._whoCanViewMembership;
            }
            set {
                this._whoCanViewMembership = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
}
namespace Google.Apis.Groupssettings.v1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class GroupssettingsService : Google.Apis.Services.BaseClientService {
        
        public const string Version = "v1";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private System.Collections.Generic.IDictionary<string, Google.Apis.Discovery.IParameter> _serviceParameters;
        
        public GroupssettingsService(Google.Apis.Services.BaseClientService.Initializer initializer) : 
                base(initializer) {
            this._groups = new GroupsResource(this, Authenticator);
            this.InitParameters();
        }
        
        public GroupssettingsService() : 
                this(new Google.Apis.Services.BaseClientService.Initializer()) {
        }
        
        public override System.Collections.Generic.IList<string> Features {
            get {
                return new string[0];
            }
        }
        
        public override string Name {
            get {
                return "groupssettings";
            }
        }
        
        public override string BaseUri {
            get {
                return "https://www.googleapis.com/groups/v1/groups/";
            }
        }
        
        public override System.Collections.Generic.IDictionary<string, Google.Apis.Discovery.IParameter> ServiceParameters {
            get {
                return this._serviceParameters;
            }
        }
        
        public override Google.Apis.Requests.IRequest CreateRequest(Google.Apis.Requests.IClientServiceRequest serviceRequest) {
            Google.Apis.Requests.IRequest request = Google.Apis.Requests.Request.CreateRequest(this, serviceRequest);
            if ((string.IsNullOrEmpty(ApiKey) == false)) {
                request = request.WithKey(this.ApiKey);
            }
            return request.WithAuthentication(Authenticator);
        }
        
        private void InitParameters() {
            System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
            parameters.Add("alt", Google.Apis.Util.Utilities.CreateRuntimeParameter("alt", false, "query", "atom", null, new string[] {
                            "atom",
                            "json"}));
            parameters.Add("fields", Google.Apis.Util.Utilities.CreateRuntimeParameter("fields", false, "query", null, null, new string[0]));
            parameters.Add("key", Google.Apis.Util.Utilities.CreateRuntimeParameter("key", false, "query", null, null, new string[0]));
            parameters.Add("oauth_token", Google.Apis.Util.Utilities.CreateRuntimeParameter("oauth_token", false, "query", null, null, new string[0]));
            parameters.Add("prettyPrint", Google.Apis.Util.Utilities.CreateRuntimeParameter("prettyPrint", false, "query", "true", null, new string[0]));
            parameters.Add("quotaUser", Google.Apis.Util.Utilities.CreateRuntimeParameter("quotaUser", false, "query", null, null, new string[0]));
            parameters.Add("userIp", Google.Apis.Util.Utilities.CreateRuntimeParameter("userIp", false, "query", null, null, new string[0]));
            this._serviceParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>View and manage the settings of a Google Apps Group</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/apps.groups.settings")]
            AppsGroupsSettings,
        }
    }
    
    public class GroupsResource {
        
        private GroupssettingsService service;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string Resource = "groups";
        
        public GroupsResource(GroupssettingsService service, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.service = service;
            this.authenticator = authenticator;
        }
        
        /// <summary>Gets one resource by id.</summary>
        /// <param name="groupUniqueId">Required - The resource ID</param>
        public virtual GetRequest Get(string groupUniqueId) {
            return new GetRequest(service, groupUniqueId);
        }
        
        /// <summary>Updates an existing resource. This method supports patch semantics.</summary>
        /// <param name="groupUniqueId">Required - The resource ID</param>
        public virtual PatchRequest Patch(Google.Apis.Groupssettings.v1.Data.Groups body, string groupUniqueId) {
            return new PatchRequest(service, body, groupUniqueId);
        }
        
        /// <summary>Updates an existing resource.</summary>
        /// <param name="groupUniqueId">Required - The resource ID</param>
        public virtual UpdateRequest Update(Google.Apis.Groupssettings.v1.Data.Groups body, string groupUniqueId) {
            return new UpdateRequest(service, body, groupUniqueId);
        }
        
        public class GetRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Groupssettings.v1.Data.Groups> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private string _groupUniqueId;
            
            public GetRequest(Google.Apis.Services.IClientService service, string groupUniqueId) : 
                    base(service) {
                this._groupUniqueId = groupUniqueId;
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>The resource ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("groupUniqueId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string GroupUniqueId {
                get {
                    return this._groupUniqueId;
                }
            }
            
            public override string ResourcePath {
                get {
                    return "groups";
                }
            }
            
            public override string MethodName {
                get {
                    return "get";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "GET";
                }
            }
            
            public override string RestPath {
                get {
                    return "{groupUniqueId}";
                }
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("groupUniqueId", Google.Apis.Util.Utilities.CreateRuntimeParameter("groupUniqueId", true, "path", null, null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Groupssettings.v1.Data.Groups> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private string _groupUniqueId;
            
            private Google.Apis.Groupssettings.v1.Data.Groups _Body;
            
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Groupssettings.v1.Data.Groups body, string groupUniqueId) : 
                    base(service) {
                this.Body = body;
                this._groupUniqueId = groupUniqueId;
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>The resource ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("groupUniqueId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string GroupUniqueId {
                get {
                    return this._groupUniqueId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Groupssettings.v1.Data.Groups Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            public override string ResourcePath {
                get {
                    return "groups";
                }
            }
            
            public override string MethodName {
                get {
                    return "patch";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "PATCH";
                }
            }
            
            public override string RestPath {
                get {
                    return "{groupUniqueId}";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("groupUniqueId", Google.Apis.Util.Utilities.CreateRuntimeParameter("groupUniqueId", true, "path", null, null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Groupssettings.v1.Data.Groups> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private string _groupUniqueId;
            
            private Google.Apis.Groupssettings.v1.Data.Groups _Body;
            
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Groupssettings.v1.Data.Groups body, string groupUniqueId) : 
                    base(service) {
                this.Body = body;
                this._groupUniqueId = groupUniqueId;
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>The resource ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("groupUniqueId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string GroupUniqueId {
                get {
                    return this._groupUniqueId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Groupssettings.v1.Data.Groups Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            public override string ResourcePath {
                get {
                    return "groups";
                }
            }
            
            public override string MethodName {
                get {
                    return "update";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "PUT";
                }
            }
            
            public override string RestPath {
                get {
                    return "{groupUniqueId}";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("groupUniqueId", Google.Apis.Util.Utilities.CreateRuntimeParameter("groupUniqueId", true, "path", null, null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
    }
    
    public partial class GroupssettingsService {
        
        private const string Resource = "";
        
        private GroupsResource _groups;
        
        private Google.Apis.Services.IClientService service {
            get {
                return this;
            }
        }
        
        public virtual GroupsResource Groups {
            get {
                return this._groups;
            }
        }
    }
}
