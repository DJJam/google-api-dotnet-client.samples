//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5448
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Groupssettings.v1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    /// <summary>Groups resource</summary>
    public class Groups : Google.Apis.Requests.IDirectResponseSchema {
        
        private string allowExternalMembers;
        
        private string allowGoogleCommunication;
        
        private string allowWebPosting;
        
        private string archiveOnly;
        
        private string customReplyTo;
        
        private string defaultMessageDenyNotificationText;
        
        private string description;
        
        private string email;
        
        private string isArchived;
        
        private string kind;
        
        private System.Nullable<long> maxMessageBytes;
        
        private string membersCanPostAsTheGroup;
        
        private string messageDisplayFont;
        
        private string messageModerationLevel;
        
        private string name;
        
        private string primaryLanguage;
        
        private string replyTo;
        
        private string sendMessageDenyNotification;
        
        private string showInGroupDirectory;
        
        private string whoCanInvite;
        
        private string whoCanJoin;
        
        private string whoCanPostMessage;
        
        private string whoCanViewGroup;
        
        private string whoCanViewMembership;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>Are external members allowed to join the group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowExternalMembers")]
        public virtual string AllowExternalMembers {
            get {
                return this.allowExternalMembers;
            }
            set {
                this.allowExternalMembers = value;
            }
        }
        
        /// <summary>Is google allowed to contact admins.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowGoogleCommunication")]
        public virtual string AllowGoogleCommunication {
            get {
                return this.allowGoogleCommunication;
            }
            set {
                this.allowGoogleCommunication = value;
            }
        }
        
        /// <summary>If posting from web is allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowWebPosting")]
        public virtual string AllowWebPosting {
            get {
                return this.allowWebPosting;
            }
            set {
                this.allowWebPosting = value;
            }
        }
        
        /// <summary>If the group is archive only</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archiveOnly")]
        public virtual string ArchiveOnly {
            get {
                return this.archiveOnly;
            }
            set {
                this.archiveOnly = value;
            }
        }
        
        /// <summary>Default email to which reply to any message should go.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customReplyTo")]
        public virtual string CustomReplyTo {
            get {
                return this.customReplyTo;
            }
            set {
                this.customReplyTo = value;
            }
        }
        
        /// <summary>Default message deny notification message</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultMessageDenyNotificationText")]
        public virtual string DefaultMessageDenyNotificationText {
            get {
                return this.defaultMessageDenyNotificationText;
            }
            set {
                this.defaultMessageDenyNotificationText = value;
            }
        }
        
        /// <summary>Description of the group</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this.description;
            }
            set {
                this.description = value;
            }
        }
        
        /// <summary>Email id of the group</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email {
            get {
                return this.email;
            }
            set {
                this.email = value;
            }
        }
        
        /// <summary>If the contents of the group are archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isArchived")]
        public virtual string IsArchived {
            get {
                return this.isArchived;
            }
            set {
                this.isArchived = value;
            }
        }
        
        /// <summary>The type of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Maximum message size allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxMessageBytes")]
        public virtual System.Nullable<long> MaxMessageBytes {
            get {
                return this.maxMessageBytes;
            }
            set {
                this.maxMessageBytes = value;
            }
        }
        
        /// <summary>Can members post using the group email address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("membersCanPostAsTheGroup")]
        public virtual string MembersCanPostAsTheGroup {
            get {
                return this.membersCanPostAsTheGroup;
            }
            set {
                this.membersCanPostAsTheGroup = value;
            }
        }
        
        /// <summary>Default message display font. Possible values are: DEFAULT_FONT FIXED_WIDTH_FONT</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageDisplayFont")]
        public virtual string MessageDisplayFont {
            get {
                return this.messageDisplayFont;
            }
            set {
                this.messageDisplayFont = value;
            }
        }
        
        /// <summary>Moderation level for messages. Possible values are: MODERATE_ALL_MESSAGES MODERATE_NON_MEMBERS MODERATE_NEW_MEMBERS MODERATE_NONE</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageModerationLevel")]
        public virtual string MessageModerationLevel {
            get {
                return this.messageModerationLevel;
            }
            set {
                this.messageModerationLevel = value;
            }
        }
        
        /// <summary>Name of the Group</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this.name;
            }
            set {
                this.name = value;
            }
        }
        
        /// <summary>Primary language for the group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryLanguage")]
        public virtual string PrimaryLanguage {
            get {
                return this.primaryLanguage;
            }
            set {
                this.primaryLanguage = value;
            }
        }
        
        /// <summary>Whome should the default reply to a message go to. Possible values are: REPLY_TO_CUSTOM REPLY_TO_SENDER REPLY_TO_LIST REPLY_TO_OWNER REPLY_TO_IGNORE REPLY_TO_MANAGERS</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replyTo")]
        public virtual string ReplyTo {
            get {
                return this.replyTo;
            }
            set {
                this.replyTo = value;
            }
        }
        
        /// <summary>Should the member be notified if his message is denied by owner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sendMessageDenyNotification")]
        public virtual string SendMessageDenyNotification {
            get {
                return this.sendMessageDenyNotification;
            }
            set {
                this.sendMessageDenyNotification = value;
            }
        }
        
        /// <summary>Is the group listed in groups directory</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showInGroupDirectory")]
        public virtual string ShowInGroupDirectory {
            get {
                return this.showInGroupDirectory;
            }
            set {
                this.showInGroupDirectory = value;
            }
        }
        
        /// <summary>Permissions to invite members. Possbile values are: ALL_MEMBERS_CAN_INVITE ALL_MANAGERS_CAN_INVITE</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("whoCanInvite")]
        public virtual string WhoCanInvite {
            get {
                return this.whoCanInvite;
            }
            set {
                this.whoCanInvite = value;
            }
        }
        
        /// <summary>Permissions to join the group. Possible values are: ANYONE_CAN_JOIN ALL_IN_DOMAIN_CAN_JOIN INVITED_CAN_JOIN CAN_REQUEST_TO_JOIN</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("whoCanJoin")]
        public virtual string WhoCanJoin {
            get {
                return this.whoCanJoin;
            }
            set {
                this.whoCanJoin = value;
            }
        }
        
        /// <summary>Permissions to post messages to the group. Possible values are: NONE_CAN_POST ALL_MANAGERS_CAN_POST ALL_MEMBERS_CAN_POST ALL_IN_DOMAIN_CAN_POST ANYONE_CAN_POST</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("whoCanPostMessage")]
        public virtual string WhoCanPostMessage {
            get {
                return this.whoCanPostMessage;
            }
            set {
                this.whoCanPostMessage = value;
            }
        }
        
        /// <summary>Permissions to view group. Possbile values are: ANYONE_CAN_VIEW ALL_IN_DOMAIN_CAN_VIEW ALL_MEMBERS_CAN_VIEW ALL_MANAGERS_CAN_VIEW</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("whoCanViewGroup")]
        public virtual string WhoCanViewGroup {
            get {
                return this.whoCanViewGroup;
            }
            set {
                this.whoCanViewGroup = value;
            }
        }
        
        /// <summary>Permissions to view membership. Possbile values are: ALL_IN_DOMAIN_CAN_VIEW ALL_MEMBERS_CAN_VIEW ALL_MANAGERS_CAN_VIEW</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("whoCanViewMembership")]
        public virtual string WhoCanViewMembership {
            get {
                return this.whoCanViewMembership;
            }
            set {
                this.whoCanViewMembership = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
}
namespace Google.Apis.Groupssettings.v1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class GroupssettingsService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService genericService;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"discoveryVersion\":\"v1\",\"id\":\"groupssettings:" +
            "v1\",\"name\":\"groupssettings\",\"version\":\"v1\",\"revision\":\"20111220\",\"description\":\"" +
            "Groups Settings Api\",\"icons\":{\"x16\":\"http://www.google.com/images/icons/product/" +
            "search-16.gif\",\"x32\":\"http://www.google.com/images/icons/product/search-32.gif\"}" +
            ",\"labels\":[\"limited_availability\"],\"protocol\":\"rest\",\"baseUrl\":\"https://www.goog" +
            "leapis.com/groups/v1/groups/\",\"basePath\":\"/groups/v1/groups/\",\"parameters\":{\"alt" +
            "\":{\"type\":\"string\",\"description\":\"Data format for the response.\",\"default\":\"atom" +
            "\",\"enum\":[\"atom\",\"json\"],\"enumDescriptions\":[\"Responses with Content-Type of app" +
            "lication/atom+xml\",\"Responses with Content-Type of application/json\"],\"location\"" +
            ":\"query\"},\"fields\":{\"type\":\"string\",\"description\":\"Selector specifying which fie" +
            "lds to include in a partial response.\",\"location\":\"query\"},\"key\":{\"type\":\"string" +
            "\",\"description\":\"API key. Your API key identifies your project and provides you " +
            "with API access, quota, and reports. Required unless you provide an OAuth 2.0 to" +
            "ken.\",\"location\":\"query\"},\"oauth_token\":{\"type\":\"string\",\"description\":\"OAuth 2." +
            "0 token for the current user.\",\"location\":\"query\"},\"prettyPrint\":{\"type\":\"boolea" +
            "n\",\"description\":\"Returns response with indentations and line breaks.\",\"default\"" +
            ":\"true\",\"location\":\"query\"},\"quotaUser\":{\"type\":\"string\",\"description\":\"Availabl" +
            "e to use for quota purposes for server-side applications. Can be any arbitrary s" +
            "tring assigned to a user, but should not exceed 40 characters. Overrides userIp " +
            "if both are provided.\",\"location\":\"query\"},\"userIp\":{\"type\":\"string\",\"descriptio" +
            "n\":\"IP address of the site where the request originates. Use this if you want to" +
            " enforce per-user limits.\",\"location\":\"query\"}},\"auth\":{\"oauth2\":{\"scopes\":{\"htt" +
            "ps://www.googleapis.com/auth/apps.groups.settings\":{\"description\":\"View and mana" +
            "ge the settings of a Google Apps Group\"}}}},\"schemas\":{\"Groups\":{\"id\":\"Groups\",\"" +
            "type\":\"object\",\"description\":\"Groups resource\",\"properties\":{\"allowExternalMembe" +
            "rs\":{\"type\":\"string\",\"description\":\"Are external members allowed to join the gro" +
            "up.\"},\"allowGoogleCommunication\":{\"type\":\"string\",\"description\":\"Is google allow" +
            "ed to contact admins.\"},\"allowWebPosting\":{\"type\":\"string\",\"description\":\"If pos" +
            "ting from web is allowed.\"},\"archiveOnly\":{\"type\":\"string\",\"description\":\"If the" +
            " group is archive only\"},\"customReplyTo\":{\"type\":\"string\",\"description\":\"Default" +
            " email to which reply to any message should go.\"},\"defaultMessageDenyNotificatio" +
            "nText\":{\"type\":\"string\",\"description\":\"Default message deny notification message" +
            "\"},\"description\":{\"type\":\"string\",\"description\":\"Description of the group\"},\"ema" +
            "il\":{\"type\":\"string\",\"description\":\"Email id of the group\"},\"isArchived\":{\"type\"" +
            ":\"string\",\"description\":\"If the contents of the group are archived.\"},\"kind\":{\"t" +
            "ype\":\"string\",\"description\":\"The type of the resource.\",\"default\":\"groupsSetting" +
            "s#groups\"},\"maxMessageBytes\":{\"type\":\"integer\",\"description\":\"Maximum message si" +
            "ze allowed.\",\"format\":\"int32\"},\"membersCanPostAsTheGroup\":{\"type\":\"string\",\"desc" +
            "ription\":\"Can members post using the group email address.\"},\"messageDisplayFont\"" +
            ":{\"type\":\"string\",\"description\":\"Default message display font. Possible values a" +
            "re: DEFAULT_FONT FIXED_WIDTH_FONT\"},\"messageModerationLevel\":{\"type\":\"string\",\"d" +
            "escription\":\"Moderation level for messages. Possible values are: MODERATE_ALL_ME" +
            "SSAGES MODERATE_NON_MEMBERS MODERATE_NEW_MEMBERS MODERATE_NONE\"},\"name\":{\"type\":" +
            "\"string\",\"description\":\"Name of the Group\"},\"primaryLanguage\":{\"type\":\"string\",\"" +
            "description\":\"Primary language for the group.\"},\"replyTo\":{\"type\":\"string\",\"desc" +
            "ription\":\"Whome should the default reply to a message go to. Possible values are" +
            ": REPLY_TO_CUSTOM REPLY_TO_SENDER REPLY_TO_LIST REPLY_TO_OWNER REPLY_TO_IGNORE R" +
            "EPLY_TO_MANAGERS\"},\"sendMessageDenyNotification\":{\"type\":\"string\",\"description\":" +
            "\"Should the member be notified if his message is denied by owner.\"},\"showInGroup" +
            "Directory\":{\"type\":\"string\",\"description\":\"Is the group listed in groups directo" +
            "ry\"},\"whoCanInvite\":{\"type\":\"string\",\"description\":\"Permissions to invite member" +
            "s. Possbile values are: ALL_MEMBERS_CAN_INVITE ALL_MANAGERS_CAN_INVITE\"},\"whoCan" +
            "Join\":{\"type\":\"string\",\"description\":\"Permissions to join the group. Possible va" +
            "lues are: ANYONE_CAN_JOIN ALL_IN_DOMAIN_CAN_JOIN INVITED_CAN_JOIN CAN_REQUEST_TO" +
            "_JOIN\"},\"whoCanPostMessage\":{\"type\":\"string\",\"description\":\"Permissions to post " +
            "messages to the group. Possible values are: NONE_CAN_POST ALL_MANAGERS_CAN_POST " +
            "ALL_MEMBERS_CAN_POST ALL_IN_DOMAIN_CAN_POST ANYONE_CAN_POST\"},\"whoCanViewGroup\":" +
            "{\"type\":\"string\",\"description\":\"Permissions to view group. Possbile values are: " +
            "ANYONE_CAN_VIEW ALL_IN_DOMAIN_CAN_VIEW ALL_MEMBERS_CAN_VIEW ALL_MANAGERS_CAN_VIE" +
            "W\"},\"whoCanViewMembership\":{\"type\":\"string\",\"description\":\"Permissions to view m" +
            "embership. Possbile values are: ALL_IN_DOMAIN_CAN_VIEW ALL_MEMBERS_CAN_VIEW ALL_" +
            "MANAGERS_CAN_VIEW\"}}}},\"resources\":{\"groups\":{\"methods\":{\"get\":{\"id\":\"groupsSett" +
            "ings.groups.get\",\"path\":\"{groupUniqueId}\",\"httpMethod\":\"GET\",\"description\":\"Gets" +
            " one resource by id.\",\"parameters\":{\"groupUniqueId\":{\"type\":\"string\",\"descriptio" +
            "n\":\"The resource ID\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"grou" +
            "pUniqueId\"],\"response\":{\"$ref\":\"Groups\"},\"scopes\":[\"https://www.googleapis.com/a" +
            "uth/apps.groups.settings\"]},\"patch\":{\"id\":\"groupsSettings.groups.patch\",\"path\":\"" +
            "{groupUniqueId}\",\"httpMethod\":\"PATCH\",\"description\":\"Updates an existing resourc" +
            "e. This method supports patch semantics.\",\"parameters\":{\"groupUniqueId\":{\"type\":" +
            "\"string\",\"description\":\"The resource ID\",\"required\":true,\"location\":\"path\"}},\"pa" +
            "rameterOrder\":[\"groupUniqueId\"],\"request\":{\"$ref\":\"Groups\"},\"response\":{\"$ref\":\"" +
            "Groups\"},\"scopes\":[\"https://www.googleapis.com/auth/apps.groups.settings\"]},\"upd" +
            "ate\":{\"id\":\"groupsSettings.groups.update\",\"path\":\"{groupUniqueId}\",\"httpMethod\":" +
            "\"PUT\",\"description\":\"Updates an existing resource.\",\"parameters\":{\"groupUniqueId" +
            "\":{\"type\":\"string\",\"description\":\"The resource ID\",\"required\":true,\"location\":\"p" +
            "ath\"}},\"parameterOrder\":[\"groupUniqueId\"],\"request\":{\"$ref\":\"Groups\"},\"response\"" +
            ":{\"$ref\":\"Groups\"},\"scopes\":[\"https://www.googleapis.com/auth/apps.groups.settin" +
            "gs\"]}}}}}";
        
        private const string Version = "v1";
        
        private const string Name = "groupssettings";
        
        private const string BaseUri = "https://www.googleapis.com/groups/v1/groups/";
        
        private const Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string key;
        
        protected GroupssettingsService(Google.Apis.Discovery.IService genericService, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.genericService = genericService;
            this.authenticator = authenticator;
            this.groups = new GroupsResource(this);
        }
        
        public GroupssettingsService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public GroupssettingsService(Google.Apis.Authentication.IAuthenticator authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(GroupssettingsService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameterV1_0(new System.Uri(GroupssettingsService.BaseUri))), authenticator) {
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this.key;
            }
            set {
                this.key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this.genericService.CreateRequest(resource, method);
            if (!string.IsNullOrEmpty(Key)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            genericService.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return genericService.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return genericService.DeserializeResponse<T>(response);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>View and manage the settings of a Google Apps Group</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/apps.groups.settings")]
            AppsGroupsSettings,
        }
    }
    
    public class GroupsResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "groups";
        
        public GroupsResource(GroupssettingsService service) {
            this.service = service;
        }
        
        /// <summary>Gets one resource by id.</summary>
        /// <param name="groupUniqueId">Required - The resource ID</param>
        public virtual GetRequest Get(string groupUniqueId) {
            return new GetRequest(service, groupUniqueId);
        }
        
        /// <summary>Updates an existing resource. This method supports patch semantics.</summary>
        /// <param name="groupUniqueId">Required - The resource ID</param>
        public virtual PatchRequest Patch(Google.Apis.Groupssettings.v1.Data.Groups body, string groupUniqueId) {
            return new PatchRequest(service, body, groupUniqueId);
        }
        
        /// <summary>Updates an existing resource.</summary>
        /// <param name="groupUniqueId">Required - The resource ID</param>
        public virtual UpdateRequest Update(Google.Apis.Groupssettings.v1.Data.Groups body, string groupUniqueId) {
            return new UpdateRequest(service, body, groupUniqueId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Groupssettings.v1.Data.Groups> {
            
            private string oauth_token;
            
            private System.Boolean? prettyPrint;
            
            private string quotaUser;
            
            private string groupUniqueId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string groupUniqueId) : 
                    base(service) {
                this.groupUniqueId = groupUniqueId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token")]
            public virtual string Oauth_token {
                get {
                    return this.oauth_token;
                }
                set {
                    this.oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint")]
            public virtual System.Boolean? PrettyPrint {
                get {
                    return this.prettyPrint;
                }
                set {
                    this.prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser")]
            public virtual string QuotaUser {
                get {
                    return this.quotaUser;
                }
                set {
                    this.quotaUser = value;
                }
            }
            
            /// <summary>The resource ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("groupUniqueId")]
            public virtual string GroupUniqueId {
                get {
                    return this.groupUniqueId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "groups";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Groupssettings.v1.Data.Groups> {
            
            private string oauth_token;
            
            private System.Boolean? prettyPrint;
            
            private string quotaUser;
            
            private string groupUniqueId;
            
            private Google.Apis.Groupssettings.v1.Data.Groups bodyValue;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Groupssettings.v1.Data.Groups body, string groupUniqueId) : 
                    base(service) {
                this.Body = body;
                this.groupUniqueId = groupUniqueId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token")]
            public virtual string Oauth_token {
                get {
                    return this.oauth_token;
                }
                set {
                    this.oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint")]
            public virtual System.Boolean? PrettyPrint {
                get {
                    return this.prettyPrint;
                }
                set {
                    this.prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser")]
            public virtual string QuotaUser {
                get {
                    return this.quotaUser;
                }
                set {
                    this.quotaUser = value;
                }
            }
            
            /// <summary>The resource ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("groupUniqueId")]
            public virtual string GroupUniqueId {
                get {
                    return this.groupUniqueId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Groupssettings.v1.Data.Groups Body {
                get {
                    return this.bodyValue;
                }
                set {
                    this.bodyValue = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "groups";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Groupssettings.v1.Data.Groups> {
            
            private string oauth_token;
            
            private System.Boolean? prettyPrint;
            
            private string quotaUser;
            
            private string groupUniqueId;
            
            private Google.Apis.Groupssettings.v1.Data.Groups bodyValue;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Groupssettings.v1.Data.Groups body, string groupUniqueId) : 
                    base(service) {
                this.Body = body;
                this.groupUniqueId = groupUniqueId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token")]
            public virtual string Oauth_token {
                get {
                    return this.oauth_token;
                }
                set {
                    this.oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint")]
            public virtual System.Boolean? PrettyPrint {
                get {
                    return this.prettyPrint;
                }
                set {
                    this.prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser")]
            public virtual string QuotaUser {
                get {
                    return this.quotaUser;
                }
                set {
                    this.quotaUser = value;
                }
            }
            
            /// <summary>The resource ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("groupUniqueId")]
            public virtual string GroupUniqueId {
                get {
                    return this.groupUniqueId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Groupssettings.v1.Data.Groups Body {
                get {
                    return this.bodyValue;
                }
                set {
                    this.bodyValue = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "groups";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public partial class GroupssettingsService {
        
        private const string Resource = "";
        
        private GroupsResource groups;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual GroupsResource Groups {
            get {
                return this.groups;
            }
        }
    }
}
