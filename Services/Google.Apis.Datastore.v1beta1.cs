//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Datastore.v1beta1.Data {
    
    
    /// <summary>The request for AllocateIds.</summary>
    public class AllocateIdsRequest {
        
        private System.Collections.Generic.IList<Key> _keys;
        
        /// <summary>A list of keys with incomplete key paths to allocate IDs for. No key may be reserved/read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keys")]
        public virtual System.Collections.Generic.IList<Key> Keys {
            get {
                return this._keys;
            }
            set {
                this._keys = value;
            }
        }
    }
    
    /// <summary>The response for AllocateIds.</summary>
    public class AllocateIdsResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Key> _keys;
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>The keys specified in the request (in the same order), each with its key path completed with a newly allocated ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keys")]
        public virtual System.Collections.Generic.IList<Key> Keys {
            get {
                return this._keys;
            }
            set {
                this._keys = value;
            }
        }
        
        /// <summary>The kind, fixed to &quot;datastore#allocateIdsResponse&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    /// <summary>The request for BeginTransaction.</summary>
    public class BeginTransactionRequest {
        
        private string _isolationLevel;
        
        /// <summary>The transaction isolation level. Either snapshot or serializable. The default isolation level is snapshot isolation, which means that another transaction may not concurrently modify the data that is modified by this transaction. Optionally, a transaction can request to be made serializable which means that another transaction cannot concurrently modify the data that is read or modified by this transaction.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isolationLevel")]
        public virtual string IsolationLevel {
            get {
                return this._isolationLevel;
            }
            set {
                this._isolationLevel = value;
            }
        }
    }
    
    /// <summary>The response for BeginTransaction.</summary>
    public class BeginTransactionResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _kind;
        
        private string _transaction;
        
        private string _ETag;
        
        /// <summary>The kind, fixed to &quot;datastore#beginTransactionResponse&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The transaction identifier (always present).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transaction")]
        public virtual string Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    /// <summary>The request for BlindWrite.</summary>
    public class BlindWriteRequest {
        
        private Mutation _mutation;
        
        /// <summary>A set of changes to apply.
        ///
        ///No entity in this message may have a reserved property name, not even a property in an entity in a value.
        ///
        ///If entities with duplicate keys are present, an arbitrary choice will be made as to which is written.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mutation")]
        public virtual Mutation Mutation {
            get {
                return this._mutation;
            }
            set {
                this._mutation = value;
            }
        }
    }
    
    /// <summary>The response for BlindWrite.</summary>
    public class BlindWriteResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _kind;
        
        private MutationResult _mutationResult;
        
        private string _ETag;
        
        /// <summary>The kind, fixed to &quot;datastore#blindWriteResponse&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The result of applying a mutation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mutationResult")]
        public virtual MutationResult MutationResult {
            get {
                return this._mutationResult;
            }
            set {
                this._mutationResult = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    /// <summary>The request for Commit.</summary>
    public class CommitRequest {
        
        private Mutation _mutation;
        
        private string _transaction;
        
        /// <summary>A set of changes to apply.
        ///
        ///No entity in this message may have a reserved property name, not even a property in an entity in a value.
        ///
        ///If entities with duplicate keys are present, an arbitrary choice will be made as to which is written.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mutation")]
        public virtual Mutation Mutation {
            get {
                return this._mutation;
            }
            set {
                this._mutation = value;
            }
        }
        
        /// <summary>The transaction identifier, returned by a call to beginTransaction.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transaction")]
        public virtual string Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
            }
        }
    }
    
    /// <summary>The response for Commit.</summary>
    public class CommitResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _kind;
        
        private MutationResult _mutationResult;
        
        private string _ETag;
        
        /// <summary>The kind, fixed to &quot;datastore#commitResponse&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The result of applying a mutation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mutationResult")]
        public virtual MutationResult MutationResult {
            get {
                return this._mutationResult;
            }
            set {
                this._mutationResult = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    /// <summary>A filter that merges the multiple other filters using the given operation.</summary>
    public class CompositeFilter {
        
        private System.Collections.Generic.IList<Filter> _filters;
        
        private string _operator;
        
        /// <summary>The list of filters to combine. Must contain at least one filter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filters")]
        public virtual System.Collections.Generic.IList<Filter> Filters {
            get {
                return this._filters;
            }
            set {
                this._filters = value;
            }
        }
        
        /// <summary>The operator for combining multiple filters. Only &quot;and&quot; is currently supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operator")]
        public virtual string Operator {
            get {
                return this._operator;
            }
            set {
                this._operator = value;
            }
        }
    }
    
    /// <summary>An entity.
    ///
    ///An entity is limited to 1 megabyte when stored. That *roughly* corresponds to a limit of 1 megabyte for the serialized form of this message.</summary>
    public class Entity {
        
        private Key _key;
        
        private Entity.PropertiesData _properties;
        
        /// <summary>A unique identifier for an entity. If a key&apos;s partition id or any of its path kinds or names are reserved/read-only, the key is reserved/read-only. A reserved/read-only key is forbidden in certain documented contexts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual Key Key {
            get {
                return this._key;
            }
            set {
                this._key = value;
            }
        }
        
        /// <summary>The entity&apos;s properties.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("properties")]
        public virtual Entity.PropertiesData Properties {
            get {
                return this._properties;
            }
            set {
                this._properties = value;
            }
        }
        
        /// <summary>The entity&apos;s properties.</summary>
        public class PropertiesData : System.Collections.Generic.Dictionary<string, Property> {
        }
    }
    
    /// <summary>The result of fetching an entity from the datastore.</summary>
    public class EntityResult {
        
        private Entity _entity;
        
        /// <summary>An entity.
        ///
        ///An entity is limited to 1 megabyte when stored. That *roughly* corresponds to a limit of 1 megabyte for the serialized form of this message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entity")]
        public virtual Entity Entity {
            get {
                return this._entity;
            }
            set {
                this._entity = value;
            }
        }
    }
    
    /// <summary>A holder for any type of filter. Exactly one field should be specified.</summary>
    public class Filter {
        
        private CompositeFilter _compositeFilter;
        
        private PropertyFilter _propertyFilter;
        
        /// <summary>A filter that merges the multiple other filters using the given operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("compositeFilter")]
        public virtual CompositeFilter CompositeFilter {
            get {
                return this._compositeFilter;
            }
            set {
                this._compositeFilter = value;
            }
        }
        
        /// <summary>A filter on a specific property.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("propertyFilter")]
        public virtual PropertyFilter PropertyFilter {
            get {
                return this._propertyFilter;
            }
            set {
                this._propertyFilter = value;
            }
        }
    }
    
    /// <summary>A unique identifier for an entity. If a key&apos;s partition id or any of its path kinds or names are reserved/read-only, the key is reserved/read-only. A reserved/read-only key is forbidden in certain documented contexts.</summary>
    public class Key {
        
        private PartitionId _partitionId;
        
        private System.Collections.Generic.IList<KeyPathElement> _path;
        
        /// <summary>An identifier for a particular subset of entities.
        ///
        ///Entities are partitioned into various subsets, each used by different datasets and different namespaces within a dataset and so forth.
        ///
        ///All input partition IDs are normalized before use. A partition ID is normalized as follows: If the partition ID is unset, replace it with an empty partition ID. If the partition ID has no dataset ID, assign it the context dataset ID.
        ///
        ///Partition dimension: A dimension may be unset. A dimension&apos;s value must never contain &quot;!&quot;. A dimension&apos;s value must never be &quot;&quot;. If the value of any dimension matches regex &quot;__.*__&quot;, the partition is reserved/read-only. A reserved/read-only partition ID is forbidden in certain documented contexts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partitionId")]
        public virtual PartitionId PartitionId {
            get {
                return this._partitionId;
            }
            set {
                this._partitionId = value;
            }
        }
        
        /// <summary>The entity path. An entity path consists of one or more elements composed of a kind and a string or numerical identifier, which identify entities. The first element identifies a root entity, the second element identifies a child of the root entity, the third element a child of the second entity, and so forth. The entities identified by all prefixes of the path are called the element&apos;s ancestors. An entity path is always fully complete: ALL of the entity&apos;s ancestors are required to be in the path along with the entity identifier itself. The only exception is that in some documented cases, the identifier in the last path element (for the entity) itself may be omitted. A path can never be empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("path")]
        public virtual System.Collections.Generic.IList<KeyPathElement> Path {
            get {
                return this._path;
            }
            set {
                this._path = value;
            }
        }
    }
    
    /// <summary>A (kind, ID/name) pair used to construct a key path.
    ///
    ///At most one of name or ID may be set. If either is set, the element is complete. If neither is set, the element is incomplete.</summary>
    public class KeyPathElement {
        
        private string _id;
        
        private string _kind;
        
        private string _name;
        
        /// <summary>The ID of the entity. Always &gt; 0.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The kind of the entity. Kinds matching regex &quot;__.*__&quot; are reserved/read-only. Cannot be &quot;&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The name of the entity. Names matching regex &quot;__.*__&quot; are reserved/read-only. Cannot be &quot;&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
    }
    
    /// <summary>A representation of a kind.</summary>
    public class KindExpression {
        
        private string _name;
        
        /// <summary>The name of the kind.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
    }
    
    /// <summary>The request for Lookup.</summary>
    public class LookupRequest {
        
        private System.Collections.Generic.IList<Key> _keys;
        
        private ReadOptions _readOptions;
        
        /// <summary>Keys of entities to look up from the datastore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keys")]
        public virtual System.Collections.Generic.IList<Key> Keys {
            get {
                return this._keys;
            }
            set {
                this._keys = value;
            }
        }
        
        /// <summary>Options shared by read requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("readOptions")]
        public virtual ReadOptions ReadOptions {
            get {
                return this._readOptions;
            }
            set {
                this._readOptions = value;
            }
        }
    }
    
    /// <summary>The response for Lookup.</summary>
    public class LookupResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Key> _deferred;
        
        private System.Collections.Generic.IList<EntityResult> _found;
        
        private string _kind;
        
        private System.Collections.Generic.IList<EntityResult> _missing;
        
        private string _ETag;
        
        /// <summary>A list of keys that were not looked up due to resource constraints.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deferred")]
        public virtual System.Collections.Generic.IList<Key> Deferred {
            get {
                return this._deferred;
            }
            set {
                this._deferred = value;
            }
        }
        
        /// <summary>Entities found.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("found")]
        public virtual System.Collections.Generic.IList<EntityResult> Found {
            get {
                return this._found;
            }
            set {
                this._found = value;
            }
        }
        
        /// <summary>The kind, fixed to &quot;datastore#lookupResponse&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Entities not found, with only the key populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("missing")]
        public virtual System.Collections.Generic.IList<EntityResult> Missing {
            get {
                return this._missing;
            }
            set {
                this._missing = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    /// <summary>A set of changes to apply.
    ///
    ///No entity in this message may have a reserved property name, not even a property in an entity in a value.
    ///
    ///If entities with duplicate keys are present, an arbitrary choice will be made as to which is written.</summary>
    public class Mutation {
        
        private System.Collections.Generic.IList<Key> _delete;
        
        private System.Nullable<bool> _force;
        
        private System.Collections.Generic.IList<Entity> _insert;
        
        private System.Collections.Generic.IList<Entity> _insertAutoId;
        
        private System.Collections.Generic.IList<Entity> _update;
        
        private System.Collections.Generic.IList<Entity> _upsert;
        
        /// <summary>Keys of entities to delete. Each key must have a complete key path and must not be reserved/read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("delete")]
        public virtual System.Collections.Generic.IList<Key> Delete {
            get {
                return this._delete;
            }
            set {
                this._delete = value;
            }
        }
        
        /// <summary>Ignore a user specified read-only period. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("force")]
        public virtual System.Nullable<bool> Force {
            get {
                return this._force;
            }
            set {
                this._force = value;
            }
        }
        
        /// <summary>Entities to insert. Each inserted entity&apos;s key must have a complete path and must not be reserved/read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("insert")]
        public virtual System.Collections.Generic.IList<Entity> Insert {
            get {
                return this._insert;
            }
            set {
                this._insert = value;
            }
        }
        
        /// <summary>Insert entities with a newly allocated ID. Each inserted entity&apos;s key must omit the final identifier in its path and must not be reserved/read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("insertAutoId")]
        public virtual System.Collections.Generic.IList<Entity> InsertAutoId {
            get {
                return this._insertAutoId;
            }
            set {
                this._insertAutoId = value;
            }
        }
        
        /// <summary>Entities to update. Each updated entity&apos;s key must have a complete path and must not be reserved/read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("update")]
        public virtual System.Collections.Generic.IList<Entity> Update {
            get {
                return this._update;
            }
            set {
                this._update = value;
            }
        }
        
        /// <summary>Entities to upsert. Each upserted entity&apos;s key must have a complete path and must not be reserved/read-only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("upsert")]
        public virtual System.Collections.Generic.IList<Entity> Upsert {
            get {
                return this._upsert;
            }
            set {
                this._upsert = value;
            }
        }
    }
    
    /// <summary>The result of applying a mutation.</summary>
    public class MutationResult {
        
        private System.Nullable<long> _indexUpdates;
        
        private System.Collections.Generic.IList<Key> _insertAutoIdKeys;
        
        /// <summary>Number of index writes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("indexUpdates")]
        public virtual System.Nullable<long> IndexUpdates {
            get {
                return this._indexUpdates;
            }
            set {
                this._indexUpdates = value;
            }
        }
        
        /// <summary>Keys for insertAutoId entities. One per entity from the request, in the same order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("insertAutoIdKeys")]
        public virtual System.Collections.Generic.IList<Key> InsertAutoIdKeys {
            get {
                return this._insertAutoIdKeys;
            }
            set {
                this._insertAutoIdKeys = value;
            }
        }
    }
    
    /// <summary>An identifier for a particular subset of entities.
    ///
    ///Entities are partitioned into various subsets, each used by different datasets and different namespaces within a dataset and so forth.
    ///
    ///All input partition IDs are normalized before use. A partition ID is normalized as follows: If the partition ID is unset, replace it with an empty partition ID. If the partition ID has no dataset ID, assign it the context dataset ID.
    ///
    ///Partition dimension: A dimension may be unset. A dimension&apos;s value must never contain &quot;!&quot;. A dimension&apos;s value must never be &quot;&quot;. If the value of any dimension matches regex &quot;__.*__&quot;, the partition is reserved/read-only. A reserved/read-only partition ID is forbidden in certain documented contexts.</summary>
    public class PartitionId {
        
        private string _datasetId;
        
        private string _namespace;
        
        /// <summary>The dataset ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("datasetId")]
        public virtual string DatasetId {
            get {
                return this._datasetId;
            }
            set {
                this._datasetId = value;
            }
        }
        
        /// <summary>The namespace.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("namespace")]
        public virtual string Namespace {
            get {
                return this._namespace;
            }
            set {
                this._namespace = value;
            }
        }
    }
    
    /// <summary>An entity property.</summary>
    public class Property {
        
        private System.Nullable<bool> _multi;
        
        private System.Collections.Generic.IList<Value> _values;
        
        /// <summary>If this property contains a list of values. Input values may explicitly set multi to false, but otherwise false is always represented by omitting multi.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("multi")]
        public virtual System.Nullable<bool> Multi {
            get {
                return this._multi;
            }
            set {
                this._multi = value;
            }
        }
        
        /// <summary>The value(s) of the property. When multi is false there is always exactly one value. When multi is true there is always one or more values. Each value can have only one value property populated. For example, you cannot have a values list of { values: [ { integerValue: 22, stringValue: &quot;a&quot; } ] }, but you can have { multi: true, values: [ { integerValue: 22 }, { stringValue: &quot;a&quot; } ] }.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("values")]
        public virtual System.Collections.Generic.IList<Value> Values {
            get {
                return this._values;
            }
            set {
                this._values = value;
            }
        }
    }
    
    /// <summary>A representation of a property in a projection.</summary>
    public class PropertyExpression {
        
        private string _aggregationFunction;
        
        private PropertyReference _property;
        
        /// <summary>The aggregation function to apply to the property. Optional. Can only be used when grouping by at least one property. Must then be set on all properties in the projection that are not being grouped by. Aggregation functions: first selects the first result as determined by the query&apos;s order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("aggregationFunction")]
        public virtual string AggregationFunction {
            get {
                return this._aggregationFunction;
            }
            set {
                this._aggregationFunction = value;
            }
        }
        
        /// <summary>A reference to a property relative to the kind expressions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("property")]
        public virtual PropertyReference Property {
            get {
                return this._property;
            }
            set {
                this._property = value;
            }
        }
    }
    
    /// <summary>A filter on a specific property.</summary>
    public class PropertyFilter {
        
        private string _operator;
        
        private PropertyReference _property;
        
        private Value _value;
        
        /// <summary>The operator to filter by. One of lessThan, lessThanOrEqual, greaterThan, greaterThanOrEqual, equal, or hasAncestor.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operator")]
        public virtual string Operator {
            get {
                return this._operator;
            }
            set {
                this._operator = value;
            }
        }
        
        /// <summary>A reference to a property relative to the kind expressions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("property")]
        public virtual PropertyReference Property {
            get {
                return this._property;
            }
            set {
                this._property = value;
            }
        }
        
        /// <summary>A message that can hold any of the supported value types and associated metadata.
        ///
        ///At most one of the Value fields may be set. If none are set the value is &quot;null&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual Value Value {
            get {
                return this._value;
            }
            set {
                this._value = value;
            }
        }
    }
    
    /// <summary>The desired order for a specific property.</summary>
    public class PropertyOrder {
        
        private string _direction;
        
        private PropertyReference _property;
        
        /// <summary>The direction to order by. One of ascending or descending. Optional, defaults to ascending.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("direction")]
        public virtual string Direction {
            get {
                return this._direction;
            }
            set {
                this._direction = value;
            }
        }
        
        /// <summary>A reference to a property relative to the kind expressions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("property")]
        public virtual PropertyReference Property {
            get {
                return this._property;
            }
            set {
                this._property = value;
            }
        }
    }
    
    /// <summary>A reference to a property relative to the kind expressions.</summary>
    public class PropertyReference {
        
        private string _name;
        
        /// <summary>The name of the property.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
    }
    
    /// <summary>A query.</summary>
    public class Query {
        
        private string _endCursor;
        
        private Filter _filter;
        
        private System.Collections.Generic.IList<PropertyReference> _groupBy;
        
        private System.Collections.Generic.IList<KindExpression> _kinds;
        
        private System.Nullable<long> _limit;
        
        private System.Nullable<long> _offset;
        
        private System.Collections.Generic.IList<PropertyOrder> _order;
        
        private System.Collections.Generic.IList<PropertyExpression> _projection;
        
        private string _startCursor;
        
        /// <summary>An ending point for the query results. Optional. Query cursors are returned in query result batches.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endCursor")]
        public virtual string EndCursor {
            get {
                return this._endCursor;
            }
            set {
                this._endCursor = value;
            }
        }
        
        /// <summary>A holder for any type of filter. Exactly one field should be specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual Filter Filter {
            get {
                return this._filter;
            }
            set {
                this._filter = value;
            }
        }
        
        /// <summary>The properties to group by (if empty, no grouping is applied to the result set).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupBy")]
        public virtual System.Collections.Generic.IList<PropertyReference> GroupBy {
            get {
                return this._groupBy;
            }
            set {
                this._groupBy = value;
            }
        }
        
        /// <summary>The kinds to query (if empty, returns entities from all kinds).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kinds")]
        public virtual System.Collections.Generic.IList<KindExpression> Kinds {
            get {
                return this._kinds;
            }
            set {
                this._kinds = value;
            }
        }
        
        /// <summary>The maximum number of results to return. Applies after all other constraints. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("limit")]
        public virtual System.Nullable<long> Limit {
            get {
                return this._limit;
            }
            set {
                this._limit = value;
            }
        }
        
        /// <summary>The number of results to skip. Applies before limit, but after all other constraints (optional, defaults to 0).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offset")]
        public virtual System.Nullable<long> Offset {
            get {
                return this._offset;
            }
            set {
                this._offset = value;
            }
        }
        
        /// <summary>The order to apply to the query results (if empty, order is unspecified).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("order")]
        public virtual System.Collections.Generic.IList<PropertyOrder> Order {
            get {
                return this._order;
            }
            set {
                this._order = value;
            }
        }
        
        /// <summary>The projection to return. If not set the entire entity is returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projection")]
        public virtual System.Collections.Generic.IList<PropertyExpression> Projection {
            get {
                return this._projection;
            }
            set {
                this._projection = value;
            }
        }
        
        /// <summary>A starting point for the query results. Optional. Query cursors are returned in query result batches.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startCursor")]
        public virtual string StartCursor {
            get {
                return this._startCursor;
            }
            set {
                this._startCursor = value;
            }
        }
    }
    
    /// <summary>A batch of results produced by a query.</summary>
    public class QueryResultBatch {
        
        private string _endCursor;
        
        private string _entityResultType;
        
        private System.Collections.Generic.IList<EntityResult> _entityResults;
        
        private string _moreResults;
        
        private System.Nullable<long> _skippedResults;
        
        /// <summary>A cursor that points to the position after the last result in the batch. May be absent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endCursor")]
        public virtual string EndCursor {
            get {
                return this._endCursor;
            }
            set {
                this._endCursor = value;
            }
        }
        
        /// <summary>The result type for every entity in entityResults. full for full entities, projection for entities with only projected properties, keyOnly for entities with only a key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityResultType")]
        public virtual string EntityResultType {
            get {
                return this._entityResultType;
            }
            set {
                this._entityResultType = value;
            }
        }
        
        /// <summary>The results for this batch.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityResults")]
        public virtual System.Collections.Generic.IList<EntityResult> EntityResults {
            get {
                return this._entityResults;
            }
            set {
                this._entityResults = value;
            }
        }
        
        /// <summary>The state of the query after the current batch. One of notFinished, moreResultsAfterLimit, noMoreResults.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("moreResults")]
        public virtual string MoreResults {
            get {
                return this._moreResults;
            }
            set {
                this._moreResults = value;
            }
        }
        
        /// <summary>The number of results skipped because of Query.offset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skippedResults")]
        public virtual System.Nullable<long> SkippedResults {
            get {
                return this._skippedResults;
            }
            set {
                this._skippedResults = value;
            }
        }
    }
    
    /// <summary>Options shared by read requests.</summary>
    public class ReadOptions {
        
        private string _readConsistency;
        
        private string _transaction;
        
        /// <summary>The read consistency to use. One of default, strong, or eventual. Cannot be set when transaction is set. Lookup and ancestor queries default to strong, global queries default to eventual and cannot be set to strong. Optional. Default is default.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("readConsistency")]
        public virtual string ReadConsistency {
            get {
                return this._readConsistency;
            }
            set {
                this._readConsistency = value;
            }
        }
        
        /// <summary>The transaction to use. Optional.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transaction")]
        public virtual string Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
            }
        }
    }
    
    /// <summary>The request for Rollback.</summary>
    public class RollbackRequest {
        
        private string _transaction;
        
        /// <summary>The transaction identifier, returned by a call to beginTransaction.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transaction")]
        public virtual string Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
            }
        }
    }
    
    /// <summary>The response for Rollback.</summary>
    public class RollbackResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>The kind, fixed to &quot;datastore#rollbackResponse&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    /// <summary>The request for RunQuery.</summary>
    public class RunQueryRequest {
        
        private PartitionId _partitionId;
        
        private Query _query;
        
        private ReadOptions _readOptions;
        
        /// <summary>An identifier for a particular subset of entities.
        ///
        ///Entities are partitioned into various subsets, each used by different datasets and different namespaces within a dataset and so forth.
        ///
        ///All input partition IDs are normalized before use. A partition ID is normalized as follows: If the partition ID is unset, replace it with an empty partition ID. If the partition ID has no dataset ID, assign it the context dataset ID.
        ///
        ///Partition dimension: A dimension may be unset. A dimension&apos;s value must never contain &quot;!&quot;. A dimension&apos;s value must never be &quot;&quot;. If the value of any dimension matches regex &quot;__.*__&quot;, the partition is reserved/read-only. A reserved/read-only partition ID is forbidden in certain documented contexts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partitionId")]
        public virtual PartitionId PartitionId {
            get {
                return this._partitionId;
            }
            set {
                this._partitionId = value;
            }
        }
        
        /// <summary>A query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual Query Query {
            get {
                return this._query;
            }
            set {
                this._query = value;
            }
        }
        
        /// <summary>Options shared by read requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("readOptions")]
        public virtual ReadOptions ReadOptions {
            get {
                return this._readOptions;
            }
            set {
                this._readOptions = value;
            }
        }
    }
    
    /// <summary>The response for RunQuery.</summary>
    public class RunQueryResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private QueryResultBatch _batch;
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>A batch of results produced by a query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("batch")]
        public virtual QueryResultBatch Batch {
            get {
                return this._batch;
            }
            set {
                this._batch = value;
            }
        }
        
        /// <summary>The kind, fixed to &quot;datastore#runQueryResponse&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    /// <summary>A message that can hold any of the supported value types and associated metadata.
    ///
    ///At most one of the Value fields may be set. If none are set the value is &quot;null&quot;.</summary>
    public class Value {
        
        private string _blobKeyValue;
        
        private string _blobValue;
        
        private System.Nullable<bool> _booleanValue;
        
        private string _dateTimeValue;
        
        private System.Nullable<double> _doubleValue;
        
        private Entity _entityValue;
        
        private System.Nullable<bool> _indexed;
        
        private string _integerValue;
        
        private Key _keyValue;
        
        private System.Nullable<long> _meaning;
        
        private string _stringValue;
        
        /// <summary>A blob key value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobKeyValue")]
        public virtual string BlobKeyValue {
            get {
                return this._blobKeyValue;
            }
            set {
                this._blobKeyValue = value;
            }
        }
        
        /// <summary>A blob value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobValue")]
        public virtual string BlobValue {
            get {
                return this._blobValue;
            }
            set {
                this._blobValue = value;
            }
        }
        
        /// <summary>A boolean value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("booleanValue")]
        public virtual System.Nullable<bool> BooleanValue {
            get {
                return this._booleanValue;
            }
            set {
                this._booleanValue = value;
            }
        }
        
        /// <summary>A timestamp value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dateTimeValue")]
        public virtual string DateTimeValue {
            get {
                return this._dateTimeValue;
            }
            set {
                this._dateTimeValue = value;
            }
        }
        
        /// <summary>A double value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("doubleValue")]
        public virtual System.Nullable<double> DoubleValue {
            get {
                return this._doubleValue;
            }
            set {
                this._doubleValue = value;
            }
        }
        
        /// <summary>An entity.
        ///
        ///An entity is limited to 1 megabyte when stored. That *roughly* corresponds to a limit of 1 megabyte for the serialized form of this message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityValue")]
        public virtual Entity EntityValue {
            get {
                return this._entityValue;
            }
            set {
                this._entityValue = value;
            }
        }
        
        /// <summary>If the value should be indexed.
        ///
        ///The indexed property may be set to null. When indexed is true, stringValue is limited to 500 characters and the blob value is limited to 500 bytes. Input values by default have indexed set to true; however, you can explicitly set indexed to true if you want. (An output value never has indexed explicitly set to true.) If a value is itself an entity, it cannot have indexed set to true.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("indexed")]
        public virtual System.Nullable<bool> Indexed {
            get {
                return this._indexed;
            }
            set {
                this._indexed = value;
            }
        }
        
        /// <summary>An integer value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("integerValue")]
        public virtual string IntegerValue {
            get {
                return this._integerValue;
            }
            set {
                this._integerValue = value;
            }
        }
        
        /// <summary>A unique identifier for an entity. If a key&apos;s partition id or any of its path kinds or names are reserved/read-only, the key is reserved/read-only. A reserved/read-only key is forbidden in certain documented contexts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyValue")]
        public virtual Key KeyValue {
            get {
                return this._keyValue;
            }
            set {
                this._keyValue = value;
            }
        }
        
        /// <summary>The meaning field is reserved and should not be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("meaning")]
        public virtual System.Nullable<long> Meaning {
            get {
                return this._meaning;
            }
            set {
                this._meaning = value;
            }
        }
        
        /// <summary>A UTF-8 encoded string value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stringValue")]
        public virtual string StringValue {
            get {
                return this._stringValue;
            }
            set {
                this._stringValue = value;
            }
        }
    }
}
namespace Google.Apis.Datastore.v1beta1 {
    
    
    public partial class DatastoreService : Google.Apis.Services.BaseClientService {
        
        public const string Version = "v1beta1";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private System.Collections.Generic.IDictionary<string, Google.Apis.Discovery.IParameter> _serviceParameters;
        
        public DatastoreService(Google.Apis.Services.BaseClientService.Initializer initializer) : 
                base(initializer) {
            this._datasets = new DatasetsResource(this, Authenticator);
            this.InitParameters();
        }
        
        public DatastoreService() : 
                this(new Google.Apis.Services.BaseClientService.Initializer()) {
        }
        
        public override System.Collections.Generic.IList<string> Features {
            get {
                return new string[0];
            }
        }
        
        public override string Name {
            get {
                return "datastore";
            }
        }
        
        public override string BaseUri {
            get {
                return "https://www.googleapis.com/datastore/v1beta1/datasets/";
            }
        }
        
        public override string BasePath {
            get {
                return "/datastore/v1beta1/datasets/";
            }
        }
        
        public override System.Collections.Generic.IDictionary<string, Google.Apis.Discovery.IParameter> ServiceParameters {
            get {
                return this._serviceParameters;
            }
        }
        
        private void InitParameters() {
            System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
            parameters.Add("alt", Google.Apis.Util.Utilities.CreateRuntimeParameter("alt", false, "query", "proto", null, new string[] {
                            "json",
                            "proto"}));
            parameters.Add("fields", Google.Apis.Util.Utilities.CreateRuntimeParameter("fields", false, "query", null, null, new string[0]));
            parameters.Add("key", Google.Apis.Util.Utilities.CreateRuntimeParameter("key", false, "query", null, null, new string[0]));
            parameters.Add("oauth_token", Google.Apis.Util.Utilities.CreateRuntimeParameter("oauth_token", false, "query", null, null, new string[0]));
            parameters.Add("prettyPrint", Google.Apis.Util.Utilities.CreateRuntimeParameter("prettyPrint", false, "query", "true", null, new string[0]));
            parameters.Add("quotaUser", Google.Apis.Util.Utilities.CreateRuntimeParameter("quotaUser", false, "query", null, null, new string[0]));
            parameters.Add("userIp", Google.Apis.Util.Utilities.CreateRuntimeParameter("userIp", false, "query", null, null, new string[0]));
            this._serviceParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>View your email address</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/userinfo.email")]
            UserinfoEmail,
        }
    }
    
    public class DatasetsResource {
        
        private DatastoreService service;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string Resource = "datasets";
        
        public DatasetsResource(DatastoreService service, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.service = service;
            this.authenticator = authenticator;
        }
        
        /// <summary>Allocate IDs for incomplete keys (useful for referencing an entity before it is inserted).</summary>
        /// <param name="datasetId">Required - Identifies the dataset.</param>
        public virtual AllocateIdsRequest AllocateIds(Google.Apis.Datastore.v1beta1.Data.AllocateIdsRequest body, string datasetId) {
            return new AllocateIdsRequest(service, body, datasetId);
        }
        
        /// <summary>Begin a new transaction.</summary>
        /// <param name="datasetId">Required - Identifies the dataset.</param>
        public virtual BeginTransactionRequest BeginTransaction(Google.Apis.Datastore.v1beta1.Data.BeginTransactionRequest body, string datasetId) {
            return new BeginTransactionRequest(service, body, datasetId);
        }
        
        /// <summary>Create, delete or modify some entities outside a transaction.</summary>
        /// <param name="datasetId">Required - Identifies the dataset.</param>
        public virtual BlindWriteRequest BlindWrite(Google.Apis.Datastore.v1beta1.Data.BlindWriteRequest body, string datasetId) {
            return new BlindWriteRequest(service, body, datasetId);
        }
        
        /// <summary>Commit a transaction, optionally creating, deleting or modifying some entities.</summary>
        /// <param name="datasetId">Required - Identifies the dataset.</param>
        public virtual CommitRequest Commit(Google.Apis.Datastore.v1beta1.Data.CommitRequest body, string datasetId) {
            return new CommitRequest(service, body, datasetId);
        }
        
        /// <summary>Look up some entities by key.</summary>
        /// <param name="datasetId">Required - Identifies the dataset.</param>
        public virtual LookupRequest Lookup(Google.Apis.Datastore.v1beta1.Data.LookupRequest body, string datasetId) {
            return new LookupRequest(service, body, datasetId);
        }
        
        /// <summary>Roll back a transaction.</summary>
        /// <param name="datasetId">Required - Identifies the dataset.</param>
        public virtual RollbackRequest Rollback(Google.Apis.Datastore.v1beta1.Data.RollbackRequest body, string datasetId) {
            return new RollbackRequest(service, body, datasetId);
        }
        
        /// <summary>Query for entities.</summary>
        /// <param name="datasetId">Required - Identifies the dataset.</param>
        public virtual RunQueryRequest RunQuery(Google.Apis.Datastore.v1beta1.Data.RunQueryRequest body, string datasetId) {
            return new RunQueryRequest(service, body, datasetId);
        }
        
        public class AllocateIdsRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Datastore.v1beta1.Data.AllocateIdsResponse> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private string _datasetId;
            
            private Google.Apis.Datastore.v1beta1.Data.AllocateIdsRequest _Body;
            
            public AllocateIdsRequest(Google.Apis.Services.IClientService service, Google.Apis.Datastore.v1beta1.Data.AllocateIdsRequest body, string datasetId) : 
                    base(service) {
                this.Body = body;
                this._datasetId = datasetId;
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>Identifies the dataset.</summary>
            [Google.Apis.Util.RequestParameterAttribute("datasetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string DatasetId {
                get {
                    return this._datasetId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Datastore.v1beta1.Data.AllocateIdsRequest Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            public override string MethodName {
                get {
                    return "allocateIds";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "POST";
                }
            }
            
            public override string RestPath {
                get {
                    return "{datasetId}/allocateIds";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("datasetId", Google.Apis.Util.Utilities.CreateRuntimeParameter("datasetId", true, "path", null, null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
        
        public class BeginTransactionRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Datastore.v1beta1.Data.BeginTransactionResponse> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private string _datasetId;
            
            private Google.Apis.Datastore.v1beta1.Data.BeginTransactionRequest _Body;
            
            public BeginTransactionRequest(Google.Apis.Services.IClientService service, Google.Apis.Datastore.v1beta1.Data.BeginTransactionRequest body, string datasetId) : 
                    base(service) {
                this.Body = body;
                this._datasetId = datasetId;
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>Identifies the dataset.</summary>
            [Google.Apis.Util.RequestParameterAttribute("datasetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string DatasetId {
                get {
                    return this._datasetId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Datastore.v1beta1.Data.BeginTransactionRequest Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            public override string MethodName {
                get {
                    return "beginTransaction";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "POST";
                }
            }
            
            public override string RestPath {
                get {
                    return "{datasetId}/beginTransaction";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("datasetId", Google.Apis.Util.Utilities.CreateRuntimeParameter("datasetId", true, "path", null, null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
        
        public class BlindWriteRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Datastore.v1beta1.Data.BlindWriteResponse> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private string _datasetId;
            
            private Google.Apis.Datastore.v1beta1.Data.BlindWriteRequest _Body;
            
            public BlindWriteRequest(Google.Apis.Services.IClientService service, Google.Apis.Datastore.v1beta1.Data.BlindWriteRequest body, string datasetId) : 
                    base(service) {
                this.Body = body;
                this._datasetId = datasetId;
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>Identifies the dataset.</summary>
            [Google.Apis.Util.RequestParameterAttribute("datasetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string DatasetId {
                get {
                    return this._datasetId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Datastore.v1beta1.Data.BlindWriteRequest Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            public override string MethodName {
                get {
                    return "blindWrite";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "POST";
                }
            }
            
            public override string RestPath {
                get {
                    return "{datasetId}/blindWrite";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("datasetId", Google.Apis.Util.Utilities.CreateRuntimeParameter("datasetId", true, "path", null, null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
        
        public class CommitRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Datastore.v1beta1.Data.CommitResponse> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private string _datasetId;
            
            private Google.Apis.Datastore.v1beta1.Data.CommitRequest _Body;
            
            public CommitRequest(Google.Apis.Services.IClientService service, Google.Apis.Datastore.v1beta1.Data.CommitRequest body, string datasetId) : 
                    base(service) {
                this.Body = body;
                this._datasetId = datasetId;
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>Identifies the dataset.</summary>
            [Google.Apis.Util.RequestParameterAttribute("datasetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string DatasetId {
                get {
                    return this._datasetId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Datastore.v1beta1.Data.CommitRequest Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            public override string MethodName {
                get {
                    return "commit";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "POST";
                }
            }
            
            public override string RestPath {
                get {
                    return "{datasetId}/commit";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("datasetId", Google.Apis.Util.Utilities.CreateRuntimeParameter("datasetId", true, "path", null, null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
        
        public class LookupRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Datastore.v1beta1.Data.LookupResponse> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private string _datasetId;
            
            private Google.Apis.Datastore.v1beta1.Data.LookupRequest _Body;
            
            public LookupRequest(Google.Apis.Services.IClientService service, Google.Apis.Datastore.v1beta1.Data.LookupRequest body, string datasetId) : 
                    base(service) {
                this.Body = body;
                this._datasetId = datasetId;
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>Identifies the dataset.</summary>
            [Google.Apis.Util.RequestParameterAttribute("datasetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string DatasetId {
                get {
                    return this._datasetId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Datastore.v1beta1.Data.LookupRequest Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            public override string MethodName {
                get {
                    return "lookup";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "POST";
                }
            }
            
            public override string RestPath {
                get {
                    return "{datasetId}/lookup";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("datasetId", Google.Apis.Util.Utilities.CreateRuntimeParameter("datasetId", true, "path", null, null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
        
        public class RollbackRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Datastore.v1beta1.Data.RollbackResponse> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private string _datasetId;
            
            private Google.Apis.Datastore.v1beta1.Data.RollbackRequest _Body;
            
            public RollbackRequest(Google.Apis.Services.IClientService service, Google.Apis.Datastore.v1beta1.Data.RollbackRequest body, string datasetId) : 
                    base(service) {
                this.Body = body;
                this._datasetId = datasetId;
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>Identifies the dataset.</summary>
            [Google.Apis.Util.RequestParameterAttribute("datasetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string DatasetId {
                get {
                    return this._datasetId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Datastore.v1beta1.Data.RollbackRequest Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            public override string MethodName {
                get {
                    return "rollback";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "POST";
                }
            }
            
            public override string RestPath {
                get {
                    return "{datasetId}/rollback";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("datasetId", Google.Apis.Util.Utilities.CreateRuntimeParameter("datasetId", true, "path", null, null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
        
        public class RunQueryRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Datastore.v1beta1.Data.RunQueryResponse> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private string _datasetId;
            
            private Google.Apis.Datastore.v1beta1.Data.RunQueryRequest _Body;
            
            public RunQueryRequest(Google.Apis.Services.IClientService service, Google.Apis.Datastore.v1beta1.Data.RunQueryRequest body, string datasetId) : 
                    base(service) {
                this.Body = body;
                this._datasetId = datasetId;
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>Identifies the dataset.</summary>
            [Google.Apis.Util.RequestParameterAttribute("datasetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string DatasetId {
                get {
                    return this._datasetId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Datastore.v1beta1.Data.RunQueryRequest Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            public override string MethodName {
                get {
                    return "runQuery";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "POST";
                }
            }
            
            public override string RestPath {
                get {
                    return "{datasetId}/runQuery";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("datasetId", Google.Apis.Util.Utilities.CreateRuntimeParameter("datasetId", true, "path", null, null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
    }
    
    public partial class DatastoreService {
        
        private const string Resource = "";
        
        private DatasetsResource _datasets;
        
        private Google.Apis.Services.IClientService service {
            get {
                return this;
            }
        }
        
        public virtual DatasetsResource Datasets {
            get {
                return this._datasets;
            }
        }
    }
}
