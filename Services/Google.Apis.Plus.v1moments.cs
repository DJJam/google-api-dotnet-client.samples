//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Plus.v1moments.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class ItemScope {
        
        private ItemScope _about;
        
        private System.Collections.Generic.IList<string> _additionalName;
        
        private ItemScope _address;
        
        private string _addressCountry;
        
        private string _addressLocality;
        
        private string _addressRegion;
        
        private System.Collections.Generic.IList<ItemScope> _associated_media;
        
        private System.Nullable<long> _attendeeCount;
        
        private System.Collections.Generic.IList<ItemScope> _attendees;
        
        private ItemScope _audio;
        
        private System.Collections.Generic.IList<ItemScope> _author;
        
        private string _bestRating;
        
        private string _birthDate;
        
        private ItemScope _byArtist;
        
        private string _caption;
        
        private string _contentSize;
        
        private string _contentUrl;
        
        private System.Collections.Generic.IList<ItemScope> _contributor;
        
        private string _dateCreated;
        
        private string _dateModified;
        
        private string _datePublished;
        
        private string _description;
        
        private string _duration;
        
        private string _embedUrl;
        
        private string _endDate;
        
        private string _familyName;
        
        private string _gender;
        
        private ItemScope _geo;
        
        private string _givenName;
        
        private string _height;
        
        private string _id;
        
        private string _image;
        
        private ItemScope _inAlbum;
        
        private string _kind;
        
        private System.Nullable<double> _latitude;
        
        private ItemScope _location;
        
        private System.Nullable<double> _longitude;
        
        private string _name;
        
        private ItemScope _partOfTVSeries;
        
        private System.Collections.Generic.IList<ItemScope> _performers;
        
        private string _playerType;
        
        private string _postOfficeBoxNumber;
        
        private string _postalCode;
        
        private string _ratingValue;
        
        private ItemScope _reviewRating;
        
        private string _startDate;
        
        private string _streetAddress;
        
        private string _text;
        
        private ItemScope _thumbnail;
        
        private string _thumbnailUrl;
        
        private string _tickerSymbol;
        
        private string _type;
        
        private string _url;
        
        private string _width;
        
        private string _worstRating;
        
        [Newtonsoft.Json.JsonPropertyAttribute("about")]
        public virtual ItemScope About {
            get {
                return this._about;
            }
            set {
                this._about = value;
            }
        }
        
        /// <summary>An additional name for a Person, can be used for a middle name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalName")]
        public virtual System.Collections.Generic.IList<string> AdditionalName {
            get {
                return this._additionalName;
            }
            set {
                this._additionalName = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual ItemScope Address {
            get {
                return this._address;
            }
            set {
                this._address = value;
            }
        }
        
        /// <summary>Address country.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("addressCountry")]
        public virtual string AddressCountry {
            get {
                return this._addressCountry;
            }
            set {
                this._addressCountry = value;
            }
        }
        
        /// <summary>Address locality.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("addressLocality")]
        public virtual string AddressLocality {
            get {
                return this._addressLocality;
            }
            set {
                this._addressLocality = value;
            }
        }
        
        /// <summary>Address region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("addressRegion")]
        public virtual string AddressRegion {
            get {
                return this._addressRegion;
            }
            set {
                this._addressRegion = value;
            }
        }
        
        /// <summary>The encoding.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("associated_media")]
        public virtual System.Collections.Generic.IList<ItemScope> Associated_media {
            get {
                return this._associated_media;
            }
            set {
                this._associated_media = value;
            }
        }
        
        /// <summary>Number of attendees.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attendeeCount")]
        public virtual System.Nullable<long> AttendeeCount {
            get {
                return this._attendeeCount;
            }
            set {
                this._attendeeCount = value;
            }
        }
        
        /// <summary>A person attending the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attendees")]
        public virtual System.Collections.Generic.IList<ItemScope> Attendees {
            get {
                return this._attendees;
            }
            set {
                this._attendees = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("audio")]
        public virtual ItemScope Audio {
            get {
                return this._audio;
            }
            set {
                this._audio = value;
            }
        }
        
        /// <summary>The person or persons who created this result. In the example of restaurant reviews, this might be the reviewer&apos;s name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("author")]
        public virtual System.Collections.Generic.IList<ItemScope> Author {
            get {
                return this._author;
            }
            set {
                this._author = value;
            }
        }
        
        /// <summary>Best possible rating value that a result might obtain. This property defines the upper bound for the ratingValue. For example, you might have a 5 star rating scale, you would provide 5 as the value for this property.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bestRating")]
        public virtual string BestRating {
            get {
                return this._bestRating;
            }
            set {
                this._bestRating = value;
            }
        }
        
        /// <summary>Date of birth.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("birthDate")]
        public virtual string BirthDate {
            get {
                return this._birthDate;
            }
            set {
                this._birthDate = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("byArtist")]
        public virtual ItemScope ByArtist {
            get {
                return this._byArtist;
            }
            set {
                this._byArtist = value;
            }
        }
        
        /// <summary>The caption for this object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("caption")]
        public virtual string Caption {
            get {
                return this._caption;
            }
            set {
                this._caption = value;
            }
        }
        
        /// <summary>File size in (mega/kilo) bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentSize")]
        public virtual string ContentSize {
            get {
                return this._contentSize;
            }
            set {
                this._contentSize = value;
            }
        }
        
        /// <summary>Actual bytes of the media object, for example the image file or video file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentUrl")]
        public virtual string ContentUrl {
            get {
                return this._contentUrl;
            }
            set {
                this._contentUrl = value;
            }
        }
        
        /// <summary>A list of contributors to this result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contributor")]
        public virtual System.Collections.Generic.IList<ItemScope> Contributor {
            get {
                return this._contributor;
            }
            set {
                this._contributor = value;
            }
        }
        
        /// <summary>The date the result was created such as the date that a review was first created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dateCreated")]
        public virtual string DateCreated {
            get {
                return this._dateCreated;
            }
            set {
                this._dateCreated = value;
            }
        }
        
        /// <summary>The date the result was last modified such as the date that a review was last edited.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dateModified")]
        public virtual string DateModified {
            get {
                return this._dateModified;
            }
            set {
                this._dateModified = value;
            }
        }
        
        /// <summary>The initial date that the result was published. For example, a user writes a comment on a blog, which has a result.dateCreated of when they submit it. If the blog users comment moderation, the result.datePublished value would match the date when the owner approved the message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("datePublished")]
        public virtual string DatePublished {
            get {
                return this._datePublished;
            }
            set {
                this._datePublished = value;
            }
        }
        
        /// <summary>The string that describes the content of the result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duration")]
        public virtual string Duration {
            get {
                return this._duration;
            }
            set {
                this._duration = value;
            }
        }
        
        /// <summary>A URL pointing to a player for a specific video. In general, this is the information in the src element of an embed tag and should not be the same as the content of the loc tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("embedUrl")]
        public virtual string EmbedUrl {
            get {
                return this._embedUrl;
            }
            set {
                this._embedUrl = value;
            }
        }
        
        /// <summary>The end date and time of the event (in ISO 8601 date format).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate {
            get {
                return this._endDate;
            }
            set {
                this._endDate = value;
            }
        }
        
        /// <summary>Family name. This property can be used with givenName instead of the name property.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("familyName")]
        public virtual string FamilyName {
            get {
                return this._familyName;
            }
            set {
                this._familyName = value;
            }
        }
        
        /// <summary>Gender of the person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gender")]
        public virtual string Gender {
            get {
                return this._gender;
            }
            set {
                this._gender = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("geo")]
        public virtual ItemScope Geo {
            get {
                return this._geo;
            }
            set {
                this._geo = value;
            }
        }
        
        /// <summary>Given name. This property can be used with familyName instead of the name property.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("givenName")]
        public virtual string GivenName {
            get {
                return this._givenName;
            }
            set {
                this._givenName = value;
            }
        }
        
        /// <summary>The height of the media object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("height")]
        public virtual string Height {
            get {
                return this._height;
            }
            set {
                this._height = value;
            }
        }
        
        /// <summary>An identifier for the target. Your app can choose how to identify targets. The target.id is required if you are writing an activity that does not have a corresponding web page or target.url property.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>A URL to the image that represents this result. For example, if a user writes a review of a restaurant and attaches a photo of their meal, you might use that photo as the result.image.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual string Image {
            get {
                return this._image;
            }
            set {
                this._image = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("inAlbum")]
        public virtual ItemScope InAlbum {
            get {
                return this._inAlbum;
            }
            set {
                this._inAlbum = value;
            }
        }
        
        /// <summary>Identifies this resource as an itemScope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Latitude.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latitude")]
        public virtual System.Nullable<double> Latitude {
            get {
                return this._latitude;
            }
            set {
                this._latitude = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual ItemScope Location {
            get {
                return this._location;
            }
            set {
                this._location = value;
            }
        }
        
        /// <summary>Longitude.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("longitude")]
        public virtual System.Nullable<double> Longitude {
            get {
                return this._longitude;
            }
            set {
                this._longitude = value;
            }
        }
        
        /// <summary>The name of the result. In the example of a restaurant review, this might be the summary the user gave their review such as &quot;Great ambiance, but overpriced.&quot;</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("partOfTVSeries")]
        public virtual ItemScope PartOfTVSeries {
            get {
                return this._partOfTVSeries;
            }
            set {
                this._partOfTVSeries = value;
            }
        }
        
        /// <summary>The main performer or performers of the event-for example, a presenter, musician, or actor.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("performers")]
        public virtual System.Collections.Generic.IList<ItemScope> Performers {
            get {
                return this._performers;
            }
            set {
                this._performers = value;
            }
        }
        
        /// <summary>Player type that is required. For example: Flash or Silverlight.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playerType")]
        public virtual string PlayerType {
            get {
                return this._playerType;
            }
            set {
                this._playerType = value;
            }
        }
        
        /// <summary>Post office box number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postOfficeBoxNumber")]
        public virtual string PostOfficeBoxNumber {
            get {
                return this._postOfficeBoxNumber;
            }
            set {
                this._postOfficeBoxNumber = value;
            }
        }
        
        /// <summary>Postal code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postalCode")]
        public virtual string PostalCode {
            get {
                return this._postalCode;
            }
            set {
                this._postalCode = value;
            }
        }
        
        /// <summary>Rating value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ratingValue")]
        public virtual string RatingValue {
            get {
                return this._ratingValue;
            }
            set {
                this._ratingValue = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("reviewRating")]
        public virtual ItemScope ReviewRating {
            get {
                return this._reviewRating;
            }
            set {
                this._reviewRating = value;
            }
        }
        
        /// <summary>The start date and time of the event (in ISO 8601 date format).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate {
            get {
                return this._startDate;
            }
            set {
                this._startDate = value;
            }
        }
        
        /// <summary>Street address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("streetAddress")]
        public virtual string StreetAddress {
            get {
                return this._streetAddress;
            }
            set {
                this._streetAddress = value;
            }
        }
        
        /// <summary>The text that is the result of the app activity. For example, if a user leaves a review of a restaurant, this might be the text of the review.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text {
            get {
                return this._text;
            }
            set {
                this._text = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnail")]
        public virtual ItemScope Thumbnail {
            get {
                return this._thumbnail;
            }
            set {
                this._thumbnail = value;
            }
        }
        
        /// <summary>A URL to a thumbnail image that represents this result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnailUrl")]
        public virtual string ThumbnailUrl {
            get {
                return this._thumbnailUrl;
            }
            set {
                this._thumbnailUrl = value;
            }
        }
        
        /// <summary>The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we reccommend using the controlled vocaulary of Market Identifier Codes (MIC) specified in ISO15022.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tickerSymbol")]
        public virtual string TickerSymbol {
            get {
                return this._tickerSymbol;
            }
            set {
                this._tickerSymbol = value;
            }
        }
        
        /// <summary>The schema.org URL that best describes the referenced target and matches the type of moment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
        
        /// <summary>The URL that points to the result object. For example, a permalink directly to a restaurant reviewer&apos;s comment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this._url;
            }
            set {
                this._url = value;
            }
        }
        
        /// <summary>The width of the media object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("width")]
        public virtual string Width {
            get {
                return this._width;
            }
            set {
                this._width = value;
            }
        }
        
        /// <summary>Worst possible rating value that a result might obtain. This property defines the lower bound for the ratingValue.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("worstRating")]
        public virtual string WorstRating {
            get {
                return this._worstRating;
            }
            set {
                this._worstRating = value;
            }
        }
    }
    
    public class Moment : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _id;
        
        private string _kind;
        
        private ItemScope _result;
        
        private string _startDate;
        
        private ItemScope _target;
        
        private string _type;
        
        private string _ETag;
        
        /// <summary>The moment ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>Identifies this resource as a moment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("result")]
        public virtual ItemScope Result {
            get {
                return this._result;
            }
            set {
                this._result = value;
            }
        }
        
        /// <summary>Time stamp of when the action occurred in RFC3339 format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate {
            get {
                return this._startDate;
            }
            set {
                this._startDate = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("target")]
        public virtual ItemScope Target {
            get {
                return this._target;
            }
            set {
                this._target = value;
            }
        }
        
        /// <summary>The Google schema for the type of moment to write. For example, http://schemas.google.com/AddActivity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
}
namespace Google.Apis.Plus.v1moments {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class PlusService : Google.Apis.Discovery.BaseClientService {
        
        public const string Version = "v1moments";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private System.Collections.Generic.IDictionary<string, Google.Apis.Discovery.IParameter> _serviceParameters;
        
        public PlusService(Google.Apis.Discovery.BaseClientService.Initializer initializer) : 
                base(initializer) {
            this._moments = new MomentsResource(this, Authenticator);
            this.InitParameters();
        }
        
        public PlusService() : 
                this(new Google.Apis.Discovery.BaseClientService.Initializer()) {
        }
        
        public override System.Collections.Generic.IList<string> Features {
            get {
                return new string[0];
            }
        }
        
        public override string Name {
            get {
                return "plus";
            }
        }
        
        public override string BaseUri {
            get {
                return "https://www.googleapis.com/plus/v1moments/people/";
            }
        }
        
        public override System.Collections.Generic.IDictionary<string, Google.Apis.Discovery.IParameter> ServiceParameters {
            get {
                return this._serviceParameters;
            }
        }
        
        public override Google.Apis.Requests.IRequest CreateRequest(Google.Apis.Requests.IClientServiceRequest serviceRequest) {
            Google.Apis.Requests.IRequest request = Google.Apis.Requests.Request.CreateRequest(this, serviceRequest);
            if ((string.IsNullOrEmpty(ApiKey) == false)) {
                request = request.WithKey(this.ApiKey);
            }
            return request.WithAuthentication(Authenticator);
        }
        
        private void InitParameters() {
            System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
            parameters.Add("alt", Google.Apis.Util.Utilities.CreateRuntimeParameter("alt", false, "query", "json", null, new string[] {
                            "json"}));
            parameters.Add("fields", Google.Apis.Util.Utilities.CreateRuntimeParameter("fields", false, "query", null, null, new string[0]));
            parameters.Add("key", Google.Apis.Util.Utilities.CreateRuntimeParameter("key", false, "query", null, null, new string[0]));
            parameters.Add("oauth_token", Google.Apis.Util.Utilities.CreateRuntimeParameter("oauth_token", false, "query", null, null, new string[0]));
            parameters.Add("prettyPrint", Google.Apis.Util.Utilities.CreateRuntimeParameter("prettyPrint", false, "query", "true", null, new string[0]));
            parameters.Add("quotaUser", Google.Apis.Util.Utilities.CreateRuntimeParameter("quotaUser", false, "query", null, null, new string[0]));
            parameters.Add("userIp", Google.Apis.Util.Utilities.CreateRuntimeParameter("userIp", false, "query", null, null, new string[0]));
            this._serviceParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
        }
    }
    
    public class MomentsResource {
        
        private PlusService service;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string Resource = "moments";
        
        public MomentsResource(PlusService service, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.service = service;
            this.authenticator = authenticator;
        }
        
        /// <summary>Record a moment representing a user&apos;s activity such as making a purchase or commenting on a blog.</summary>
        /// <param name="userId">Required - The ID of the user to record activities for. The only valid values are &quot;me&quot; and the ID of the authenticated user.</param>
        /// <param name="collection">Required - Must be one of the following values [vault] - The collection to which to write moments.</param>
        public virtual InsertRequest Insert(Google.Apis.Plus.v1moments.Data.Moment body, string userId, Collection collection) {
            return new InsertRequest(service, body, userId, collection);
        }
        
        /// <summary>The collection to which to write moments.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Collection {
            
            /// <summary>The default collection for writing new moments.</summary>
            [Google.Apis.Util.StringValueAttribute("vault")]
            Vault,
        }
        
        public class InsertRequest : Google.Apis.Requests.ClientServiceRequest<Google.Apis.Plus.v1moments.Data.Moment> {
            
            private string _alt;
            
            private string _fields;
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _quotaUser;
            
            private string _userIp;
            
            private Collection _collection;
            
            private System.Nullable<bool> _debug;
            
            private string _userId;
            
            private Google.Apis.Plus.v1moments.Data.Moment _Body;
            
            public InsertRequest(Google.Apis.Discovery.IClientService service, Google.Apis.Plus.v1moments.Data.Moment body, string userId, Collection collection) : 
                    base(service) {
                this.Body = body;
                this._userId = userId;
                this._collection = collection;
                this.InitParameters();
            }
            
            /// <summary>Data format for the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Alt {
                get {
                    return this._alt;
                }
                set {
                    this._alt = value;
                }
            }
            
            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields {
                get {
                    return this._fields;
                }
                set {
                    this._fields = value;
                }
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser {
                get {
                    return this._quotaUser;
                }
                set {
                    this._quotaUser = value;
                }
            }
            
            /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user limits.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UserIp {
                get {
                    return this._userIp;
                }
                set {
                    this._userIp = value;
                }
            }
            
            /// <summary>The collection to which to write moments.</summary>
            [Google.Apis.Util.RequestParameterAttribute("collection", Google.Apis.Util.RequestParameterType.Path)]
            public virtual Collection Collection {
                get {
                    return this._collection;
                }
            }
            
            /// <summary>Return the moment as written. Should be used only for debugging.</summary>
            [Google.Apis.Util.RequestParameterAttribute("debug", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Debug {
                get {
                    return this._debug;
                }
                set {
                    this._debug = value;
                }
            }
            
            /// <summary>The ID of the user to record activities for. The only valid values are "me" and the ID of the authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string UserId {
                get {
                    return this._userId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Plus.v1moments.Data.Moment Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            public override string ResourcePath {
                get {
                    return "moments";
                }
            }
            
            public override string MethodName {
                get {
                    return "insert";
                }
            }
            
            public override string HttpMethod {
                get {
                    return "POST";
                }
            }
            
            public override string RestPath {
                get {
                    return "{userId}/moments/{collection}";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
            
            private void InitParameters() {
                System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter> parameters = new System.Collections.Generic.Dictionary<string, Google.Apis.Discovery.IParameter>();
                parameters.Add("collection", Google.Apis.Util.Utilities.CreateRuntimeParameter("collection", true, "path", null, null, new string[] {
                                "vault"}));
                parameters.Add("debug", Google.Apis.Util.Utilities.CreateRuntimeParameter("debug", false, "query", null, null, new string[0]));
                parameters.Add("userId", Google.Apis.Util.Utilities.CreateRuntimeParameter("userId", true, "path", null, null, new string[0]));
                this._requestParameters = new Google.Apis.Util.ReadOnlyDictionary<string, Google.Apis.Discovery.IParameter>(parameters);
            }
        }
    }
    
    public partial class PlusService {
        
        private const string Resource = "";
        
        private MomentsResource _moments;
        
        private Google.Apis.Discovery.IClientService service {
            get {
                return this;
            }
        }
        
        public virtual MomentsResource Moments {
            get {
                return this._moments;
            }
        }
    }
}
