//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4971
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Civicinfo.us_v1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    /// <summary>Describes information about a regional election administrative area.</summary>
    public class AdministrationRegion {
        
        private AdministrativeBody _electionAdministrationBody;
        
        private AdministrationRegion _local_jurisdiction;
        
        private string _name;
        
        private System.Collections.Generic.IList<Source> _sources;
        
        /// <summary>Information about an election administrative body (e.g. County Board of Elections).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("electionAdministrationBody")]
        public virtual AdministrativeBody ElectionAdministrationBody {
            get {
                return this._electionAdministrationBody;
            }
            set {
                this._electionAdministrationBody = value;
            }
        }
        
        /// <summary>Describes information about a regional election administrative area.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("local_jurisdiction")]
        public virtual AdministrationRegion Local_jurisdiction {
            get {
                return this._local_jurisdiction;
            }
            set {
                this._local_jurisdiction = value;
            }
        }
        
        /// <summary>The name of the jurisdiction.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        /// <summary>A list of sources for this area. If multiple sources are listed the data has been aggregated from those sources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sources")]
        public virtual System.Collections.Generic.IList<Source> Sources {
            get {
                return this._sources;
            }
            set {
                this._sources = value;
            }
        }
    }
    
    /// <summary>Information about an election administrative body (e.g. County Board of Elections).</summary>
    public class AdministrativeBody {
        
        private string _absenteeVotingInfoUrl;
        
        private string _ballotInfoUrl;
        
        private SimpleAddressType _correspondenceAddress;
        
        private string _electionInfoUrl;
        
        private System.Collections.Generic.IList<ElectionOfficial> _electionOfficials;
        
        private string _electionRegistrationConfirmationUrl;
        
        private string _electionRegistrationUrl;
        
        private string _electionRulesUrl;
        
        private string _hoursOfOperation;
        
        private string _name;
        
        private SimpleAddressType _physicalAddress;
        
        private System.Collections.Generic.IList<string> _voter_services;
        
        private string _votingLocationFinderUrl;
        
        /// <summary>A URL provided by this administrative body for information on absentee</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("absenteeVotingInfoUrl")]
        public virtual string AbsenteeVotingInfoUrl {
            get {
                return this._absenteeVotingInfoUrl;
            }
            set {
                this._absenteeVotingInfoUrl = value;
            }
        }
        
        /// <summary>A URL provided by this administrative body to give contest information to</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ballotInfoUrl")]
        public virtual string BallotInfoUrl {
            get {
                return this._ballotInfoUrl;
            }
            set {
                this._ballotInfoUrl = value;
            }
        }
        
        /// <summary>A simple representation of an address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("correspondenceAddress")]
        public virtual SimpleAddressType CorrespondenceAddress {
            get {
                return this._correspondenceAddress;
            }
            set {
                this._correspondenceAddress = value;
            }
        }
        
        /// <summary>A URL provided by this administrative body for looking up general election</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("electionInfoUrl")]
        public virtual string ElectionInfoUrl {
            get {
                return this._electionInfoUrl;
            }
            set {
                this._electionInfoUrl = value;
            }
        }
        
        /// <summary>The election officials for this election administrative body.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("electionOfficials")]
        public virtual System.Collections.Generic.IList<ElectionOfficial> ElectionOfficials {
            get {
                return this._electionOfficials;
            }
            set {
                this._electionOfficials = value;
            }
        }
        
        /// <summary>A URL provided by this administrative body for confirming that the voter</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("electionRegistrationConfirmationUrl")]
        public virtual string ElectionRegistrationConfirmationUrl {
            get {
                return this._electionRegistrationConfirmationUrl;
            }
            set {
                this._electionRegistrationConfirmationUrl = value;
            }
        }
        
        /// <summary>A URL provided by this administrative body for looking up how to register</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("electionRegistrationUrl")]
        public virtual string ElectionRegistrationUrl {
            get {
                return this._electionRegistrationUrl;
            }
            set {
                this._electionRegistrationUrl = value;
            }
        }
        
        /// <summary>A URL provided by this administrative body describing election rules to</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("electionRulesUrl")]
        public virtual string ElectionRulesUrl {
            get {
                return this._electionRulesUrl;
            }
            set {
                this._electionRulesUrl = value;
            }
        }
        
        /// <summary>A description of the hours of operation for this administrative body.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hoursOfOperation")]
        public virtual string HoursOfOperation {
            get {
                return this._hoursOfOperation;
            }
            set {
                this._hoursOfOperation = value;
            }
        }
        
        /// <summary>The name of this election administrative body.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        /// <summary>A simple representation of an address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("physicalAddress")]
        public virtual SimpleAddressType PhysicalAddress {
            get {
                return this._physicalAddress;
            }
            set {
                this._physicalAddress = value;
            }
        }
        
        /// <summary>A description of the services this administrative body may provide.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("voter_services")]
        public virtual System.Collections.Generic.IList<string> Voter_services {
            get {
                return this._voter_services;
            }
            set {
                this._voter_services = value;
            }
        }
        
        /// <summary>A URL provided by this administrative body for looking up where to vote.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("votingLocationFinderUrl")]
        public virtual string VotingLocationFinderUrl {
            get {
                return this._votingLocationFinderUrl;
            }
            set {
                this._votingLocationFinderUrl = value;
            }
        }
    }
    
    /// <summary>Information about a candidate running for elected office.</summary>
    public class Candidate {
        
        private string _candidateUrl;
        
        private System.Collections.Generic.IList<Channel> _channels;
        
        private string _email;
        
        private string _name;
        
        private string _orderOnBallot;
        
        private string _party;
        
        private string _phone;
        
        private string _photoUrl;
        
        /// <summary>The URL for the candidate&apos;s campaign web site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("candidateUrl")]
        public virtual string CandidateUrl {
            get {
                return this._candidateUrl;
            }
            set {
                this._candidateUrl = value;
            }
        }
        
        /// <summary>A list of known (social) media channels for this candidate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channels")]
        public virtual System.Collections.Generic.IList<Channel> Channels {
            get {
                return this._channels;
            }
            set {
                this._channels = value;
            }
        }
        
        /// <summary>The email address for the candidate&apos;s campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email {
            get {
                return this._email;
            }
            set {
                this._email = value;
            }
        }
        
        /// <summary>The candidate&apos;s name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        /// <summary>The order the candidate appears on the ballot for this contest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderOnBallot")]
        public virtual string OrderOnBallot {
            get {
                return this._orderOnBallot;
            }
            set {
                this._orderOnBallot = value;
            }
        }
        
        /// <summary>The full name of the party the candidate is a member of.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("party")]
        public virtual string Party {
            get {
                return this._party;
            }
            set {
                this._party = value;
            }
        }
        
        /// <summary>The voice phone number for the candidate&apos;s campaign office.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phone")]
        public virtual string Phone {
            get {
                return this._phone;
            }
            set {
                this._phone = value;
            }
        }
        
        /// <summary>A URL for a photo of the candidate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("photoUrl")]
        public virtual string PhotoUrl {
            get {
                return this._photoUrl;
            }
            set {
                this._photoUrl = value;
            }
        }
    }
    
    /// <summary>A social media or web channel for a candidate.</summary>
    public class Channel {
        
        private string _id;
        
        private string _type;
        
        /// <summary>The unique public identifier for the candidate&apos;s channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of channel. The following is a list of types of channels, but is not exhaustive. More channel types may be added at a later time. One of: GooglePlus, YouTube, Facebook, Twitter</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
    }
    
    /// <summary>Information about a contest that appears on a voter&apos;s ballot.</summary>
    public class Contest {
        
        private string _ballotPlacement;
        
        private System.Collections.Generic.IList<Candidate> _candidates;
        
        private ElectoralDistrict _district;
        
        private string _electorateSpecifications;
        
        private string _level;
        
        private string _numberElected;
        
        private string _numberVotingFor;
        
        private string _office;
        
        private string _primaryParty;
        
        private System.Collections.Generic.IList<Source> _sources;
        
        private string _special;
        
        private string _type;
        
        /// <summary>A number specifying the position of this contest on the voter&apos;s ballot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ballotPlacement")]
        public virtual string BallotPlacement {
            get {
                return this._ballotPlacement;
            }
            set {
                this._ballotPlacement = value;
            }
        }
        
        /// <summary>The candidate choices for this contest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("candidates")]
        public virtual System.Collections.Generic.IList<Candidate> Candidates {
            get {
                return this._candidates;
            }
            set {
                this._candidates = value;
            }
        }
        
        /// <summary>Describes the geographic scope of a contest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("district")]
        public virtual ElectoralDistrict District {
            get {
                return this._district;
            }
            set {
                this._district = value;
            }
        }
        
        /// <summary>A description of any additional eligibility requirements for voting in this contest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("electorateSpecifications")]
        public virtual string ElectorateSpecifications {
            get {
                return this._electorateSpecifications;
            }
            set {
                this._electorateSpecifications = value;
            }
        }
        
        /// <summary>The level of office for this contest. One of: federal, state, county, city, other</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("level")]
        public virtual string Level {
            get {
                return this._level;
            }
            set {
                this._level = value;
            }
        }
        
        /// <summary>The number of candidates that will be elected to office in this contest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numberElected")]
        public virtual string NumberElected {
            get {
                return this._numberElected;
            }
            set {
                this._numberElected = value;
            }
        }
        
        /// <summary>The number of candidates that a voter may vote for in this contest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numberVotingFor")]
        public virtual string NumberVotingFor {
            get {
                return this._numberVotingFor;
            }
            set {
                this._numberVotingFor = value;
            }
        }
        
        /// <summary>The name of the office for this contest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("office")]
        public virtual string Office {
            get {
                return this._office;
            }
            set {
                this._office = value;
            }
        }
        
        /// <summary>If this is a partisan election, the name of the party it is for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryParty")]
        public virtual string PrimaryParty {
            get {
                return this._primaryParty;
            }
            set {
                this._primaryParty = value;
            }
        }
        
        /// <summary>A list of sources for this contest. If multiple sources are listed, the data has been aggregated from those sources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sources")]
        public virtual System.Collections.Generic.IList<Source> Sources {
            get {
                return this._sources;
            }
            set {
                this._sources = value;
            }
        }
        
        /// <summary>&quot;Yes&quot; or &quot;No&quot; depending on whether this a contest being held outside the normal election cycle.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("special")]
        public virtual string Special {
            get {
                return this._special;
            }
            set {
                this._special = value;
            }
        }
        
        /// <summary>The type of contest. Usually this will be General, Primary, or Run-off.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
    }
    
    /// <summary>Information about the election that was queried.</summary>
    public class Election {
        
        private string _electionDay;
        
        private string _id;
        
        private string _name;
        
        /// <summary>Day of the election in YYYY-MM-DD format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("electionDay")]
        public virtual string ElectionDay {
            get {
                return this._electionDay;
            }
            set {
                this._electionDay = value;
            }
        }
        
        /// <summary>The unique ID of this election.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>A displayable name for the election.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
    }
    
    /// <summary>Information about individual election officials.</summary>
    public class ElectionOfficial {
        
        private string _emailAddress;
        
        private string _faxNumber;
        
        private string _name;
        
        private string _officePhoneNumber;
        
        private string _title;
        
        /// <summary>The email address of the election official.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("emailAddress")]
        public virtual string EmailAddress {
            get {
                return this._emailAddress;
            }
            set {
                this._emailAddress = value;
            }
        }
        
        /// <summary>The fax number of the election official.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("faxNumber")]
        public virtual string FaxNumber {
            get {
                return this._faxNumber;
            }
            set {
                this._faxNumber = value;
            }
        }
        
        /// <summary>The full name of the election official.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        /// <summary>The office phone number of the election official.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("officePhoneNumber")]
        public virtual string OfficePhoneNumber {
            get {
                return this._officePhoneNumber;
            }
            set {
                this._officePhoneNumber = value;
            }
        }
        
        /// <summary>The title of the election official.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
    }
    
    /// <summary>The list of elections available for this version of the API.</summary>
    public class ElectionsQueryResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Election> _elections;
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>A list of available elections</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("elections")]
        public virtual System.Collections.Generic.IList<Election> Elections {
            get {
                return this._elections;
            }
            set {
                this._elections = value;
            }
        }
        
        /// <summary>The kind, fixed to &quot;civicinfo#electionsqueryresponse&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    /// <summary>Describes the geographic scope of a contest.</summary>
    public class ElectoralDistrict {
        
        private string _id;
        
        private string _name;
        
        private string _scope;
        
        /// <summary>An identifier for this district, relative to its scope. For example, the 34th State Senate district would have id &quot;34&quot; and a scope of stateUpper.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The name of the district.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        /// <summary>The geographic scope of this district. If unspecified the district&apos;s geography is not known. One of: statewide, congressional, stateUpper, stateLower, countywide, judicial, schoolBoard, cityWide, special</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scope")]
        public virtual string Scope {
            get {
                return this._scope;
            }
            set {
                this._scope = value;
            }
        }
    }
    
    /// <summary>A location where a voter can vote. This may be an early vote site or an election day voting location.</summary>
    public class PollingLocation {
        
        private SimpleAddressType _address;
        
        private string _endDate;
        
        private string _name;
        
        private string _pollingHours;
        
        private System.Collections.Generic.IList<Source> _sources;
        
        private string _startDate;
        
        private string _voterServices;
        
        /// <summary>A simple representation of an address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual SimpleAddressType Address {
            get {
                return this._address;
            }
            set {
                this._address = value;
            }
        }
        
        /// <summary>The last date that this early vote site may be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate {
            get {
                return this._endDate;
            }
            set {
                this._endDate = value;
            }
        }
        
        /// <summary>The name of the early vote site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        /// <summary>A description of when this polling location is open.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pollingHours")]
        public virtual string PollingHours {
            get {
                return this._pollingHours;
            }
            set {
                this._pollingHours = value;
            }
        }
        
        /// <summary>A list of sources for this polling location. If multiple sources are listed the data has been aggregated from those sources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sources")]
        public virtual System.Collections.Generic.IList<Source> Sources {
            get {
                return this._sources;
            }
            set {
                this._sources = value;
            }
        }
        
        /// <summary>The first date that this early vote site may be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate {
            get {
                return this._startDate;
            }
            set {
                this._startDate = value;
            }
        }
        
        /// <summary>The services provided by this early vote site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("voterServices")]
        public virtual string VoterServices {
            get {
                return this._voterServices;
            }
            set {
                this._voterServices = value;
            }
        }
    }
    
    /// <summary>A simple representation of an address.</summary>
    public class SimpleAddressType {
        
        private string _city;
        
        private string _line1;
        
        private string _line2;
        
        private string _line3;
        
        private string _locationName;
        
        private string _state;
        
        private string _zip;
        
        /// <summary>The city or town for the address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("city")]
        public virtual string City {
            get {
                return this._city;
            }
            set {
                this._city = value;
            }
        }
        
        /// <summary>The street name and number of this address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("line1")]
        public virtual string Line1 {
            get {
                return this._line1;
            }
            set {
                this._line1 = value;
            }
        }
        
        /// <summary>The second line the address, if needed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("line2")]
        public virtual string Line2 {
            get {
                return this._line2;
            }
            set {
                this._line2 = value;
            }
        }
        
        /// <summary>The third line of the address, if needed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("line3")]
        public virtual string Line3 {
            get {
                return this._line3;
            }
            set {
                this._line3 = value;
            }
        }
        
        /// <summary>The name of the location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationName")]
        public virtual string LocationName {
            get {
                return this._locationName;
            }
            set {
                this._locationName = value;
            }
        }
        
        /// <summary>The US two letter state abbreviation of the address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State {
            get {
                return this._state;
            }
            set {
                this._state = value;
            }
        }
        
        /// <summary>The US Postal Zip Code of the address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zip")]
        public virtual string Zip {
            get {
                return this._zip;
            }
            set {
                this._zip = value;
            }
        }
    }
    
    /// <summary>Contains information about the data source for the element containing it.</summary>
    public class Source {
        
        private string _name;
        
        private System.Nullable<bool> _official;
        
        /// <summary>The name of the data source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        /// <summary>Whether this data comes from an official government source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("official")]
        public virtual System.Nullable<bool> Official {
            get {
                return this._official;
            }
            set {
                this._official = value;
            }
        }
    }
    
    /// <summary>A request for information about a voter.</summary>
    public class VoterInfoRequest {
        
        private string _address;
        
        /// <summary>The registered address of the voter to look up.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual string Address {
            get {
                return this._address;
            }
            set {
                this._address = value;
            }
        }
    }
    
    /// <summary>The result of a voter info lookup query.</summary>
    public class VoterInfoResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Contest> _contests;
        
        private System.Collections.Generic.IList<PollingLocation> _earlyVoteSites;
        
        private Election _election;
        
        private string _kind;
        
        private SimpleAddressType _normalizedInput;
        
        private System.Collections.Generic.IList<PollingLocation> _pollingLocations;
        
        private System.Collections.Generic.IList<AdministrationRegion> _state;
        
        private string _status;
        
        private string _ETag;
        
        /// <summary>Contests that will appear on the voter&apos;s ballot</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contests")]
        public virtual System.Collections.Generic.IList<Contest> Contests {
            get {
                return this._contests;
            }
            set {
                this._contests = value;
            }
        }
        
        /// <summary>Locations where the voter is eligible to vote early, prior to election day</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("earlyVoteSites")]
        public virtual System.Collections.Generic.IList<PollingLocation> EarlyVoteSites {
            get {
                return this._earlyVoteSites;
            }
            set {
                this._earlyVoteSites = value;
            }
        }
        
        /// <summary>Information about the election that was queried.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("election")]
        public virtual Election Election {
            get {
                return this._election;
            }
            set {
                this._election = value;
            }
        }
        
        /// <summary>The kind, fixed to &quot;civicinfo#voterinforesponse&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>A simple representation of an address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("normalizedInput")]
        public virtual SimpleAddressType NormalizedInput {
            get {
                return this._normalizedInput;
            }
            set {
                this._normalizedInput = value;
            }
        }
        
        /// <summary>Locations where the voter is eligible to vote on election day. For states with mail-in voting only, these locations will be nearby drop box locations. Drop box locations are free to the voter and may be used instead of placing the ballot in the mail.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pollingLocations")]
        public virtual System.Collections.Generic.IList<PollingLocation> PollingLocations {
            get {
                return this._pollingLocations;
            }
            set {
                this._pollingLocations = value;
            }
        }
        
        /// <summary>Local Election Information for the state that the voter votes in. For the US, there will only be one element in this array.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual System.Collections.Generic.IList<AdministrationRegion> State {
            get {
                return this._state;
            }
            set {
                this._state = value;
            }
        }
        
        /// <summary>The result of the request. One of: success, noStreetSegmentFound, addressUnparseable, noAddressParameter, multipleStreetSegmentsFound, electionOver, electionUnknown, internalLookupFailure</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
}
namespace Google.Apis.Civicinfo.us_v1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class CivicinfoService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService _service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"discoveryVersion\":\"v1\",\"id\":\"civicinfo:us_v1" +
            "\",\"name\":\"civicinfo\",\"version\":\"us_v1\",\"revision\":\"20120904\",\"title\":\"Google Civ" +
            "ic Information API\",\"description\":\"An API for accessing civic information.\",\"ico" +
            "ns\":{\"x16\":\"http://www.google.com/images/icons/product/search-16.gif\",\"x32\":\"htt" +
            "p://www.google.com/images/icons/product/search-32.gif\"},\"documentationLink\":\"htt" +
            "ps://developers.google.com/civic-information\",\"protocol\":\"rest\",\"baseUrl\":\"https" +
            "://www.googleapis.com/civicinfo/us_v1/\",\"basePath\":\"/civicinfo/us_v1/\",\"rootUrl\"" +
            ":\"https://www.googleapis.com/\",\"servicePath\":\"civicinfo/us_v1/\",\"batchPath\":\"bat" +
            "ch\",\"parameters\":{\"alt\":{\"type\":\"string\",\"description\":\"Data format for the resp" +
            "onse.\",\"default\":\"json\",\"enum\":[\"json\"],\"enumDescriptions\":[\"Responses with Cont" +
            "ent-Type of application/json\"],\"location\":\"query\"},\"fields\":{\"type\":\"string\",\"de" +
            "scription\":\"Selector specifying which fields to include in a partial response.\"," +
            "\"location\":\"query\"},\"key\":{\"type\":\"string\",\"description\":\"API key. Your API key " +
            "identifies your project and provides you with API access, quota, and reports. Re" +
            "quired unless you provide an OAuth 2.0 token.\",\"location\":\"query\"},\"oauth_token\"" +
            ":{\"type\":\"string\",\"description\":\"OAuth 2.0 token for the current user.\",\"locatio" +
            "n\":\"query\"},\"prettyPrint\":{\"type\":\"boolean\",\"description\":\"Returns response with" +
            " indentations and line breaks.\",\"default\":\"true\",\"location\":\"query\"},\"quotaUser\"" +
            ":{\"type\":\"string\",\"description\":\"Available to use for quota purposes for server-" +
            "side applications. Can be any arbitrary string assigned to a user, but should no" +
            "t exceed 40 characters. Overrides userIp if both are provided.\",\"location\":\"quer" +
            "y\"},\"userIp\":{\"type\":\"string\",\"description\":\"IP address of the site where the re" +
            "quest originates. Use this if you want to enforce per-user limits.\",\"location\":\"" +
            "query\"}},\"schemas\":{\"AdministrationRegion\":{\"id\":\"AdministrationRegion\",\"type\":\"" +
            "object\",\"description\":\"Describes information about a regional election administr" +
            "ative area.\",\"properties\":{\"electionAdministrationBody\":{\"$ref\":\"AdministrativeB" +
            "ody\",\"description\":\"The election administration body for this area.\"},\"local_jur" +
            "isdiction\":{\"$ref\":\"AdministrationRegion\",\"description\":\"The city or county that" +
            " provides election information for this voter. This object can have the same ele" +
            "ments as state.\"},\"name\":{\"type\":\"string\",\"description\":\"The name of the jurisdi" +
            "ction.\"},\"sources\":{\"type\":\"array\",\"description\":\"A list of sources for this are" +
            "a. If multiple sources are listed the data has been aggregated from those source" +
            "s.\",\"items\":{\"$ref\":\"Source\"}}}},\"AdministrativeBody\":{\"id\":\"AdministrativeBody\"" +
            ",\"type\":\"object\",\"description\":\"Information about an election administrative bod" +
            "y (e.g. County Board of Elections).\",\"properties\":{\"absenteeVotingInfoUrl\":{\"typ" +
            "e\":\"string\",\"description\":\"A URL provided by this administrative body for inform" +
            "ation on absentee\"},\"ballotInfoUrl\":{\"type\":\"string\",\"description\":\"A URL provid" +
            "ed by this administrative body to give contest information to\"},\"correspondenceA" +
            "ddress\":{\"$ref\":\"SimpleAddressType\",\"description\":\"The mailing address of this a" +
            "dministrative body.\"},\"electionInfoUrl\":{\"type\":\"string\",\"description\":\"A URL pr" +
            "ovided by this administrative body for looking up general election\"},\"electionOf" +
            "ficials\":{\"type\":\"array\",\"description\":\"The election officials for this election" +
            " administrative body.\",\"items\":{\"$ref\":\"ElectionOfficial\"}},\"electionRegistratio" +
            "nConfirmationUrl\":{\"type\":\"string\",\"description\":\"A URL provided by this adminis" +
            "trative body for confirming that the voter\"},\"electionRegistrationUrl\":{\"type\":\"" +
            "string\",\"description\":\"A URL provided by this administrative body for looking up" +
            " how to register\"},\"electionRulesUrl\":{\"type\":\"string\",\"description\":\"A URL prov" +
            "ided by this administrative body describing election rules to\"},\"hoursOfOperatio" +
            "n\":{\"type\":\"string\",\"description\":\"A description of the hours of operation for t" +
            "his administrative body.\"},\"name\":{\"type\":\"string\",\"description\":\"The name of th" +
            "is election administrative body.\"},\"physicalAddress\":{\"$ref\":\"SimpleAddressType\"" +
            ",\"description\":\"The physical address of this administrative body.\"},\"voter_servi" +
            "ces\":{\"type\":\"array\",\"description\":\"A description of the services this administr" +
            "ative body may provide.\",\"items\":{\"type\":\"string\"}},\"votingLocationFinderUrl\":{\"" +
            "type\":\"string\",\"description\":\"A URL provided by this administrative body for loo" +
            "king up where to vote.\"}}},\"Candidate\":{\"id\":\"Candidate\",\"type\":\"object\",\"descri" +
            "ption\":\"Information about a candidate running for elected office.\",\"properties\":" +
            "{\"candidateUrl\":{\"type\":\"string\",\"description\":\"The URL for the candidate\'s camp" +
            "aign web site.\"},\"channels\":{\"type\":\"array\",\"description\":\"A list of known (soci" +
            "al) media channels for this candidate.\",\"items\":{\"$ref\":\"Channel\"}},\"email\":{\"ty" +
            "pe\":\"string\",\"description\":\"The email address for the candidate\'s campaign.\"},\"n" +
            "ame\":{\"type\":\"string\",\"description\":\"The candidate\'s name.\"},\"orderOnBallot\":{\"t" +
            "ype\":\"string\",\"description\":\"The order the candidate appears on the ballot for t" +
            "his contest.\",\"format\":\"int64\"},\"party\":{\"type\":\"string\",\"description\":\"The full" +
            " name of the party the candidate is a member of.\"},\"phone\":{\"type\":\"string\",\"des" +
            "cription\":\"The voice phone number for the candidate\'s campaign office.\"},\"photoU" +
            "rl\":{\"type\":\"string\",\"description\":\"A URL for a photo of the candidate.\"}}},\"Cha" +
            "nnel\":{\"id\":\"Channel\",\"type\":\"object\",\"description\":\"A social media or web chann" +
            "el for a candidate.\",\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"The uniq" +
            "ue public identifier for the candidate\'s channel.\"},\"type\":{\"type\":\"string\",\"des" +
            "cription\":\"The type of channel. The following is a list of types of channels, bu" +
            "t is not exhaustive. More channel types may be added at a later time. One of: Go" +
            "oglePlus, YouTube, Facebook, Twitter\"}}},\"Contest\":{\"id\":\"Contest\",\"type\":\"objec" +
            "t\",\"description\":\"Information about a contest that appears on a voter\'s ballot.\"" +
            ",\"properties\":{\"ballotPlacement\":{\"type\":\"string\",\"description\":\"A number specif" +
            "ying the position of this contest on the voter\'s ballot.\",\"format\":\"int64\"},\"can" +
            "didates\":{\"type\":\"array\",\"description\":\"The candidate choices for this contest.\"" +
            ",\"items\":{\"$ref\":\"Candidate\"}},\"district\":{\"$ref\":\"ElectoralDistrict\",\"descripti" +
            "on\":\"Information about the electoral district that this contest is in.\"},\"electo" +
            "rateSpecifications\":{\"type\":\"string\",\"description\":\"A description of any additio" +
            "nal eligibility requirements for voting in this contest.\"},\"level\":{\"type\":\"stri" +
            "ng\",\"description\":\"The level of office for this contest. One of: federal, state," +
            " county, city, other\"},\"numberElected\":{\"type\":\"string\",\"description\":\"The numbe" +
            "r of candidates that will be elected to office in this contest.\",\"format\":\"int64" +
            "\"},\"numberVotingFor\":{\"type\":\"string\",\"description\":\"The number of candidates th" +
            "at a voter may vote for in this contest.\",\"format\":\"int64\"},\"office\":{\"type\":\"st" +
            "ring\",\"description\":\"The name of the office for this contest.\"},\"primaryParty\":{" +
            "\"type\":\"string\",\"description\":\"If this is a partisan election, the name of the p" +
            "arty it is for.\"},\"sources\":{\"type\":\"array\",\"description\":\"A list of sources for" +
            " this contest. If multiple sources are listed, the data has been aggregated from" +
            " those sources.\",\"items\":{\"$ref\":\"Source\"}},\"special\":{\"type\":\"string\",\"descript" +
            "ion\":\"\\\"Yes\\\" or \\\"No\\\" depending on whether this a contest being held outside t" +
            "he normal election cycle.\"},\"type\":{\"type\":\"string\",\"description\":\"The type of c" +
            "ontest. Usually this will be General, Primary, or Run-off.\"}}},\"Election\":{\"id\":" +
            "\"Election\",\"type\":\"object\",\"description\":\"Information about the election that wa" +
            "s queried.\",\"properties\":{\"electionDay\":{\"type\":\"string\",\"description\":\"Day of t" +
            "he election in YYYY-MM-DD format.\"},\"id\":{\"type\":\"string\",\"description\":\"The uni" +
            "que ID of this election.\",\"format\":\"int64\"},\"name\":{\"type\":\"string\",\"description" +
            "\":\"A displayable name for the election.\"}}},\"ElectionOfficial\":{\"id\":\"ElectionOf" +
            "ficial\",\"type\":\"object\",\"description\":\"Information about individual election off" +
            "icials.\",\"properties\":{\"emailAddress\":{\"type\":\"string\",\"description\":\"The email " +
            "address of the election official.\"},\"faxNumber\":{\"type\":\"string\",\"description\":\"" +
            "The fax number of the election official.\"},\"name\":{\"type\":\"string\",\"description\"" +
            ":\"The full name of the election official.\"},\"officePhoneNumber\":{\"type\":\"string\"" +
            ",\"description\":\"The office phone number of the election official.\"},\"title\":{\"ty" +
            "pe\":\"string\",\"description\":\"The title of the election official.\"}}},\"ElectionsQu" +
            "eryResponse\":{\"id\":\"ElectionsQueryResponse\",\"type\":\"object\",\"description\":\"The l" +
            "ist of elections available for this version of the API.\",\"properties\":{\"election" +
            "s\":{\"type\":\"array\",\"description\":\"A list of available elections\",\"items\":{\"$ref\"" +
            ":\"Election\"}},\"kind\":{\"type\":\"string\",\"description\":\"The kind, fixed to \\\"civici" +
            "nfo#electionsqueryresponse\\\".\",\"default\":\"civicinfo#electionsqueryresponse\"}}},\"" +
            "ElectoralDistrict\":{\"id\":\"ElectoralDistrict\",\"type\":\"object\",\"description\":\"Desc" +
            "ribes the geographic scope of a contest.\",\"properties\":{\"id\":{\"type\":\"string\",\"d" +
            "escription\":\"An identifier for this district, relative to its scope. For example" +
            ", the 34th State Senate district would have id \\\"34\\\" and a scope of stateUpper." +
            "\"},\"name\":{\"type\":\"string\",\"description\":\"The name of the district.\"},\"scope\":{\"" +
            "type\":\"string\",\"description\":\"The geographic scope of this district. If unspecif" +
            "ied the district\'s geography is not known. One of: statewide, congressional, sta" +
            "teUpper, stateLower, countywide, judicial, schoolBoard, cityWide, special\"}}},\"P" +
            "ollingLocation\":{\"id\":\"PollingLocation\",\"type\":\"object\",\"description\":\"A locatio" +
            "n where a voter can vote. This may be an early vote site or an election day voti" +
            "ng location.\",\"properties\":{\"address\":{\"$ref\":\"SimpleAddressType\",\"description\":" +
            "\"The address of the polling location.\"},\"endDate\":{\"type\":\"string\",\"description\"" +
            ":\"The last date that this early vote site may be used.\"},\"name\":{\"type\":\"string\"" +
            ",\"description\":\"The name of the early vote site.\"},\"pollingHours\":{\"type\":\"strin" +
            "g\",\"description\":\"A description of when this polling location is open.\"},\"source" +
            "s\":{\"type\":\"array\",\"description\":\"A list of sources for this polling location. I" +
            "f multiple sources are listed the data has been aggregated from those sources.\"," +
            "\"items\":{\"$ref\":\"Source\"}},\"startDate\":{\"type\":\"string\",\"description\":\"The first" +
            " date that this early vote site may be used.\"},\"voterServices\":{\"type\":\"string\"," +
            "\"description\":\"The services provided by this early vote site.\"}}},\"SimpleAddress" +
            "Type\":{\"id\":\"SimpleAddressType\",\"type\":\"object\",\"description\":\"A simple represen" +
            "tation of an address.\",\"properties\":{\"city\":{\"type\":\"string\",\"description\":\"The " +
            "city or town for the address.\"},\"line1\":{\"type\":\"string\",\"description\":\"The stre" +
            "et name and number of this address.\"},\"line2\":{\"type\":\"string\",\"description\":\"Th" +
            "e second line the address, if needed.\"},\"line3\":{\"type\":\"string\",\"description\":\"" +
            "The third line of the address, if needed.\"},\"locationName\":{\"type\":\"string\",\"des" +
            "cription\":\"The name of the location.\"},\"state\":{\"type\":\"string\",\"description\":\"T" +
            "he US two letter state abbreviation of the address.\"},\"zip\":{\"type\":\"string\",\"de" +
            "scription\":\"The US Postal Zip Code of the address.\"}}},\"Source\":{\"id\":\"Source\",\"" +
            "type\":\"object\",\"description\":\"Contains information about the data source for the" +
            " element containing it.\",\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"Th" +
            "e name of the data source.\"},\"official\":{\"type\":\"boolean\",\"description\":\"Whether" +
            " this data comes from an official government source.\"}}},\"VoterInfoRequest\":{\"id" +
            "\":\"VoterInfoRequest\",\"type\":\"object\",\"description\":\"A request for information ab" +
            "out a voter.\",\"properties\":{\"address\":{\"type\":\"string\",\"description\":\"The regist" +
            "ered address of the voter to look up.\"}}},\"VoterInfoResponse\":{\"id\":\"VoterInfoRe" +
            "sponse\",\"type\":\"object\",\"description\":\"The result of a voter info lookup query.\"" +
            ",\"properties\":{\"contests\":{\"type\":\"array\",\"description\":\"Contests that will appe" +
            "ar on the voter\'s ballot\",\"items\":{\"$ref\":\"Contest\"}},\"earlyVoteSites\":{\"type\":\"" +
            "array\",\"description\":\"Locations where the voter is eligible to vote early, prior" +
            " to election day\",\"items\":{\"$ref\":\"PollingLocation\"}},\"election\":{\"$ref\":\"Electi" +
            "on\",\"description\":\"The election that was queried.\"},\"kind\":{\"type\":\"string\",\"des" +
            "cription\":\"The kind, fixed to \\\"civicinfo#voterinforesponse\\\".\",\"default\":\"civic" +
            "info#voterinforesponse\"},\"normalizedInput\":{\"$ref\":\"SimpleAddressType\",\"descript" +
            "ion\":\"The normalized version of the requested address\"},\"pollingLocations\":{\"typ" +
            "e\":\"array\",\"description\":\"Locations where the voter is eligible to vote on elect" +
            "ion day. For states with mail-in voting only, these locations will be nearby dro" +
            "p box locations. Drop box locations are free to the voter and may be used instea" +
            "d of placing the ballot in the mail.\",\"items\":{\"$ref\":\"PollingLocation\"}},\"state" +
            "\":{\"type\":\"array\",\"description\":\"Local Election Information for the state that t" +
            "he voter votes in. For the US, there will only be one element in this array.\",\"i" +
            "tems\":{\"$ref\":\"AdministrationRegion\"}},\"status\":{\"type\":\"string\",\"description\":\"" +
            "The result of the request. One of: success, noStreetSegmentFound, addressUnparse" +
            "able, noAddressParameter, multipleStreetSegmentsFound, electionOver, electionUnk" +
            "nown, internalLookupFailure\"}}}},\"resources\":{\"elections\":{\"methods\":{\"electionQ" +
            "uery\":{\"id\":\"civicinfo.elections.electionQuery\",\"path\":\"elections\",\"httpMethod\":" +
            "\"GET\",\"description\":\"List of available elections to query.\",\"response\":{\"$ref\":\"" +
            "ElectionsQueryResponse\"}},\"voterInfoQuery\":{\"id\":\"civicinfo.elections.voterInfoQ" +
            "uery\",\"path\":\"voterinfo/{electionId}/lookup\",\"httpMethod\":\"POST\",\"description\":\"" +
            "Looks up information relevant to a voter based on the voter\'s registered address" +
            ".\",\"parameters\":{\"electionId\":{\"type\":\"string\",\"description\":\"The unique ID of t" +
            "he election to look up. A list of election IDs can be obtained at.https://www.go" +
            "ogleapis.com/civicinfo/{version}/elections\",\"required\":true,\"format\":\"int64\",\"lo" +
            "cation\":\"path\"},\"officialOnly\":{\"type\":\"boolean\",\"description\":\"If set to true, " +
            "only data from official state sources will be returned.\",\"location\":\"query\"}},\"p" +
            "arameterOrder\":[\"electionId\"],\"request\":{\"$ref\":\"VoterInfoRequest\"},\"response\":{" +
            "\"$ref\":\"VoterInfoResponse\"}}}}}}";
        
        public const string Version = "us_v1";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string _Key;
        
        protected CivicinfoService(Google.Apis.Discovery.IService _service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this._service = _service;
            this._authenticator = _authenticator;
            this._elections = new ElectionsResource(this, _authenticator);
        }
        
        public CivicinfoService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public CivicinfoService(Google.Apis.Authentication.IAuthenticator _authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(CivicinfoService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameters(new System.Uri("https://www.googleapis.com/civicinfo/us_v1/"))), _authenticator) {
        }
        
        public Google.Apis.Authentication.IAuthenticator Authenticator {
            get {
                return this._authenticator;
            }
        }
        
        public virtual string Name {
            get {
                return "civicinfo";
            }
        }
        
        public virtual string BaseUri {
            get {
                return "https://www.googleapis.com/civicinfo/us_v1/";
            }
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this._Key;
            }
            set {
                this._Key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this._service.CreateRequest(resource, method);
            if ((string.IsNullOrEmpty(Key) == false)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(_authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            _service.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return _service.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return _service.DeserializeResponse<T>(response);
        }
    }
    
    public class ElectionsResource {
        
        private CivicinfoService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "elections";
        
        public ElectionsResource(CivicinfoService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>List of available elections to query.</summary>
        public virtual ElectionQueryRequest ElectionQuery() {
            return new ElectionQueryRequest(service);
        }
        
        /// <summary>Looks up information relevant to a voter based on the voter&apos;s registered address.</summary>
        /// <param name="electionId">Required - The unique ID of the election to look up. A list of election IDs can be obtained at.https://www.googleapis.com/civicinfo/{version}/elections</param>
        public virtual VoterInfoQueryRequest VoterInfoQuery(Google.Apis.Civicinfo.us_v1.Data.VoterInfoRequest body, string electionId) {
            return new VoterInfoQueryRequest(service, body, electionId);
        }
        
        public class ElectionQueryRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Civicinfo.us_v1.Data.ElectionsQueryResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            public ElectionQueryRequest(Google.Apis.Discovery.IRequestProvider service) : 
                    base(service) {
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "elections";
                }
            }
            
            protected override string MethodName {
                get {
                    return "electionQuery";
                }
            }
        }
        
        public class VoterInfoQueryRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Civicinfo.us_v1.Data.VoterInfoResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _electionId;
            
            private System.Nullable<bool> _officialOnly;
            
            private Google.Apis.Civicinfo.us_v1.Data.VoterInfoRequest _Body;
            
            public VoterInfoQueryRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Civicinfo.us_v1.Data.VoterInfoRequest body, string electionId) : 
                    base(service) {
                this.Body = body;
                this._electionId = electionId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The unique ID of the election to look up. A list of election IDs can be obtained at.https://www.googleapis.com/civicinfo/{version}/elections</summary>
            [Google.Apis.Util.RequestParameterAttribute("electionId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ElectionId {
                get {
                    return this._electionId;
                }
            }
            
            /// <summary>If set to true, only data from official state sources will be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("officialOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> OfficialOnly {
                get {
                    return this._officialOnly;
                }
                set {
                    this._officialOnly = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Civicinfo.us_v1.Data.VoterInfoRequest Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "elections";
                }
            }
            
            protected override string MethodName {
                get {
                    return "voterInfoQuery";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public partial class CivicinfoService {
        
        private const string Resource = "";
        
        private ElectionsResource _elections;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual ElectionsResource Elections {
            get {
                return this._elections;
            }
        }
    }
}
